{
  "collection": {
    "_": {
      "postman_id": "ddcf469d-0aba-4845-af0b-5eaab6d72df1"
    },
    "item": [
      {
        "id": "e9ad22ba-837b-4f85-9ba0-981f1a3238bc",
        "name": "Request Methods",
        "description": {
          "content": "HTTP has multiple request \"verbs\", such as `GET`, `PUT`, `POST`, `DELETE`,\n`PATCH`, `HEAD`, etc. \n\nAn HTTP Method (verb) defines how a request should be interpreted by a server. \nThe endpoints in this section demonstrate various HTTP Verbs. Postman supports \nall the HTTP Verbs, including some rarely used ones, such as `PROPFIND`, `UNLINK`, \netc.\n\nFor details about HTTP Verbs, refer to [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9)\n",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "fd22acbd-cb82-49c2-82de-f688345b179f",
            "name": "GET Request",
            "request": {
              "description": {
                "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "get"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "a138aa63-f066-4c9d-9675-b6cffc01c10a",
                "name": "GET Request Woops",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "get"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "foo1",
                        "value": "bar1"
                      },
                      {
                        "key": "foo2",
                        "value": "bar2"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "key": "Date",
                    "value": "Tue, 11 Jun 2019 10:43:13 GMT"
                  },
                  {
                    "key": "ETag",
                    "value": "W/\"161-aLhNcsGArlgLSKbxPqfBW3viHPI\""
                  },
                  {
                    "key": "Server",
                    "value": "nginx"
                  },
                  {
                    "key": "set-cookie",
                    "value": "sails.sid=s%3AGz-wblZgXE8FCDq7aJpx_tUgZUcG3Nsw.LdNEN8L0C7nGWkvGLwvdw6R2s6Syjr%2FzkvyevA8qR0c; Path=/; HttpOnly"
                  },
                  {
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "key": "Content-Length",
                    "value": "249"
                  },
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  }
                ],
                "body": "{\n    \"args\": {\n        \"foo1\": \"bar1\",\n        \"foo2\": \"bar2\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"postman-token\": \"5c27cd7d-6b16-4e5a-a0ef-191c9a3a275f\",\n        \"user-agent\": \"PostmanRuntime/7.6.1\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"url\": \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\"\n}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1e9eff07-1580-48cb-993d-e9a68150f888",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with request queries\", function () {",
                    "    pm.response.to.have.jsonBody('args.foo1', 'bar1')",
                    "        .and.have.jsonBody('args.foo2', 'bar2');",
                    "});"
                  ],
                  "_lastExecutionId": "5065259d-a475-4ffe-8414-de55cf5710c3"
                }
              }
            ]
          },
          {
            "id": "eafd3e2e-2568-4847-a900-3d9e3b5fd395",
            "name": "POST Raw Text",
            "request": {
              "description": {
                "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "post"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "338be7b5-bc6b-42b3-b7f0-cb760d9b0648",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with request body\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ],
                  "_lastExecutionId": "8c098e16-c6f8-4881-b939-81e419371545"
                }
              }
            ]
          },
          {
            "id": "0c497979-1113-4c8a-9374-76b5c6c645e2",
            "name": "POST Form Data",
            "request": {
              "description": {
                "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "post"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0c85547c-6dcf-49e7-9ddf-2c76649633dd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('form.foo1', 'bar1')",
                    "        .and.have.jsonBody('form.foo2', 'bar2');",
                    "});"
                  ],
                  "_lastExecutionId": "e68d56c2-7137-446d-a661-f70d629e89e9"
                }
              }
            ]
          },
          {
            "id": "5a239488-6a6a-470c-b7ff-eaa84a7ffe58",
            "name": "PUT Request",
            "request": {
              "description": {
                "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "put"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e5a1c629-4531-4a25-8f2d-c57e8b85c1a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ],
                  "_lastExecutionId": "ef7e8413-11f6-4f00-970a-53b37c68e30b"
                }
              }
            ]
          },
          {
            "id": "3b8f1e32-56c6-41b5-9981-7d99b09cd709",
            "name": "PATCH Request",
            "request": {
              "description": {
                "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "patch"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "63e159bf-ca02-43f6-a8d3-af615b4144bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ],
                  "_lastExecutionId": "c1d7ecbc-a426-42cb-993c-d84a41771f7d"
                }
              }
            ]
          },
          {
            "id": "04547aaf-db3d-4c72-b993-c35e86a03c49",
            "name": "DELETE Request",
            "request": {
              "description": {
                "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "delete"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0f85abfd-9d73-45cc-8433-9af7749fc762",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ],
                  "_lastExecutionId": "e524f0fe-c2b8-4732-a4fe-432df5177234"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f29662ac-12dd-46bb-aab7-f6eac91aa991",
        "name": "Headers",
        "description": {
          "content": "The following set of endpoints allow one to see the headers being sent as part of a request and to get a custom set of headers as part of response.\n\nHTTP header fields provide required information about the request or response, or about the object sent in the message body. Both request headers and response headers can be controlled using these endpoints.",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "29eb65cd-9865-48f1-bc09-e523e0c04014",
            "name": "Request Headers",
            "request": {
              "description": {
                "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "headers"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "my-sample-header",
                  "value": "Lorem ipsum dolor sit amet"
                }
              ],
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "ebe7ef85-c80e-460e-aa50-c3b03457180d",
                "name": "my-sample-header",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "headers"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "my-sample-header",
                      "value": "Lorem ipsum dolor sit amet"
                    }
                  ],
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "342"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\n    \"headers\": {\n        \"host\": \"echo.getpostman.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, sdch\",\n        \"accept-language\": \"en-US,en;q=0.8\",\n        \"cache-control\": \"no-cache\",\n        \"my-sample-header\": \"Lorem ipsum dolor sit amet\",\n        \"postman-token\": \"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\n        \"x-forwarded-port\": \"443\",\n        \"x-forwarded-proto\": \"https\"\n    }\n}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0068cecc-ad18-4015-bdae-28ac4a194f1c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "// we check to ensire that the headers we sent as request is returned as part of",
                    "// the response body. if you change the request headers, make sure to add them",
                    "// to the tests here",
                    "pm.test(\"sample request header should be returned in response body\", function () {",
                    "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                    "});"
                  ],
                  "_lastExecutionId": "00795d41-8dc1-46b6-aeae-b96f5dd11d31"
                }
              }
            ]
          },
          {
            "id": "81325070-3889-4142-80bb-150f3b3d6984",
            "name": "Response Headers",
            "request": {
              "description": {
                "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "response-headers"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "html"
                },
                "id": "432437d0-2906-4a43-9b64-c4790d5acc08",
                "name": "Response headers",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "response-headers"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "Content-Type",
                        "value": "text/html"
                      },
                      {
                        "key": "test",
                        "value": "response_headers"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "71"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "text/html; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  },
                  {
                    "name": "test",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "test",
                    "value": "response_headers"
                  }
                ],
                "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "946fadce-0d6a-43ea-9978-e729f9c462aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has the headers sent as part of request query\", function () {",
                    "    pm.response.to.have.header('foo1', 'bar1')",
                    "        .and.have.header('foo2', 'bar2');",
                    "});",
                    "",
                    "pm.test(\"sample request param should be returned in response body\", function () {",
                    "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                    "        .and.have.jsonBody('foo2', 'bar2');",
                    "});"
                  ],
                  "_lastExecutionId": "ab79e159-81de-4dde-a345-9d7be8cfb6a2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "694babc7-6779-4c23-962a-b5f87ec41234",
        "name": "Authentication Methods",
        "item": [
          {
            "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
            "name": "Basic Auth",
            "request": {
              "description": {
                "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "basic-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "basic",
                "basic": [
                  {
                    "type": "string",
                    "value": "postman",
                    "key": "username"
                  },
                  {
                    "type": "string",
                    "value": "password",
                    "key": "password"
                  },
                  {
                    "type": "any",
                    "key": "saveHelperData"
                  },
                  {
                    "type": "boolean",
                    "value": false,
                    "key": "showPassword"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "c3b6d719-8b10-45a2-a5ca-a0f6f2a7935c",
                "name": "200",
                "originalRequest": {
                  "description": {
                    "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "basic-auth"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "auth": {
                    "type": "basic",
                    "basic": [
                      {
                        "type": "string",
                        "value": "postman",
                        "key": "username"
                      },
                      {
                        "type": "string",
                        "value": "password",
                        "key": "password"
                      },
                      {
                        "type": "any",
                        "key": "saveHelperData"
                      },
                      {
                        "type": "boolean",
                        "value": false,
                        "key": "showPassword"
                      }
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "42"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"authenticated\":true}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "37d88aec-07c2-4ca1-be59-75ed726c4b9a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json saying 'authenticated'\", function () {",
                    "    pm.response.to.have.jsonBody('authenticated', true);",
                    "});"
                  ],
                  "_lastExecutionId": "b19df1c7-feb0-4f74-8b22-5c269184ca12"
                }
              }
            ]
          },
          {
            "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
            "name": "DigestAuth Success",
            "request": {
              "description": {
                "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "digest-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                }
              ],
              "method": "GET",
              "auth": {
                "type": "digest",
                "digest": [
                  {
                    "type": "string",
                    "value": "MD5",
                    "key": "algorithm"
                  },
                  {
                    "type": "string",
                    "value": "postman",
                    "key": "username"
                  },
                  {
                    "type": "string",
                    "value": "{{echo_digest_realm}}",
                    "key": "realm"
                  },
                  {
                    "type": "string",
                    "value": "password",
                    "key": "password"
                  },
                  {
                    "type": "string",
                    "value": "{{echo_digest_nonce}}",
                    "key": "nonce"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "nonceCount"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "clientNonce"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "opaque"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "qop"
                  },
                  {
                    "type": "any",
                    "key": "disableRetryRequest"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "bc874d05-7a57-49c4-90d8-80cfe34506e4",
                "name": "200",
                "originalRequest": {
                  "description": {
                    "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "digest-auth"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Authorization",
                      "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                    }
                  ],
                  "method": "GET",
                  "auth": {
                    "type": "digest",
                    "digest": [
                      {
                        "type": "string",
                        "value": "MD5",
                        "key": "algorithm"
                      },
                      {
                        "type": "string",
                        "value": "postman",
                        "key": "username"
                      },
                      {
                        "type": "string",
                        "value": "{{echo_digest_realm}}",
                        "key": "realm"
                      },
                      {
                        "type": "string",
                        "value": "password",
                        "key": "password"
                      },
                      {
                        "type": "string",
                        "value": "{{echo_digest_nonce}}",
                        "key": "nonce"
                      },
                      {
                        "type": "string",
                        "value": "",
                        "key": "nonceCount"
                      },
                      {
                        "type": "string",
                        "value": "",
                        "key": "clientNonce"
                      },
                      {
                        "type": "string",
                        "value": "",
                        "key": "opaque"
                      },
                      {
                        "type": "string",
                        "value": "",
                        "key": "qop"
                      },
                      {
                        "type": "any",
                        "key": "disableRetryRequest"
                      }
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "42"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"authenticated\":true}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e3035607-07e4-4a5d-a5e3-592c48b7460f",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"response code is 200\"] = responseCode.code === 200;",
                    "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                  ],
                  "_lastExecutionId": "745e5c52-f581-4a85-b30f-3199c3065730"
                }
              }
            ]
          },
          {
            "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
            "name": "Hawk Auth",
            "request": {
              "description": {
                "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "auth",
                  "hawk"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "hawk",
                "hawk": [
                  {
                    "type": "string",
                    "value": "dh37fgj492je",
                    "key": "authId"
                  },
                  {
                    "type": "string",
                    "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                    "key": "authKey"
                  },
                  {
                    "type": "string",
                    "value": "sha256",
                    "key": "algorithm"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "user"
                  },
                  {
                    "type": "any",
                    "key": "saveHelperData"
                  },
                  {
                    "type": "string",
                    "value": "RZKGNz",
                    "key": "nonce"
                  },
                  {
                    "type": "any",
                    "key": "extraData"
                  },
                  {
                    "type": "any",
                    "key": "appId"
                  },
                  {
                    "type": "any",
                    "key": "delegation"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "timestamp"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "26a84d63-c2e7-420a-8582-76d40716f355",
                "name": "Success",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "auth",
                      "hawk"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Authorization",
                      "key": "Authorization",
                      "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                    }
                  ],
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Server-Authorization",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server-Authorization",
                    "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  },
                  {
                    "name": "transfer-encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "transfer-encoding",
                    "value": "chunked"
                  }
                ],
                "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
                "cookie": [
                  {
                    "name": "getpostmanlogin",
                    "expires": "2016-04-15T10:54:28.000Z",
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "yes"
                  },
                  {
                    "name": "postman.sid",
                    "expires": "2016-04-15T10:54:28.000Z",
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                  },
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json saying passed 'status'\", function () {",
                    "    pm.response.to.have.jsonBody('status', 'pass');",
                    "});"
                  ],
                  "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
                }
              }
            ]
          },
          {
            "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
            "name": "OAuth1.0 (verify signature)",
            "request": {
              "description": {
                "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "oauth1"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth1",
                "oauth1": [
                  {
                    "type": "string",
                    "value": "RKCGzna7bv9YD57c",
                    "key": "consumerKey"
                  },
                  {
                    "type": "string",
                    "value": "D+EdQ-gs$-%@2Nu7",
                    "key": "consumerSecret"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "token"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "tokenSecret"
                  },
                  {
                    "type": "string",
                    "value": "HMAC-SHA1",
                    "key": "signatureMethod"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "timestamp"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "nonce"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "version"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "realm"
                  },
                  {
                    "type": "boolean",
                    "value": true,
                    "key": "addParamsToHeader"
                  },
                  {
                    "type": "any",
                    "key": "autoAddParam"
                  },
                  {
                    "type": "boolean",
                    "value": false,
                    "key": "addEmptyParamsToSign"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "48fbdb6f-cbaa-46d7-8c32-aae8f916f8c8",
                "name": "200",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "oauth1"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Authorization",
                      "key": "Authorization",
                      "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                    }
                  ],
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "95"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.8.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  }
                ],
                "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "c12747fd-818e-4858-9ffc-7e2e50f2fe19",
                "name": "401",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "oauth1"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Authorization",
                      "key": "Authorization",
                      "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                    }
                  ],
                  "method": "GET"
                },
                "status": "Unauthorized",
                "code": 401,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "536"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.8.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  }
                ],
                "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "50c80c4b-7093-40f7-ad3c-35d1d713720b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json saying passed 'status'\", function () {",
                    "    pm.response.to.have.jsonBody('status', 'pass');",
                    "});"
                  ],
                  "_lastExecutionId": "885be686-e857-4781-b6d5-a8bdb7facc60"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2702bcdd-91b8-4c83-a0b3-5bd29e4ef2d6",
        "name": "Cookie Manipulation",
        "description": {
          "content": "The cookie related endpoints allow one to get, set and delete simple cookies.\n\nCookies are small snippets of information that is stored in the browser and sent back to the server with every subsequent requests in order to store useful information between requests.\nIf you want to know more about cookies, read the [HTTP Cookie](https://en.wikipedia.org/wiki/HTTP_cookie) article on wikipedia.",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "ed229219-7d93-495a-8fd3-72c6e7e4d2e2",
            "name": "Set Cookies",
            "request": {
              "description": {
                "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "cookies",
                  "set"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "8af401c7-7d97-4341-8963-2fa780ae4923",
                "name": "Cookies",
                "originalRequest": {
                  "description": {
                    "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "cookies",
                      "set"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "foo1",
                        "value": "bar1"
                      },
                      {
                        "key": "foo2",
                        "value": "bar2"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "51"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:15:28 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"cookies\":{\"foo1\":\"bar\",\"foo2\":\"bar\"}}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6f729199-e60a-4a84-8f09-340383e2afc7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('response should be 200 or 302', function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                    "});",
                    "",
                    "pm.test('the \"foo1\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                    "});",
                    "",
                    "pm.test('the \"foo2\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                    "});",
                    "",
                    "// response code could be either a 200 or a redirection based on the settings of ",
                    "// the http client. hence we need to handle both cases",
                    "pm.test('response body should be valid', function () {",
                    "    if (pm.response.code === 200) {",
                    "        pm.response.to.have.jsonBody('cookies.foo1', 'bar1')",
                    "            .and.have.jsonBody('cookies.foo2', 'bar2');",
                    "    }",
                    "    else {",
                    "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                    "    }",
                    "});"
                  ],
                  "_lastExecutionId": "5cca95b5-a749-48bd-87ac-3b23c2841e64"
                }
              }
            ]
          },
          {
            "id": "65831a5e-9e45-4205-99ca-549d74afd7ff",
            "name": "Get Cookies",
            "request": {
              "description": {
                "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "cookies"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "b604a750-d41a-4e9b-a2eb-c29a7c77f9dc",
                "name": "Cookies",
                "originalRequest": {
                  "description": {
                    "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "cookies"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "46"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:16:29 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a7103205-62a8-463d-8459-4c6a089321cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('the \"foo1\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                    "});",
                    "",
                    "pm.test('the \"foo2\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                    "});",
                    "",
                    "pm.test('response body should be valid', function () {",
                    "    pm.response.to.have.jsonBody('cookies.foo1', 'bar1');",
                    "    pm.response.to.have.jsonBody('cookies.foo2', 'bar2');",
                    "});"
                  ],
                  "_lastExecutionId": "283749bb-bed4-4718-979a-2d7009078278"
                }
              }
            ]
          },
          {
            "id": "3c2c59a6-b190-4e5f-becc-c653eff28667",
            "name": "Delete Cookies",
            "request": {
              "description": {
                "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "cookies",
                  "delete"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": null
                  },
                  {
                    "key": "foo2",
                    "value": null
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "f253d260-4e1e-434a-82e4-f621dcea09b8",
                "name": "Cookies Response",
                "originalRequest": {
                  "description": {
                    "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "cookies",
                      "delete"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "foo1",
                        "value": null
                      },
                      {
                        "key": "foo2",
                        "value": null
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "46"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:16:00 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6b980339-4ce1-4c43-8271-4e089dbe365d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('response should be 200 or 302', function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                    "});",
                    "",
                    "pm.test('the \"foo1\" cookie should not be present', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo1');",
                    "});",
                    "",
                    "pm.test('the \"foo2\" cookie should not be present', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo2');",
                    "});",
                    "",
                    "// response code could be either a 200 or a redirection based on the settings of ",
                    "// the http client. hence we need to handle both cases",
                    "pm.test('response body should be valid', function () {",
                    "    if (pm.response.code === 200) {",
                    "        pm.response.to.not.have.jsonBody('cookies.foo1');",
                    "        pm.response.to.not.have.jsonBody('cookies.foo2');",
                    "    }",
                    "    else {",
                    "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                    "    }",
                    "});"
                  ],
                  "_lastExecutionId": "b477297f-eb65-4c9a-9e7c-5b5840f4977a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7bd72319-f530-430b-b242-56bfe97a65d8",
        "name": "Utilities",
        "item": [
          {
            "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
            "name": "Response Status Code",
            "request": {
              "description": {
                "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "status",
                  "200"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript"
                },
                "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
                "name": "200",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "status",
                      "200"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"e-1056260003\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"status\":200}",
                "cookie": [
                  {
                    "name": "getpostmanlogin",
                    "expires": "2016-04-15T11:14:58.000Z",
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "yes"
                  },
                  {
                    "name": "postman.sid",
                    "expires": "2016-04-15T11:14:58.000Z",
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                  },
                  {
                    "name": "_ga",
                    "expires": "2018-03-31T11:16:21.000Z",
                    "domain": ".echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "GA1.3.1703443399.1459422978"
                  },
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('status');",
                    "});",
                    "",
                    "// additional sanity tests",
                    "pm.test(\"status in response body must match the one in request\", function () {",
                    "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                    "});"
                  ],
                  "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
                }
              }
            ]
          },
          {
            "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
            "name": "Streamed Response",
            "request": {
              "description": {
                "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "stream",
                  "5"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has chunked transfer encoding header\", function () {",
                    "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                    "});"
                  ],
                  "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
                }
              }
            ]
          },
          {
            "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
            "name": "Delay Response",
            "request": {
              "description": {
                "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "delay",
                  "2"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "25994048-5137-4d58-92af-855aff7c6234",
                "name": "success-response",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "delay",
                      "3"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "13"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  }
                ],
                "body": "{\"delay\":\"3\"}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": "2038-01-18T21:44:07.000Z",
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                  "type": "text/javascript",
                  "exec": [
                    "var _ = require('lodash');",
                    "",
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('delay');",
                    "});",
                    "",
                    "// additional sanity tests",
                    "pm.test(\"request must have a valid delay\", function () {",
                    "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                    "});",
                    "pm.test(\"response should take more time than the delay specified\", function () {",
                    "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                    "});"
                  ],
                  "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
                }
              }
            ]
          },
          {
            "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
            "name": "Get UTF8 Encoded Response",
            "request": {
              "description": {
                "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "encoding",
                  "utf8"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has charset in content-type header\", function () {",
                    "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                    "});",
                    "",
                    "pm.test(\"response has chunked transfer encoding header\", function () {",
                    "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                    "});"
                  ],
                  "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
                }
              }
            ]
          },
          {
            "id": "d461228b-6484-4aa6-8de7-b940895741a0",
            "name": "GZip Compressed Response",
            "request": {
              "description": {
                "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "gzip"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('gzipped', true);",
                    "});",
                    "",
                    "pm.test('response headers should indicate valid content encoding', function  () {",
                    "    pm.response.to.have.header('content-encoding', 'gzip')",
                    "        .and.have.header('content-type', 'application/json');",
                    "});",
                    "",
                    "pm.test('requesting http client should accept compressed response', function () {",
                    "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                    "        .and.to.match(/.*gzip.*/);",
                    "});"
                  ],
                  "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
                }
              }
            ]
          },
          {
            "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
            "name": "Deflate Compressed Response",
            "request": {
              "description": {
                "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "deflate"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('deflated', true);",
                    "});",
                    "",
                    "pm.test('response headers should indicate valid content encoding', function  () {",
                    "    pm.response.to.have.header('content-encoding', 'deflate')",
                    "        .and.have.header('content-type', 'application/json');",
                    "});",
                    "",
                    "pm.test('requesting http client should accept compressed response', function () {",
                    "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                    "        .and.to.match(/.*deflate.*/);",
                    "});"
                  ],
                  "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
                }
              }
            ]
          },
          {
            "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
            "name": "IP address in JSON format",
            "request": {
              "description": {
                "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "ip"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('ip');",
                    "});",
                    "",
                    "pm.test(\"response must return a valid ip address\", function () {",
                    "    pm.expect(pm.response.json().ip).to",
                    "        // a really gnarly regular expression to ensure that ip address is in correct format",
                    "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                    "});"
                  ],
                  "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "645d45d1-22da-4b47-90a5-d7d52b1de7bb",
        "name": "Utilities / Date and Time",
        "description": {
          "content": "A set of `/time/*` mounted requests to perform date-time manipulations, among other operations.\n",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "a5d4d6d5-bef8-420b-9fbf-e21b8a1e09b1",
            "name": "Current UTC time",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "now"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "html"
                },
                "id": "ca211094-b349-4c98-a830-f222b29f8a2e",
                "name": "time as text",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "time",
                      "now"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "49"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "text/html; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:27:12 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
                  }
                ],
                "body": "Wed, 11 Jan 2017 10:27:12 GMT",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": "2038-01-18T21:44:07.000Z",
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "73453a52-4137-4f3e-90d6-3984ab6ae36b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response time matches server response 'date' header\", function () {",
                    "    pm.expect(pm.response.text()).to.eql(pm.response.headers.get('date'))",
                    "});"
                  ],
                  "_lastExecutionId": "f7a8df2d-a923-489f-8590-121c5884959a"
                }
              }
            ]
          },
          {
            "id": "c8d50185-29c4-4f53-9575-c392b4fde8a3",
            "name": "Timestamp validity",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "valid"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "6c2c373b-cc8b-4ef5-a76c-c6f0e6fb7d74",
                "name": "Valid Timestamp",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "time",
                      "valid"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "timestamp",
                        "value": "2016-10-10"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:27:33 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI; Path=/; HttpOnly"
                  }
                ],
                "body": "{\"valid\":true}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": "2038-01-18T21:44:07.000Z",
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "value": "s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI"
                  }
                ]
              },
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "c21cba1a-1042-4723-b43d-63680913a75b",
                "name": "Invalid Timestamp",
                "originalRequest": {
                  "url": {
                    "protocol": "https",
                    "path": [
                      "time",
                      "valid"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "timestamp",
                        "value": "2016-10-10"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "15"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:27:53 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"f-/i9mO/upK91ZtL0BkKFGtw\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI; Path=/; HttpOnly"
                  }
                ],
                "body": "{\"valid\":false}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": "2038-01-18T21:44:07.000Z",
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "value": "s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI"
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e9da491d-4d99-4573-bdac-bcc292514a2f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say whether request query time is valid\", function () {",
                    "    pm.response.to.have.jsonBody('valid', true);",
                    "});"
                  ],
                  "_lastExecutionId": "a32a0c04-31b5-47f2-9b08-cf91e1736bb5"
                }
              }
            ]
          },
          {
            "id": "212b68da-fdf7-4975-a19c-6f74e9e808a2",
            "name": "Format timestamp",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "format"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "format",
                    "value": "mm"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "76cec32e-facc-4bac-a014-298db8e01c85",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say whether request query time is valid\", function () {",
                    "    pm.response.to.have.jsonBody('format', '20');",
                    "});"
                  ],
                  "_lastExecutionId": "f4ad9d0e-2682-4be9-b8b2-4ea00c20503e"
                }
              }
            ]
          },
          {
            "id": "f83ababe-7141-4fd7-ad43-0800523e3133",
            "name": "Extract timestamp unit",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "unit"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "unit",
                    "value": "day"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "aeef2e27-c75f-4d9c-a45a-44f66e72e74f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say whether request query unit is valid\", function () {",
                    "    pm.response.to.have.jsonBody('unit', 1);",
                    "});"
                  ],
                  "_lastExecutionId": "b2d1ab98-a6ed-48e0-ac6a-85e6d645303d"
                }
              }
            ]
          },
          {
            "id": "9704752a-bdc9-4cf3-95f5-41f8d640556b",
            "name": "Time addition",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "add"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "years",
                    "value": "100"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c273fbfd-6b01-4d9d-af5b-2a15775203cf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the added years\", function () {",
                    "    pm.response.to.have.jsonBody('sum', 'Sat Oct 10 2116 00:00:00 GMT+0000');",
                    "});"
                  ],
                  "_lastExecutionId": "243679b7-9064-4a32-96fa-79b47411e320"
                }
              }
            ]
          },
          {
            "id": "95a5016d-a032-41d2-8808-b7e1676f9831",
            "name": "Time subtraction",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "subtract"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "years",
                    "value": "50"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f16c1cc3-5a11-4939-85c2-86d6566b9547",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the subtracted years\", function () {",
                    "    pm.response.to.have.jsonBody('difference', 'Mon Oct 10 1966 00:00:00 GMT+0000');",
                    "});"
                  ],
                  "_lastExecutionId": "70b6f3bf-f0fc-404d-a5df-90e99bb6921b"
                }
              }
            ]
          },
          {
            "id": "7028b100-a994-4204-bcc7-cd9f69366299",
            "name": "Start of time",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "start"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "unit",
                    "value": "month"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7972aa90-336e-47ac-a922-c8d8588d858e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the beginning of month\", function () {",
                    "    pm.response.to.have.jsonBody('start', 'Sat Oct 01 2016 00:00:00 GMT+0000');",
                    "});"
                  ],
                  "_lastExecutionId": "c5330198-ebf3-4b45-959f-3e87f4907669"
                }
              }
            ]
          },
          {
            "id": "90f71a58-4559-405f-b6f8-40ee051cf6dd",
            "name": "Object representation",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "object"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "055a57c1-fc26-43fb-ac02-0524487d1b7a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the date components\", function () {",
                    "    pm.expect(pm.response.json()).to.eql({",
                    "        \"years\": 2016,",
                    "        \"months\": 9,",
                    "        \"date\": 10,",
                    "        ",
                    "        \"hours\": 0,",
                    "        \"minutes\": 0,",
                    "        \"seconds\": 0,",
                    "        \"milliseconds\": 0",
                    "    });",
                    "});"
                  ],
                  "_lastExecutionId": "e83a9a44-d35b-475e-ad2f-8535ea667752"
                }
              }
            ]
          },
          {
            "id": "1a17bac8-0451-4c5c-86b4-c2ecfdda9734",
            "name": "Before comparisons",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "before"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "target",
                    "value": "2017-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a2917b24-d2a3-4927-bb2b-22e6181d3933",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is before target\", function () {",
                    "    pm.response.to.have.jsonBody('before', true);",
                    "});"
                  ],
                  "_lastExecutionId": "5f9e34ad-2309-4527-bade-144103846aff"
                }
              }
            ]
          },
          {
            "id": "5a54c7e6-3ee8-405d-9e31-bc43e60b86bb",
            "name": "After comparisons",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "after"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "target",
                    "value": "2017-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5549751f-5ef1-42fa-8847-f9bc6e2b434f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is not after target\", function () {",
                    "    pm.response.to.have.jsonBody('after', false);",
                    "});"
                  ],
                  "_lastExecutionId": "ab81a676-0e2c-4d54-9f80-f5ea8552b49b"
                }
              }
            ]
          },
          {
            "id": "0356ee05-cf82-490d-b6ec-1b62df3bff47",
            "name": "Between timestamps",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "between"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "start",
                    "value": "2017-10-10"
                  },
                  {
                    "key": "end",
                    "value": "2019-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5106a113-8ee9-47f1-b69c-eea0fffe8f2b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is not between start and end\", function () {",
                    "    pm.response.to.have.jsonBody('between', false);",
                    "});"
                  ],
                  "_lastExecutionId": "66c301fc-937b-4d9f-bc76-c1d0ee83b9fa"
                }
              }
            ]
          },
          {
            "id": "e4ff274f-e54a-4793-b54a-0dd7011f17b3",
            "name": "Leap year check",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "leap"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "99d38ceb-e45e-45f6-a41c-5501e2397b1a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is within leap year\", function () {",
                    "    pm.response.to.have.jsonBody('leap', true);",
                    "});"
                  ],
                  "_lastExecutionId": "5f7a2205-a3b7-4876-a883-93000b2be151"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ff9c2fa1-4387-48f0-9c99-0442fea35068",
        "name": "Auth: Digest",
        "description": {
          "content": "Digest authentication protects an endpoint with a username and password without actually transmitting the password over network.\nOne has to apply a hash function (like MD5, etc) to the username and password before sending them over the network.\n\n> Username: `postman`\n>\n> Password: `password`\n\nUnlike Basic-Auth, authentication happens using two consecutive requests where the first request returns `401 Unauthorised` along with `WWW-Authenticate` header containing information that needs to be used to authenticate subsequent calls.\n\nTo know more about digest authentication, refer to the [Digest Access Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#digest-auth) elaborates how to use the same within the Postman app.",
          "type": "text/plain"
        },
        "item": [
          {
            "id": "715da1e6-8db6-448b-b9c9-b09e68c0f355",
            "name": "DigestAuth Request",
            "request": {
              "description": {
                "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "digest-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9d839093-6eb1-4377-81f9-cf60d5a4e9d2",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"response code is 401\"] = responseCode.code === 401;",
                    "tests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));",
                    "",
                    "var authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),",
                    "    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,",
                    "    realmEnd = authenticateHeader.indexOf('\"',realmStart),",
                    "    realm = authenticateHeader.slice(realmStart,realmEnd),",
                    "    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,",
                    "    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),",
                    "    nonce = authenticateHeader.slice(nonceStart,nonceEnd);",
                    "    ",
                    "postman.setGlobalVariable('echo_digest_realm', realm);",
                    "postman.setGlobalVariable('echo_digest_nonce', nonce);"
                  ],
                  "_lastExecutionId": "f2a73ac2-a573-40ca-88a8-196f9bbc2a38"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "ddcf469d-0aba-4845-af0b-5eaab6d72df1",
      "name": "Postman Echo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Postman Echo is service you can use to test your REST clients and make sample API calls. It provides endpoints for `GET`, `POST`, `PUT`, various auth mechanisms and other utility endpoints.\n\nThe documentation for the endpoints as well as example responses can be found at [https://postman-echo.com](https://postman-echo.com/?source=echo-collection-app-onboarding)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "63d8b77e-9d9d-4369-8fcd-d0555cd9625a",
    "values": []
  },
  "globals": {
    "id": "f2b3f349-cfbb-4f8b-be0a-659f00affe58",
    "values": [
      {
        "type": "any",
        "value": "Users",
        "key": "echo_digest_realm"
      },
      {
        "type": "any",
        "value": "f8nW8QhReJycF0z3Ou8grFAs12jSMtkt",
        "key": "echo_digest_nonce"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 105,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 105,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 105,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 105,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 105,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 258,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 105,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 198.45714285714286,
      "responseMin": 104,
      "responseMax": 2128,
      "responseSd": 346.6519876536373,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1617795302287,
      "completed": 1617795333697
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 35,
          "cycles": 3,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21b975df-687b-4f5f-b7e9-783b983324f4",
          "httpRequestId": "7047710d-822e-4b98-a785-dbee42e993af"
        },
        "item": {
          "id": "fd22acbd-cb82-49c2-82de-f688345b179f",
          "name": "GET Request",
          "request": {
            "description": {
              "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "get"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a138aa63-f066-4c9d-9675-b6cffc01c10a",
              "name": "GET Request Woops",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "get"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "foo1",
                      "value": "bar1"
                    },
                    {
                      "key": "foo2",
                      "value": "bar2"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Date",
                  "value": "Tue, 11 Jun 2019 10:43:13 GMT"
                },
                {
                  "key": "ETag",
                  "value": "W/\"161-aLhNcsGArlgLSKbxPqfBW3viHPI\""
                },
                {
                  "key": "Server",
                  "value": "nginx"
                },
                {
                  "key": "set-cookie",
                  "value": "sails.sid=s%3AGz-wblZgXE8FCDq7aJpx_tUgZUcG3Nsw.LdNEN8L0C7nGWkvGLwvdw6R2s6Syjr%2FzkvyevA8qR0c; Path=/; HttpOnly"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Content-Length",
                  "value": "249"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "body": "{\n    \"args\": {\n        \"foo1\": \"bar1\",\n        \"foo2\": \"bar2\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"postman-token\": \"5c27cd7d-6b16-4e5a-a0ef-191c9a3a275f\",\n        \"user-agent\": \"PostmanRuntime/7.6.1\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"url\": \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e9eff07-1580-48cb-993d-e9a68150f888",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with request queries\", function () {",
                  "    pm.response.to.have.jsonBody('args.foo1', 'bar1')",
                  "        .and.have.jsonBody('args.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "5065259d-a475-4ffe-8414-de55cf5710c3"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "get"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2d8d432d-14e2-4742-a757-83b365c0cf60",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "44c9cf41-4c54-46f1-aa98-ca9e047f124c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:03 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "420"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1a4-slUEF20e1wLHkLXWypn6ZBOiVcI\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AmRNE8uNpvZntPP73by_0gOy48Z5hmx1L.orsEQgyEHHoo6TuiSVKUk2%2FAwFIscS6Kb6K6B2NhJSw; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              55,
              45,
              55,
              57,
              99,
              55,
              52,
              49,
              56,
              98,
              48,
              50,
              55,
              98,
              56,
              57,
              57,
              102,
              49,
              100,
              54,
              98,
              54,
              55,
              97,
              48,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              50,
              100,
              56,
              100,
              52,
              51,
              50,
              100,
              45,
              49,
              52,
              101,
              50,
              45,
              52,
              55,
              52,
              50,
              45,
              97,
              55,
              53,
              55,
              45,
              56,
              51,
              98,
              51,
              54,
              53,
              99,
              48,
              99,
              102,
              54,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              103,
              101,
              116,
              63,
              102,
              111,
              111,
              49,
              61,
              98,
              97,
              114,
              49,
              38,
              102,
              111,
              111,
              50,
              61,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1126,
          "responseSize": 420
        },
        "id": "fd22acbd-cb82-49c2-82de-f688345b179f",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with request queries",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "92673037-b200-43ee-8dcc-a341b9f82937",
          "length": 35,
          "cycles": 3,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "173bafbc-22e5-420c-a97b-dc3142f6753f"
        },
        "item": {
          "id": "eafd3e2e-2568-4847-a900-3d9e3b5fd395",
          "name": "POST Raw Text",
          "request": {
            "description": {
              "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "post"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "338be7b5-bc6b-42b3-b7f0-cb760d9b0648",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with request body\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "8c098e16-c6f8-4881-b939-81e419371545"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "post"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bfcbcb1c-0087-49b4-9d5a-6cc351dad393",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AmRNE8uNpvZntPP73by_0gOy48Z5hmx1L.orsEQgyEHHoo6TuiSVKUk2%2FAwFIscS6Kb6K6B2NhJSw",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "d1c4ce35-a0fb-419f-b7d7-28651b8b3954",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:03 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "629"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"275-dbUbxlJGTxB2f/5jcYvNvrK2vqc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AQugd9cGWGphPY5gXz2Xl4JfEcuj9bjJe.rTpb%2FYJ2YZsSBrVXl7c27NwY7L8F5bJbC7VREucmgsM; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              55,
              45,
              53,
              102,
              57,
              55,
              50,
              57,
              53,
              101,
              55,
              48,
              100,
              54,
              102,
              98,
              97,
              53,
              50,
              99,
              56,
              52,
              100,
              99,
              97,
              102,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              98,
              102,
              99,
              98,
              99,
              98,
              49,
              99,
              45,
              48,
              48,
              56,
              55,
              45,
              52,
              57,
              98,
              52,
              45,
              57,
              100,
              53,
              97,
              45,
              54,
              99,
              99,
              51,
              53,
              49,
              100,
              97,
              100,
              51,
              57,
              51,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              109,
              82,
              78,
              69,
              56,
              117,
              78,
              112,
              118,
              90,
              110,
              116,
              80,
              80,
              55,
              51,
              98,
              121,
              95,
              48,
              103,
              79,
              121,
              52,
              56,
              90,
              53,
              104,
              109,
              120,
              49,
              76,
              46,
              111,
              114,
              115,
              69,
              81,
              103,
              121,
              69,
              72,
              72,
              111,
              111,
              54,
              84,
              117,
              105,
              83,
              86,
              75,
              85,
              107,
              50,
              37,
              50,
              70,
              65,
              119,
              70,
              73,
              115,
              99,
              83,
              54,
              75,
              98,
              54,
              75,
              54,
              66,
              50,
              78,
              104,
              74,
              83,
              119,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 121,
          "responseSize": 629
        },
        "id": "eafd3e2e-2568-4847-a900-3d9e3b5fd395",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with request body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4a0bfd51-5d63-4a5c-93bc-b16f552ccb1e",
          "length": 35,
          "cycles": 3,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3fd7a015-2e41-485e-b60f-dd920b6dbce1"
        },
        "item": {
          "id": "0c497979-1113-4c8a-9374-76b5c6c645e2",
          "name": "POST Form Data",
          "request": {
            "description": {
              "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "post"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0c85547c-6dcf-49e7-9ddf-2c76649633dd",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('form.foo1', 'bar1')",
                  "        .and.have.jsonBody('form.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "e68d56c2-7137-446d-a661-f70d629e89e9"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "post"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "86e390a8-81ff-419b-acd0-e181b33a9667",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 19,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AQugd9cGWGphPY5gXz2Xl4JfEcuj9bjJe.rTpb%2FYJ2YZsSBrVXl7c27NwY7L8F5bJbC7VREucmgsM",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ]
          }
        },
        "response": {
          "id": "12433080-13f1-4510-8b3d-068adcd8ea0d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:03 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "646"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"286-thjq00h87fUHsOdwpoHmPtY6Lmc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AkOjQz1xtibZK3ho6nzFcQB0_y5fGHcny.R6ETyd0%2FWHPBLTdYusZLVog6CbyhNbd6x78oX0wa9nM; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              55,
              45,
              50,
              50,
              52,
              56,
              98,
              57,
              102,
              57,
              50,
              101,
              53,
              49,
              99,
              56,
              50,
              54,
              49,
              99,
              49,
              54,
              56,
              101,
              99,
              53,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              49,
              57,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              56,
              54,
              101,
              51,
              57,
              48,
              97,
              56,
              45,
              56,
              49,
              102,
              102,
              45,
              52,
              49,
              57,
              98,
              45,
              97,
              99,
              100,
              48,
              45,
              101,
              49,
              56,
              49,
              98,
              51,
              51,
              97,
              57,
              54,
              54,
              55,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              120,
              45,
              119,
              119,
              119,
              45,
              102,
              111,
              114,
              109,
              45,
              117,
              114,
              108,
              101,
              110,
              99,
              111,
              100,
              101,
              100,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              81,
              117,
              103,
              100,
              57,
              99,
              71,
              87,
              71,
              112,
              104,
              80,
              89,
              53,
              103,
              88,
              122,
              50,
              88,
              108,
              52,
              74,
              102,
              69,
              99,
              117,
              106,
              57,
              98,
              106,
              74,
              101,
              46,
              114,
              84,
              112,
              98,
              37,
              50,
              70,
              89,
              74,
              50,
              89,
              90,
              115,
              83,
              66,
              114,
              86,
              88,
              108,
              55,
              99,
              50,
              55,
              78,
              119,
              89,
              55,
              76,
              56,
              70,
              53,
              98,
              74,
              98,
              67,
              55,
              86,
              82,
              69,
              117,
              99,
              109,
              103,
              115,
              77,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 114,
          "responseSize": 646
        },
        "id": "0c497979-1113-4c8a-9374-76b5c6c645e2",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5ef6441a-7537-48a5-85c4-c82198bbc4bd",
          "length": 35,
          "cycles": 3,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dafe5b40-f89c-46e2-855b-4555b32516f5"
        },
        "item": {
          "id": "5a239488-6a6a-470c-b7ff-eaa84a7ffe58",
          "name": "PUT Request",
          "request": {
            "description": {
              "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "put"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e5a1c629-4531-4a25-8f2d-c57e8b85c1a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "ef7e8413-11f6-4f00-970a-53b37c68e30b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "put"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "766ca9ea-a750-45ef-93c4-3c9270445236",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AkOjQz1xtibZK3ho6nzFcQB0_y5fGHcny.R6ETyd0%2FWHPBLTdYusZLVog6CbyhNbd6x78oX0wa9nM",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "135250f7-b0c3-4672-8f46-575843176f7c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:04 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "628"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"274-+FogC2bPUQN7kq198caDAUnIFqc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AWcKkqNBmUOyqCbufTPxs_R3gvFnrt3SG.P2SqRnVF7G3cz7JCvHwG4AGWPSLtFjlRG7FTb297fiM; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              56,
              45,
              48,
              102,
              52,
              53,
              49,
              53,
              97,
              97,
              48,
              52,
              99,
              97,
              50,
              54,
              98,
              53,
              48,
              48,
              54,
              98,
              99,
              50,
              48,
              55,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              55,
              54,
              54,
              99,
              97,
              57,
              101,
              97,
              45,
              97,
              55,
              53,
              48,
              45,
              52,
              53,
              101,
              102,
              45,
              57,
              51,
              99,
              52,
              45,
              51,
              99,
              57,
              50,
              55,
              48,
              52,
              52,
              53,
              50,
              51,
              54,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              107,
              79,
              106,
              81,
              122,
              49,
              120,
              116,
              105,
              98,
              90,
              75,
              51,
              104,
              111,
              54,
              110,
              122,
              70,
              99,
              81,
              66,
              48,
              95,
              121,
              53,
              102,
              71,
              72,
              99,
              110,
              121,
              46,
              82,
              54,
              69,
              84,
              121,
              100,
              48,
              37,
              50,
              70,
              87,
              72,
              80,
              66,
              76,
              84,
              100,
              89,
              117,
              115,
              90,
              76,
              86,
              111,
              103,
              54,
              67,
              98,
              121,
              104,
              78,
              98,
              100,
              54,
              120,
              55,
              56,
              111,
              88,
              48,
              119,
              97,
              57,
              110,
              77,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              117,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 132,
          "responseSize": 628
        },
        "id": "5a239488-6a6a-470c-b7ff-eaa84a7ffe58",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a46893e3-61cc-4b34-8e30-430d7e0d3cfb",
          "length": 35,
          "cycles": 3,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1c844e06-9c88-4f99-93ff-dad81e4cb367"
        },
        "item": {
          "id": "3b8f1e32-56c6-41b5-9981-7d99b09cd709",
          "name": "PATCH Request",
          "request": {
            "description": {
              "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "patch"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "63e159bf-ca02-43f6-a8d3-af615b4144bf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "c1d7ecbc-a426-42cb-993c-d84a41771f7d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "patch"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "82ade5ab-c24e-4e73-b334-a9c11f217e2a",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AWcKkqNBmUOyqCbufTPxs_R3gvFnrt3SG.P2SqRnVF7G3cz7JCvHwG4AGWPSLtFjlRG7FTb297fiM",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "2aa7aa72-33d3-4744-b83b-a39483cb0ad0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:04 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "628"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"274-y9KcJojLZa+xWVYaF4nWPuDmoIU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A8ipqvQI-ACNwas5Bl9PDZV0egB9Cslfi.yyWqvZOA4%2FoLI%2FepqIXxeS%2FHTyZU8z1%2Bulu91vAGpd4; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              56,
              45,
              54,
              102,
              49,
              102,
              101,
              51,
              48,
              98,
              51,
              50,
              54,
              57,
              99,
              102,
              49,
              50,
              53,
              49,
              54,
              53,
              56,
              50,
              101,
              98,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              56,
              50,
              97,
              100,
              101,
              53,
              97,
              98,
              45,
              99,
              50,
              52,
              101,
              45,
              52,
              101,
              55,
              51,
              45,
              98,
              51,
              51,
              52,
              45,
              97,
              57,
              99,
              49,
              49,
              102,
              50,
              49,
              55,
              101,
              50,
              97,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              87,
              99,
              75,
              107,
              113,
              78,
              66,
              109,
              85,
              79,
              121,
              113,
              67,
              98,
              117,
              102,
              84,
              80,
              120,
              115,
              95,
              82,
              51,
              103,
              118,
              70,
              110,
              114,
              116,
              51,
              83,
              71,
              46,
              80,
              50,
              83,
              113,
              82,
              110,
              86,
              70,
              55,
              71,
              51,
              99,
              122,
              55,
              74,
              67,
              118,
              72,
              119,
              71,
              52,
              65,
              71,
              87,
              80,
              83,
              76,
              116,
              70,
              106,
              108,
              82,
              71,
              55,
              70,
              84,
              98,
              50,
              57,
              55,
              102,
              105,
              77,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              97,
              116,
              99,
              104,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 119,
          "responseSize": 628
        },
        "id": "3b8f1e32-56c6-41b5-9981-7d99b09cd709",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4acc004f-1d28-4f70-9773-68a1adc3da72",
          "length": 35,
          "cycles": 3,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "22a1349e-ac83-4a99-83f1-9f74312872e2"
        },
        "item": {
          "id": "04547aaf-db3d-4c72-b993-c35e86a03c49",
          "name": "DELETE Request",
          "request": {
            "description": {
              "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "delete"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f85abfd-9d73-45cc-8433-9af7749fc762",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "e524f0fe-c2b8-4732-a4fe-432df5177234"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "delete"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "570d0444-b22e-45e8-866d-66fe01c64da7",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A8ipqvQI-ACNwas5Bl9PDZV0egB9Cslfi.yyWqvZOA4%2FoLI%2FepqIXxeS%2FHTyZU8z1%2Bulu91vAGpd4",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "6b66f244-128a-465c-876d-adbff200467e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:04 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "637"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"27d-zKtLeirDzoc2xj3wAFAAlCYEwm4\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              56,
              45,
              53,
              102,
              51,
              53,
              54,
              51,
              51,
              101,
              53,
              50,
              102,
              56,
              99,
              98,
              54,
              52,
              53,
              51,
              50,
              54,
              97,
              56,
              49,
              100,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              53,
              55,
              48,
              100,
              48,
              52,
              52,
              52,
              45,
              98,
              50,
              50,
              101,
              45,
              52,
              53,
              101,
              56,
              45,
              56,
              54,
              54,
              100,
              45,
              54,
              54,
              102,
              101,
              48,
              49,
              99,
              54,
              52,
              100,
              97,
              55,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              56,
              105,
              112,
              113,
              118,
              81,
              73,
              45,
              65,
              67,
              78,
              119,
              97,
              115,
              53,
              66,
              108,
              57,
              80,
              68,
              90,
              86,
              48,
              101,
              103,
              66,
              57,
              67,
              115,
              108,
              102,
              105,
              46,
              121,
              121,
              87,
              113,
              118,
              90,
              79,
              65,
              52,
              37,
              50,
              70,
              111,
              76,
              73,
              37,
              50,
              70,
              101,
              112,
              113,
              73,
              88,
              120,
              101,
              83,
              37,
              50,
              70,
              72,
              84,
              121,
              90,
              85,
              56,
              122,
              49,
              37,
              50,
              66,
              117,
              108,
              117,
              57,
              49,
              118,
              65,
              71,
              112,
              100,
              52,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              100,
              101,
              108,
              101,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 115,
          "responseSize": 637
        },
        "id": "04547aaf-db3d-4c72-b993-c35e86a03c49",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a287dd2b-723a-43cf-a614-235be641279f",
          "length": 35,
          "cycles": 3,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c819b5f4-de5b-4569-be0a-be1503517a8a"
        },
        "item": {
          "id": "29eb65cd-9865-48f1-bc09-e523e0c04014",
          "name": "Request Headers",
          "request": {
            "description": {
              "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "my-sample-header",
                "value": "Lorem ipsum dolor sit amet"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ebe7ef85-c80e-460e-aa50-c3b03457180d",
              "name": "my-sample-header",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "my-sample-header",
                    "value": "Lorem ipsum dolor sit amet"
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "342"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\n    \"headers\": {\n        \"host\": \"echo.getpostman.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, sdch\",\n        \"accept-language\": \"en-US,en;q=0.8\",\n        \"cache-control\": \"no-cache\",\n        \"my-sample-header\": \"Lorem ipsum dolor sit amet\",\n        \"postman-token\": \"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\n        \"x-forwarded-port\": \"443\",\n        \"x-forwarded-proto\": \"https\"\n    }\n}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0068cecc-ad18-4015-bdae-28ac4a194f1c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// we check to ensire that the headers we sent as request is returned as part of",
                  "// the response body. if you change the request headers, make sure to add them",
                  "// to the tests here",
                  "pm.test(\"sample request header should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                  "});"
                ],
                "_lastExecutionId": "00795d41-8dc1-46b6-aeae-b96f5dd11d31"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "my-sample-header",
              "value": "Lorem ipsum dolor sit amet"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95e94d01-42a1-4048-bcf5-281386f4ba19",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A8ipqvQI-ACNwas5Bl9PDZV0egB9Cslfi.yyWqvZOA4%2FoLI%2FepqIXxeS%2FHTyZU8z1%2Bulu91vAGpd4",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "942743b5-b92e-4e9c-ad61-0ef82aedb878",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:04 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "484"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1e4-aJJV0YJ9AvR+nFmEatEZgElmBMU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AxsvRbiBf4ZV6GypoSt7Wygx_1jQ6_zcW.geZIy23KtNINDZqe%2FUseYofMsAY%2Bpn%2Fmg25P1pA5FIo; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              56,
              45,
              48,
              101,
              54,
              48,
              97,
              53,
              57,
              56,
              54,
              55,
              102,
              98,
              99,
              101,
              97,
              100,
              49,
              49,
              100,
              54,
              98,
              101,
              102,
              100,
              34,
              44,
              34,
              109,
              121,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              57,
              53,
              101,
              57,
              52,
              100,
              48,
              49,
              45,
              52,
              50,
              97,
              49,
              45,
              52,
              48,
              52,
              56,
              45,
              98,
              99,
              102,
              53,
              45,
              50,
              56,
              49,
              51,
              56,
              54,
              102,
              52,
              98,
              97,
              49,
              57,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              56,
              105,
              112,
              113,
              118,
              81,
              73,
              45,
              65,
              67,
              78,
              119,
              97,
              115,
              53,
              66,
              108,
              57,
              80,
              68,
              90,
              86,
              48,
              101,
              103,
              66,
              57,
              67,
              115,
              108,
              102,
              105,
              46,
              121,
              121,
              87,
              113,
              118,
              90,
              79,
              65,
              52,
              37,
              50,
              70,
              111,
              76,
              73,
              37,
              50,
              70,
              101,
              112,
              113,
              73,
              88,
              120,
              101,
              83,
              37,
              50,
              70,
              72,
              84,
              121,
              90,
              85,
              56,
              122,
              49,
              37,
              50,
              66,
              117,
              108,
              117,
              57,
              49,
              118,
              65,
              71,
              112,
              100,
              52,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 115,
          "responseSize": 484
        },
        "id": "29eb65cd-9865-48f1-bc09-e523e0c04014",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "sample request header should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f332ff43-b428-402e-9fea-2da42709bcb1",
          "length": 35,
          "cycles": 3,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "101f1b4c-c045-4d46-874a-001715490ee5"
        },
        "item": {
          "id": "81325070-3889-4142-80bb-150f3b3d6984",
          "name": "Response Headers",
          "request": {
            "description": {
              "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "response-headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html"
              },
              "id": "432437d0-2906-4a43-9b64-c4790d5acc08",
              "name": "Response headers",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "response-headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "Content-Type",
                      "value": "text/html"
                    },
                    {
                      "key": "test",
                      "value": "response_headers"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "71"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "test",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "test",
                  "value": "response_headers"
                }
              ],
              "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "946fadce-0d6a-43ea-9978-e729f9c462aa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has the headers sent as part of request query\", function () {",
                  "    pm.response.to.have.header('foo1', 'bar1')",
                  "        .and.have.header('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test(\"sample request param should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                  "        .and.have.jsonBody('foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "ab79e159-81de-4dde-a345-9d7be8cfb6a2"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "response-headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b558e0b1-ec43-4f9b-9e3d-a602a0e1b960",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AxsvRbiBf4ZV6GypoSt7Wygx_1jQ6_zcW.geZIy23KtNINDZqe%2FUseYofMsAY%2Bpn%2Fmg25P1pA5FIo",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "d42d9774-c188-42cd-a6eb-1b1797f7aeaa",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:05 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "foo1",
              "value": "bar1"
            },
            {
              "key": "foo2",
              "value": "bar2"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-PgOLWVqd2mMvcpNzTF0Cfy4hftg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ACQ7QFd9ZwIP8755Oe562QrzFBXqK4h9o.xXTzcy98OmeI77WwhVzQzr2f5PWXlC5HNqjGum0TaDo; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 113,
          "responseSize": 29
        },
        "id": "81325070-3889-4142-80bb-150f3b3d6984",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has the headers sent as part of request query",
            "skipped": false
          },
          {
            "assertion": "sample request param should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f8d08447-7d95-4de0-a278-99552c1ff572",
          "length": 35,
          "cycles": 3,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9e4a9ad2-7ddd-4537-abd7-c0c42d2578bb"
        },
        "item": {
          "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
          "name": "Basic Auth",
          "request": {
            "description": {
              "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "basic-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                },
                {
                  "type": "string",
                  "value": "password",
                  "key": "password"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "showPassword"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "c3b6d719-8b10-45a2-a5ca-a0f6f2a7935c",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "basic-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "showPassword"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "42"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"authenticated\":true}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37d88aec-07c2-4ca1-be59-75ed726c4b9a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying 'authenticated'\", function () {",
                  "    pm.response.to.have.jsonBody('authenticated', true);",
                  "});"
                ],
                "_lastExecutionId": "b19df1c7-feb0-4f74-8b22-5c269184ca12"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "basic-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic cG9zdG1hbjpwYXNzd29yZA==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1154bdbf-d561-4135-8e80-1969b457c4c1",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ACQ7QFd9ZwIP8755Oe562QrzFBXqK4h9o.xXTzcy98OmeI77WwhVzQzr2f5PWXlC5HNqjGum0TaDo",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              },
              {
                "type": "string",
                "value": "password",
                "key": "password"
              },
              {
                "type": "any",
                "key": "saveHelperData"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "showPassword"
              }
            ]
          }
        },
        "response": {
          "id": "7528c788-c0c8-4184-a2b5-1ea0c4e4f7aa",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:05 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "22"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"16-sJz8uwjdDv0wvm7//BYdNw8vMbU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 122,
          "responseSize": 22
        },
        "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json saying 'authenticated'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fe9086b4-e7c5-4ad3-bb55-c0c17efbedb8",
          "length": 35,
          "cycles": 3,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "963af3c9-f1f5-4e00-8661-9bc5f601143b"
        },
        "item": {
          "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
          "name": "DigestAuth Success",
          "request": {
            "description": {
              "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "digest-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "digest",
              "digest": [
                {
                  "type": "string",
                  "value": "MD5",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                },
                {
                  "type": "string",
                  "value": "{{echo_digest_realm}}",
                  "key": "realm"
                },
                {
                  "type": "string",
                  "value": "password",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "{{echo_digest_nonce}}",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonceCount"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "clientNonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "opaque"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "qop"
                },
                {
                  "type": "any",
                  "key": "disableRetryRequest"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "bc874d05-7a57-49c4-90d8-80cfe34506e4",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "digest-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "digest",
                  "digest": [
                    {
                      "type": "string",
                      "value": "MD5",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_realm}}",
                      "key": "realm"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_nonce}}",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonceCount"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "clientNonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "opaque"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "qop"
                    },
                    {
                      "type": "any",
                      "key": "disableRetryRequest"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "42"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"authenticated\":true}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3035607-07e4-4a5d-a5e3-592c48b7460f",
                "type": "text/javascript",
                "exec": [
                  "tests[\"response code is 200\"] = responseCode.code === 200;",
                  "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                ],
                "_lastExecutionId": "745e5c52-f581-4a85-b30f-3199c3065730"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "digest-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Digest username=\"postman\", realm=\"{{echo_digest_realm}}\", nonce=\"{{echo_digest_nonce}}\", uri=\"/digest-auth\", algorithm=\"MD5\", response=\"c70c5ea59136d041c00e30ebc2e37133\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "55ea7e27-2388-4d40-a352-44aa677f778d",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ACQ7QFd9ZwIP8755Oe562QrzFBXqK4h9o.xXTzcy98OmeI77WwhVzQzr2f5PWXlC5HNqjGum0TaDo",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "digest",
            "digest": [
              {
                "type": "string",
                "value": "MD5",
                "key": "algorithm"
              },
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              },
              {
                "type": "string",
                "value": "{{echo_digest_realm}}",
                "key": "realm"
              },
              {
                "type": "string",
                "value": "password",
                "key": "password"
              },
              {
                "type": "string",
                "value": "{{echo_digest_nonce}}",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonceCount"
              },
              {
                "type": "string",
                "value": "",
                "key": "clientNonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "opaque"
              },
              {
                "type": "string",
                "value": "",
                "key": "qop"
              },
              {
                "type": "any",
                "key": "disableRetryRequest"
              }
            ]
          }
        },
        "response": {
          "id": "e8d0f65b-ef79-49ce-b1e0-479dd8f1f6b4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:05 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "22"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"16-sJz8uwjdDv0wvm7//BYdNw8vMbU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AYmcAZnpW6LeXay7jCQTF6hQ4tysQ26Lr.XErjqa93lXKQX1A4BAsD%2Buu40IbEpL0xFhWmBYa1hzk; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 114,
          "responseSize": 22
        },
        "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
        "assertions": [
          {
            "assertion": "response code is 200",
            "skipped": false
          },
          {
            "assertion": "body contains authenticated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a8e2ae38-f19e-420e-ae54-c1c2bf582df3",
          "length": 35,
          "cycles": 3,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a868a2f0-bc24-4160-a226-9a4e9e7534c0"
        },
        "item": {
          "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
          "name": "Hawk Auth",
          "request": {
            "description": {
              "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "auth",
                "hawk"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "hawk",
              "hawk": [
                {
                  "type": "string",
                  "value": "dh37fgj492je",
                  "key": "authId"
                },
                {
                  "type": "string",
                  "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                  "key": "authKey"
                },
                {
                  "type": "string",
                  "value": "sha256",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "user"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "string",
                  "value": "RZKGNz",
                  "key": "nonce"
                },
                {
                  "type": "any",
                  "key": "extraData"
                },
                {
                  "type": "any",
                  "key": "appId"
                },
                {
                  "type": "any",
                  "key": "delegation"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "26a84d63-c2e7-420a-8582-76d40716f355",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Server-Authorization",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server-Authorization",
                  "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "auth",
              "hawk"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Hawk id=\"dh37fgj492je\", ts=\"1617795305\", nonce=\"RZKGNz\", mac=\"GfxwoUNLzK5ZvRxpOPJWUrTT1Mn49pbolGEMbhsxrzw=\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "74efd6d2-579f-4046-8213-2b0ee5b0c1d8",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AYmcAZnpW6LeXay7jCQTF6hQ4tysQ26Lr.XErjqa93lXKQX1A4BAsD%2Buu40IbEpL0xFhWmBYa1hzk",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "hawk",
            "hawk": [
              {
                "type": "string",
                "value": "dh37fgj492je",
                "key": "authId"
              },
              {
                "type": "string",
                "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                "key": "authKey"
              },
              {
                "type": "string",
                "value": "sha256",
                "key": "algorithm"
              },
              {
                "type": "string",
                "value": "",
                "key": "user"
              },
              {
                "type": "any",
                "key": "saveHelperData"
              },
              {
                "type": "string",
                "value": "RZKGNz",
                "key": "nonce"
              },
              {
                "type": "any",
                "key": "extraData"
              },
              {
                "type": "any",
                "key": "appId"
              },
              {
                "type": "any",
                "key": "delegation"
              },
              {
                "type": "string",
                "value": "1617795305",
                "key": "timestamp",
                "system": true
              }
            ]
          }
        },
        "response": {
          "id": "5d66d3b8-3d87-42fb-8dc6-e608e5417042",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:05 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "44"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"2c-UZ5QLCWp1r9bxkKdVTupq1/XxUI\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ApiwfUBr4xOZ07hKp07WX4oYjcL26-6Ui.50Cu912HYCtfJF1vnHn%2FaqtHUh9rHkS2jCQxPiQDl%2BQ; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              72,
              97,
              119,
              107,
              32,
              65,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 108,
          "responseSize": 44
        },
        "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json saying passed 'status'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response body has json saying passed 'status'",
              "message": "expected { Object (message) } in response to contain property 'status'",
              "stack": "AssertionError: expected { Object (message) } in response to contain property 'status'\n   at Object.eval sandbox-script.js:2:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a93fbf8f-9c7d-4257-9202-e5ebe678e2cc",
          "length": 35,
          "cycles": 3,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "51e4b6dc-df54-4b15-ae63-e4cde24d3817"
        },
        "item": {
          "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
          "name": "OAuth1.0 (verify signature)",
          "request": {
            "description": {
              "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "oauth1"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth1",
              "oauth1": [
                {
                  "type": "string",
                  "value": "RKCGzna7bv9YD57c",
                  "key": "consumerKey"
                },
                {
                  "type": "string",
                  "value": "D+EdQ-gs$-%@2Nu7",
                  "key": "consumerSecret"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "token"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "tokenSecret"
                },
                {
                  "type": "string",
                  "value": "HMAC-SHA1",
                  "key": "signatureMethod"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "version"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "realm"
                },
                {
                  "type": "boolean",
                  "value": true,
                  "key": "addParamsToHeader"
                },
                {
                  "type": "any",
                  "key": "autoAddParam"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "addEmptyParamsToSign"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "48fbdb6f-cbaa-46d7-8c32-aae8f916f8c8",
              "name": "200",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "95"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.8.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "c12747fd-818e-4858-9ffc-7e2e50f2fe19",
              "name": "401",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                  }
                ],
                "method": "GET"
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "536"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.8.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50c80c4b-7093-40f7-ad3c-35d1d713720b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "885be686-e857-4781-b6d5-a8bdb7facc60"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "oauth1"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1617795305\",oauth_nonce=\"HVlEXsnrzyX\",oauth_signature=\"IxnnnVxNufizXURsJFGDN2lpb4w%3D\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a2752467-f4fe-4eaa-babd-374adf5e755d",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ApiwfUBr4xOZ07hKp07WX4oYjcL26-6Ui.50Cu912HYCtfJF1vnHn%2FaqtHUh9rHkS2jCQxPiQDl%2BQ",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth1",
            "oauth1": [
              {
                "type": "string",
                "value": "RKCGzna7bv9YD57c",
                "key": "consumerKey"
              },
              {
                "type": "string",
                "value": "D+EdQ-gs$-%@2Nu7",
                "key": "consumerSecret"
              },
              {
                "type": "string",
                "value": "",
                "key": "token"
              },
              {
                "type": "string",
                "value": "",
                "key": "tokenSecret"
              },
              {
                "type": "string",
                "value": "HMAC-SHA1",
                "key": "signatureMethod"
              },
              {
                "type": "string",
                "value": "",
                "key": "timestamp"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "version"
              },
              {
                "type": "string",
                "value": "",
                "key": "realm"
              },
              {
                "type": "boolean",
                "value": true,
                "key": "addParamsToHeader"
              },
              {
                "type": "any",
                "key": "autoAddParam"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "addEmptyParamsToSign"
              }
            ]
          }
        },
        "response": {
          "id": "e67c394d-69d4-4947-925e-e0d4021b0114",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:05 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-dXPS7nEYaa6r6PVjN9RjHjrHaLU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AlbOI4STrKV_Dl9HzxZvVBjPTcsOLLWTx.ytI7sA8uYwik9fOPXWz2sWQJx7iJGMqz1hBw6w5cK%2B8; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              112,
              97,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              65,
              117,
              116,
              104,
              45,
              49,
              46,
              48,
              97,
              32,
              115,
              105,
              103,
              110,
              97,
              116,
              117,
              114,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              119,
              97,
              115,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 114,
          "responseSize": 78
        },
        "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json saying passed 'status'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b9959116-a584-4953-824f-7f09020cce00",
          "length": 35,
          "cycles": 3,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b1efda6a-1247-499b-a373-0c3e98967c5c"
        },
        "item": {
          "id": "ed229219-7d93-495a-8fd3-72c6e7e4d2e2",
          "name": "Set Cookies",
          "request": {
            "description": {
              "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies",
                "set"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "8af401c7-7d97-4341-8963-2fa780ae4923",
              "name": "Cookies",
              "originalRequest": {
                "description": {
                  "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "cookies",
                    "set"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "foo1",
                      "value": "bar1"
                    },
                    {
                      "key": "foo2",
                      "value": "bar2"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "51"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:15:28 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo1\":\"bar\",\"foo2\":\"bar\"}}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f729199-e60a-4a84-8f09-340383e2afc7",
                "type": "text/javascript",
                "exec": [
                  "pm.test('response should be 200 or 302', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                  "});",
                  "",
                  "// response code could be either a 200 or a redirection based on the settings of ",
                  "// the http client. hence we need to handle both cases",
                  "pm.test('response body should be valid', function () {",
                  "    if (pm.response.code === 200) {",
                  "        pm.response.to.have.jsonBody('cookies.foo1', 'bar1')",
                  "            .and.have.jsonBody('cookies.foo2', 'bar2');",
                  "    }",
                  "    else {",
                  "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "5cca95b5-a749-48bd-87ac-3b23c2841e64"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies",
              "set"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9001b881-6a31-49ba-9104-ebef0efccdb6",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AJJrtG_lk0cFH72AZIygd6HxJc9PtyykP.uV4nfaVQ659raXgiNsqrfOrcsWInelWxHm1vWEE%2FrIQ; foo1=bar1; foo2=bar2",
              "system": true
            },
            {
              "key": "Referer",
              "value": "https://postman-echo.com/cookies/set?foo1=bar1&foo2=bar2",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f4303bf2-9f35-4dc9-99cd-b4e6e5ec3068",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:06 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "41"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"29-JRHqGq7F5tGozH71XMqVk/pLueo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3At9UflCTWMZYzalaR-M7tmHdz9IOCSlrQ.tVAKMRIEtFTUO6Gr8bdHq9sAJkA99ncufXytHvACBs0; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 219,
          "responseSize": 41
        },
        "id": "ed229219-7d93-495a-8fd3-72c6e7e4d2e2",
        "assertions": [
          {
            "assertion": "response should be 200 or 302",
            "skipped": false
          },
          {
            "assertion": "the \"foo1\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "the \"foo2\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "response body should be valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e32c74c3-7ef7-46ae-a30c-fb5eeba21dc9",
          "length": 35,
          "cycles": 3,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "458e3415-ebba-479a-b75d-eed90e1af836"
        },
        "item": {
          "id": "65831a5e-9e45-4205-99ca-549d74afd7ff",
          "name": "Get Cookies",
          "request": {
            "description": {
              "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "b604a750-d41a-4e9b-a2eb-c29a7c77f9dc",
              "name": "Cookies",
              "originalRequest": {
                "description": {
                  "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "cookies"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "46"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:16:29 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a7103205-62a8-463d-8459-4c6a089321cc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test('response body should be valid', function () {",
                  "    pm.response.to.have.jsonBody('cookies.foo1', 'bar1');",
                  "    pm.response.to.have.jsonBody('cookies.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "283749bb-bed4-4718-979a-2d7009078278"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dd90d0e6-b8bb-4359-a0d5-2b9d97d44608",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3At9UflCTWMZYzalaR-M7tmHdz9IOCSlrQ.tVAKMRIEtFTUO6Gr8bdHq9sAJkA99ncufXytHvACBs0; foo1=bar1; foo2=bar2",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "203b5863-75c0-4dfa-8708-416ea01f3222",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:06 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "41"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"29-JRHqGq7F5tGozH71XMqVk/pLueo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3At8qTYOkD1m9jeRG7eVEynwP89us7YLZs.5BTqhN%2B0Fu9mwyob6YmjNzqmTYZ0AvSMyXoFGaMYww4; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 117,
          "responseSize": 41
        },
        "id": "65831a5e-9e45-4205-99ca-549d74afd7ff",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "the \"foo1\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "the \"foo2\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "response body should be valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fbff3a76-d354-4863-bff3-20904b4b25cc",
          "length": 35,
          "cycles": 3,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b3f9aeaa-3848-4cec-aab6-c3bdee92814b"
        },
        "item": {
          "id": "3c2c59a6-b190-4e5f-becc-c653eff28667",
          "name": "Delete Cookies",
          "request": {
            "description": {
              "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies",
                "delete"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": null
                },
                {
                  "key": "foo2",
                  "value": null
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "f253d260-4e1e-434a-82e4-f621dcea09b8",
              "name": "Cookies Response",
              "originalRequest": {
                "description": {
                  "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "cookies",
                    "delete"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "foo1",
                      "value": null
                    },
                    {
                      "key": "foo2",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "46"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:16:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6b980339-4ce1-4c43-8271-4e089dbe365d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('response should be 200 or 302', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie should not be present', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie should not be present', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo2');",
                  "});",
                  "",
                  "// response code could be either a 200 or a redirection based on the settings of ",
                  "// the http client. hence we need to handle both cases",
                  "pm.test('response body should be valid', function () {",
                  "    if (pm.response.code === 200) {",
                  "        pm.response.to.not.have.jsonBody('cookies.foo1');",
                  "        pm.response.to.not.have.jsonBody('cookies.foo2');",
                  "    }",
                  "    else {",
                  "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "b477297f-eb65-4c9a-9e7c-5b5840f4977a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies",
              "delete"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": null
              },
              {
                "key": "foo2",
                "value": null
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "91848a80-9ee1-4c0e-8bf1-cc4a5feae548",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ALBkRcue4R1PKGf9tGQHyRpeJHY0EW1hY.UgxggOom0XzwjjVByvwwVFJhPc%2ByXGRYLaWRfmFr64M",
              "system": true
            },
            {
              "key": "Referer",
              "value": "https://postman-echo.com/cookies/delete?foo1&foo2",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f8284ede-b673-4028-957b-a4ba9d2a87c4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:06 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"e-HwHgMXOuquwNiBd0Mx9LHc/Rmfk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AvbCYVpl6JyTTNtJAiJe8mYzk_6cWxSTN.Mp9Rwfum%2Bg%2BJsox%2BzdoBLQ%2BXeoIUm6HNuF7lKooVDag; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 229,
          "responseSize": 14
        },
        "id": "3c2c59a6-b190-4e5f-becc-c653eff28667",
        "assertions": [
          {
            "assertion": "response should be 200 or 302",
            "skipped": false
          },
          {
            "assertion": "the \"foo1\" cookie should not be present",
            "skipped": false
          },
          {
            "assertion": "the \"foo2\" cookie should not be present",
            "skipped": false
          },
          {
            "assertion": "response body should be valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c5fafcfe-9b6c-4004-8efb-d08458764e23",
          "length": 35,
          "cycles": 3,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "497432d6-c4a6-4024-b6a6-514596f9c9d2"
        },
        "item": {
          "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
          "name": "Response Status Code",
          "request": {
            "description": {
              "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "status",
                "200"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
              "name": "200",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"e-1056260003\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"status\":200}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": "2016-04-15T11:14:58.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": "2016-04-15T11:14:58.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                },
                {
                  "name": "_ga",
                  "expires": "2018-03-31T11:16:21.000Z",
                  "domain": ".echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "GA1.3.1703443399.1459422978"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('status');",
                  "});",
                  "",
                  "// additional sanity tests",
                  "pm.test(\"status in response body must match the one in request\", function () {",
                  "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                  "});"
                ],
                "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "status",
              "200"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6ee7ffc5-b281-41c7-8456-546d8aad378e",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AvbCYVpl6JyTTNtJAiJe8mYzk_6cWxSTN.Mp9Rwfum%2Bg%2BJsox%2BzdoBLQ%2BXeoIUm6HNuF7lKooVDag",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "813c7555-72b0-4bd2-aa0d-53957262ecb0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:07 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"e-QlsUp1vTYvBgYHrHCBYe2n/q268\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A-xRs-xFwl7xDUvBhy3Eu5nOJ64l4qfl1.OemEeTEWmCxApN9GCzQfbBoMjPNFbkwVj3P1IIj%2B1og; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 108,
          "responseSize": 14
        },
        "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "status in response body must match the one in request",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e89ac7be-c576-4043-a4be-795ddac13ede",
          "length": 35,
          "cycles": 3,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dda5f402-955e-444e-bf7d-a10624997512"
        },
        "item": {
          "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
          "name": "Streamed Response",
          "request": {
            "description": {
              "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "stream",
                "5"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has chunked transfer encoding header\", function () {",
                  "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                  "});"
                ],
                "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "stream",
              "5"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "73b5623b-ad0a-41cc-933e-8e240a9f6e38",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A-xRs-xFwl7xDUvBhy3Eu5nOJ64l4qfl1.OemEeTEWmCxApN9GCzQfbBoMjPNFbkwVj3P1IIj%2B1og",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "75a02937-b24d-44dc-b313-508a71edba45",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:07 GMT"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Ar7w8oAWs6hj8LseEWFzEYrPXTeGK62RU.po3XiiyBe0tM5l4QVauVBLa8IKP33Jmo8SyRAckdZ7E; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              98,
              45,
              49,
              52,
              100,
              57,
              51,
              49,
              100,
              55,
              53,
              49,
              53,
              97,
              55,
              99,
              52,
              50,
              50,
              101,
              48,
              48,
              48,
              101,
              55,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              55,
              51,
              98,
              53,
              54,
              50,
              51,
              98,
              45,
              97,
              100,
              48,
              97,
              45,
              52,
              49,
              99,
              99,
              45,
              57,
              51,
              51,
              101,
              45,
              56,
              101,
              50,
              52,
              48,
              97,
              57,
              102,
              54,
              101,
              51,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              45,
              120,
              82,
              115,
              45,
              120,
              70,
              119,
              108,
              55,
              120,
              68,
              85,
              118,
              66,
              104,
              121,
              51,
              69,
              117,
              53,
              110,
              79,
              74,
              54,
              52,
              108,
              52,
              113,
              102,
              108,
              49,
              46,
              79,
              101,
              109,
              69,
              101,
              84,
              69,
              87,
              109,
              67,
              120,
              65,
              112,
              78,
              57,
              71,
              67,
              122,
              81,
              102,
              98,
              66,
              111,
              77,
              106,
              80,
              78,
              70,
              98,
              107,
              119,
              86,
              106,
              51,
              80,
              49,
              73,
              73,
              106,
              37,
              50,
              66,
              49,
              111,
              103,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              98,
              45,
              49,
              52,
              100,
              57,
              51,
              49,
              100,
              55,
              53,
              49,
              53,
              97,
              55,
              99,
              52,
              50,
              50,
              101,
              48,
              48,
              48,
              101,
              55,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              55,
              51,
              98,
              53,
              54,
              50,
              51,
              98,
              45,
              97,
              100,
              48,
              97,
              45,
              52,
              49,
              99,
              99,
              45,
              57,
              51,
              51,
              101,
              45,
              56,
              101,
              50,
              52,
              48,
              97,
              57,
              102,
              54,
              101,
              51,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              45,
              120,
              82,
              115,
              45,
              120,
              70,
              119,
              108,
              55,
              120,
              68,
              85,
              118,
              66,
              104,
              121,
              51,
              69,
              117,
              53,
              110,
              79,
              74,
              54,
              52,
              108,
              52,
              113,
              102,
              108,
              49,
              46,
              79,
              101,
              109,
              69,
              101,
              84,
              69,
              87,
              109,
              67,
              120,
              65,
              112,
              78,
              57,
              71,
              67,
              122,
              81,
              102,
              98,
              66,
              111,
              77,
              106,
              80,
              78,
              70,
              98,
              107,
              119,
              86,
              106,
              51,
              80,
              49,
              73,
              73,
              106,
              37,
              50,
              66,
              49,
              111,
              103,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              98,
              45,
              49,
              52,
              100,
              57,
              51,
              49,
              100,
              55,
              53,
              49,
              53,
              97,
              55,
              99,
              52,
              50,
              50,
              101,
              48,
              48,
              48,
              101,
              55,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              55,
              51,
              98,
              53,
              54,
              50,
              51,
              98,
              45,
              97,
              100,
              48,
              97,
              45,
              52,
              49,
              99,
              99,
              45,
              57,
              51,
              51,
              101,
              45,
              56,
              101,
              50,
              52,
              48,
              97,
              57,
              102,
              54,
              101,
              51,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              45,
              120,
              82,
              115,
              45,
              120,
              70,
              119,
              108,
              55,
              120,
              68,
              85,
              118,
              66,
              104,
              121,
              51,
              69,
              117,
              53,
              110,
              79,
              74,
              54,
              52,
              108,
              52,
              113,
              102,
              108,
              49,
              46,
              79,
              101,
              109,
              69,
              101,
              84,
              69,
              87,
              109,
              67,
              120,
              65,
              112,
              78,
              57,
              71,
              67,
              122,
              81,
              102,
              98,
              66,
              111,
              77,
              106,
              80,
              78,
              70,
              98,
              107,
              119,
              86,
              106,
              51,
              80,
              49,
              73,
              73,
              106,
              37,
              50,
              66,
              49,
              111,
              103,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              98,
              45,
              49,
              52,
              100,
              57,
              51,
              49,
              100,
              55,
              53,
              49,
              53,
              97,
              55,
              99,
              52,
              50,
              50,
              101,
              48,
              48,
              48,
              101,
              55,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              55,
              51,
              98,
              53,
              54,
              50,
              51,
              98,
              45,
              97,
              100,
              48,
              97,
              45,
              52,
              49,
              99,
              99,
              45,
              57,
              51,
              51,
              101,
              45,
              56,
              101,
              50,
              52,
              48,
              97,
              57,
              102,
              54,
              101,
              51,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              45,
              120,
              82,
              115,
              45,
              120,
              70,
              119,
              108,
              55,
              120,
              68,
              85,
              118,
              66,
              104,
              121,
              51,
              69,
              117,
              53,
              110,
              79,
              74,
              54,
              52,
              108,
              52,
              113,
              102,
              108,
              49,
              46,
              79,
              101,
              109,
              69,
              101,
              84,
              69,
              87,
              109,
              67,
              120,
              65,
              112,
              78,
              57,
              71,
              67,
              122,
              81,
              102,
              98,
              66,
              111,
              77,
              106,
              80,
              78,
              70,
              98,
              107,
              119,
              86,
              106,
              51,
              80,
              49,
              73,
              73,
              106,
              37,
              50,
              66,
              49,
              111,
              103,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              98,
              45,
              49,
              52,
              100,
              57,
              51,
              49,
              100,
              55,
              53,
              49,
              53,
              97,
              55,
              99,
              52,
              50,
              50,
              101,
              48,
              48,
              48,
              101,
              55,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              55,
              51,
              98,
              53,
              54,
              50,
              51,
              98,
              45,
              97,
              100,
              48,
              97,
              45,
              52,
              49,
              99,
              99,
              45,
              57,
              51,
              51,
              101,
              45,
              56,
              101,
              50,
              52,
              48,
              97,
              57,
              102,
              54,
              101,
              51,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              45,
              120,
              82,
              115,
              45,
              120,
              70,
              119,
              108,
              55,
              120,
              68,
              85,
              118,
              66,
              104,
              121,
              51,
              69,
              117,
              53,
              110,
              79,
              74,
              54,
              52,
              108,
              52,
              113,
              102,
              108,
              49,
              46,
              79,
              101,
              109,
              69,
              101,
              84,
              69,
              87,
              109,
              67,
              120,
              65,
              112,
              78,
              57,
              71,
              67,
              122,
              81,
              102,
              98,
              66,
              111,
              77,
              106,
              80,
              78,
              70,
              98,
              107,
              119,
              86,
              106,
              51,
              80,
              49,
              73,
              73,
              106,
              37,
              50,
              66,
              49,
              111,
              103,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 104,
          "responseSize": 2870
        },
        "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has chunked transfer encoding header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "20b26dc8-3aaf-4af5-b5bc-e4279dbd375d",
          "length": 35,
          "cycles": 3,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "77e22d27-6e40-46f6-99ae-63887cd1e0ec"
        },
        "item": {
          "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
          "name": "Delay Response",
          "request": {
            "description": {
              "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "delay",
                "2"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "25994048-5137-4d58-92af-855aff7c6234",
              "name": "success-response",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "3"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "13"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"delay\":\"3\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                "type": "text/javascript",
                "exec": [
                  "var _ = require('lodash');",
                  "",
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('delay');",
                  "});",
                  "",
                  "// additional sanity tests",
                  "pm.test(\"request must have a valid delay\", function () {",
                  "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                  "});",
                  "pm.test(\"response should take more time than the delay specified\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                  "});"
                ],
                "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "delay",
              "2"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cfdaf709-de62-4ae2-b613-fa4de7410e33",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Ar7w8oAWs6hj8LseEWFzEYrPXTeGK62RU.po3XiiyBe0tM5l4QVauVBLa8IKP33Jmo8SyRAckdZ7E",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "de20f67a-5a9b-406b-a3d8-27009b71ccff",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:09 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "13"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"d-vb8pS8uHJYunqF73qADGxcv0Je8\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AaUzdZzUL0Fhswg5Dhbbd63OQymkOe1CN.vEdRlleQFZQ5IDIzWLZi6ToIBxZ%2Fl1qGrL4ACH0R3C0; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              108,
              97,
              121,
              34,
              58,
              34,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2128,
          "responseSize": 13
        },
        "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "request must have a valid delay",
            "skipped": false
          },
          {
            "assertion": "response should take more time than the delay specified",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0f006a11-fe31-4124-99db-6297971fdb43",
          "length": 35,
          "cycles": 3,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3261cf47-ddbd-439f-b768-e4b06e3596d7"
        },
        "item": {
          "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
          "name": "Get UTF8 Encoded Response",
          "request": {
            "description": {
              "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "encoding",
                "utf8"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has charset in content-type header\", function () {",
                  "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                  "});",
                  "",
                  "pm.test(\"response has chunked transfer encoding header\", function () {",
                  "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                  "});"
                ],
                "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "encoding",
              "utf8"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "72f0a195-24b4-4f21-9091-ba74abd1be77",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AaUzdZzUL0Fhswg5Dhbbd63OQymkOe1CN.vEdRlleQFZQ5IDIzWLZi6ToIBxZ%2Fl1qGrL4ACH0R3C0",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "6c3a731b-d70a-484a-bc38-fda84580aae6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:09 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"3d0e-bb1Z6nxw+98ped7xrePAFKVeCtU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AX6g-hKzc9xBlP7UipCSMdq5w7DZTehCx.RXnX0LBr4%2FSeD%2B6VpFqL%2Foo60iySOj2F4qw0xPnQkog; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              10,
              32,
              32,
              32,
              32,
              60,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              104,
              49,
              62,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              68,
              101,
              109,
              111,
              60,
              47,
              104,
              49,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              112,
              62,
              84,
              97,
              107,
              101,
              110,
              32,
              102,
              114,
              111,
              109,
              32,
              60,
              97,
              32,
              104,
              114,
              101,
              102,
              61,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              117,
              99,
              115,
              47,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              115,
              47,
              85,
              84,
              70,
              45,
              56,
              45,
              100,
              101,
              109,
              111,
              46,
              116,
              120,
              116,
              34,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              117,
              99,
              115,
              47,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              115,
              47,
              85,
              84,
              70,
              45,
              56,
              45,
              100,
              101,
              109,
              111,
              46,
              116,
              120,
              116,
              60,
              47,
              97,
              62,
              60,
              47,
              112,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              112,
              114,
              101,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              84,
              70,
              45,
              56,
              32,
              101,
              110,
              99,
              111,
              100,
              101,
              100,
              32,
              115,
              97,
              109,
              112,
              108,
              101,
              32,
              112,
              108,
              97,
              105,
              110,
              45,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              77,
              97,
              114,
              107,
              117,
              115,
              32,
              75,
              117,
              104,
              110,
              32,
              91,
              203,
              136,
              109,
              97,
              202,
              179,
              107,
              202,
              138,
              115,
              32,
              107,
              117,
              203,
              144,
              110,
              93,
              32,
              60,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              62,
              32,
              226,
              128,
              148,
              32,
              50,
              48,
              48,
              50,
              45,
              48,
              55,
              45,
              50,
              53,
              10,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              101,
              32,
              65,
              83,
              67,
              73,
              73,
              32,
              99,
              111,
              109,
              112,
              97,
              116,
              105,
              98,
              108,
              101,
              32,
              85,
              84,
              70,
              45,
              56,
              32,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              108,
              97,
              105,
              110,
              45,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              105,
              115,
              32,
              100,
              101,
              102,
              105,
              110,
              101,
              100,
              32,
              105,
              110,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              73,
              83,
              79,
              32,
              49,
              48,
              54,
              52,
              54,
              45,
              49,
              44,
              32,
              97,
              110,
              100,
              32,
              82,
              70,
              67,
              32,
              50,
              50,
              55,
              57,
              46,
              10,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              115,
              105,
              110,
              103,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              47,
              85,
              84,
              70,
              45,
              56,
              44,
              32,
              121,
              111,
              117,
              32,
              99,
              97,
              110,
              32,
              119,
              114,
              105,
              116,
              101,
              32,
              105,
              110,
              32,
              101,
              109,
              97,
              105,
              108,
              115,
              32,
              97,
              110,
              100,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              99,
              111,
              100,
              101,
              32,
              116,
              104,
              105,
              110,
              103,
              115,
              32,
              115,
              117,
              99,
              104,
              32,
              97,
              115,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              77,
              97,
              116,
              104,
              101,
              109,
              97,
              116,
              105,
              99,
              115,
              32,
              97,
              110,
              100,
              32,
              115,
              99,
              105,
              101,
              110,
              99,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              174,
              32,
              69,
              226,
              139,
              133,
              100,
              97,
              32,
              61,
              32,
              81,
              44,
              32,
              32,
              110,
              32,
              226,
              134,
              146,
              32,
              226,
              136,
              158,
              44,
              32,
              226,
              136,
              145,
              32,
              102,
              40,
              105,
              41,
              32,
              61,
              32,
              226,
              136,
              143,
              32,
              103,
              40,
              105,
              41,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              167,
              226,
              142,
              161,
              226,
              142,
              155,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              142,
              158,
              226,
              142,
              164,
              226,
              142,
              171,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              148,
              130,
              97,
              194,
              178,
              43,
              98,
              194,
              179,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              128,
              120,
              226,
              136,
              136,
              226,
              132,
              157,
              58,
              32,
              226,
              140,
              136,
              120,
              226,
              140,
              137,
              32,
              61,
              32,
              226,
              136,
              146,
              226,
              140,
              138,
              226,
              136,
              146,
              120,
              226,
              140,
              139,
              44,
              32,
              206,
              177,
              32,
              226,
              136,
              167,
              32,
              194,
              172,
              206,
              178,
              32,
              61,
              32,
              194,
              172,
              40,
              194,
              172,
              206,
              177,
              32,
              226,
              136,
              168,
              32,
              206,
              178,
              41,
              44,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              148,
              130,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              142,
              183,
              32,
              99,
              226,
              130,
              136,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              132,
              149,
              32,
              226,
              138,
              134,
              32,
              226,
              132,
              149,
              226,
              130,
              128,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              164,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              154,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              157,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              130,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              168,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              172,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              136,
              158,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              138,
              165,
              32,
              60,
              32,
              97,
              32,
              226,
              137,
              160,
              32,
              98,
              32,
              226,
              137,
              161,
              32,
              99,
              32,
              226,
              137,
              164,
              32,
              100,
              32,
              226,
              137,
              170,
              32,
              226,
              138,
              164,
              32,
              226,
              135,
              146,
              32,
              40,
              226,
              159,
              166,
              65,
              226,
              159,
              167,
              32,
              226,
              135,
              148,
              32,
              226,
              159,
              170,
              66,
              226,
              159,
              171,
              41,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              142,
              178,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              142,
              179,
              97,
              226,
              129,
              177,
              45,
              98,
              226,
              129,
              177,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              50,
              72,
              226,
              130,
              130,
              32,
              43,
              32,
              79,
              226,
              130,
              130,
              32,
              226,
              135,
              140,
              32,
              50,
              72,
              226,
              130,
              130,
              79,
              44,
              32,
              82,
              32,
              61,
              32,
              52,
              46,
              55,
              32,
              107,
              206,
              169,
              44,
              32,
              226,
              140,
              128,
              32,
              50,
              48,
              48,
              32,
              109,
              109,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              169,
              226,
              142,
              163,
              226,
              142,
              157,
              105,
              61,
              49,
              32,
              32,
              32,
              32,
              226,
              142,
              160,
              226,
              142,
              166,
              226,
              142,
              173,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              76,
              105,
              110,
              103,
              117,
              105,
              115,
              116,
              105,
              99,
              115,
              32,
              97,
              110,
              100,
              32,
              100,
              105,
              99,
              116,
              105,
              111,
              110,
              97,
              114,
              105,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              195,
              176,
              105,
              32,
              196,
              177,
              110,
              116,
              201,
              153,
              203,
              136,
              110,
              195,
              166,
              202,
              131,
              201,
              153,
              110,
              201,
              153,
              108,
              32,
              102,
              201,
              153,
              203,
              136,
              110,
              201,
              155,
              116,
              196,
              177,
              107,
              32,
              201,
              153,
              115,
              111,
              202,
              138,
              115,
              105,
              203,
              136,
              101,
              196,
              177,
              202,
              131,
              110,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              89,
              32,
              91,
              203,
              136,
              202,
              143,
              112,
              115,
              105,
              108,
              201,
              148,
              110,
              93,
              44,
              32,
              89,
              101,
              110,
              32,
              91,
              106,
              201,
              155,
              110,
              93,
              44,
              32,
              89,
              111,
              103,
              97,
              32,
              91,
              203,
              136,
              106,
              111,
              203,
              144,
              103,
              201,
              145,
              93,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              65,
              80,
              76,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              40,
              86,
              226,
              141,
              179,
              86,
              41,
              61,
              226,
              141,
              179,
              226,
              141,
              180,
              86,
              41,
              47,
              86,
              226,
              134,
              144,
              44,
              86,
              32,
              32,
              32,
              32,
              226,
              140,
              183,
              226,
              134,
              144,
              226,
              141,
              179,
              226,
              134,
              146,
              226,
              141,
              180,
              226,
              136,
              134,
              226,
              136,
              135,
              226,
              138,
              131,
              226,
              128,
              190,
              226,
              141,
              142,
              226,
              141,
              149,
              226,
              140,
              136,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              78,
              105,
              99,
              101,
              114,
              32,
              116,
              121,
              112,
              111,
              103,
              114,
              97,
              112,
              104,
              121,
              32,
              105,
              110,
              32,
              112,
              108,
              97,
              105,
              110,
              32,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              151,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              152,
              115,
              105,
              110,
              103,
              108,
              101,
              226,
              128,
              153,
              32,
              97,
              110,
              100,
              32,
              226,
              128,
              156,
              100,
              111,
              117,
              98,
              108,
              101,
              226,
              128,
              157,
              32,
              113,
              117,
              111,
              116,
              101,
              115,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              67,
              117,
              114,
              108,
              121,
              32,
              97,
              112,
              111,
              115,
              116,
              114,
              111,
              112,
              104,
              101,
              115,
              58,
              32,
              226,
              128,
              156,
              87,
              101,
              226,
              128,
              153,
              118,
              101,
              32,
              98,
              101,
              101,
              110,
              32,
              104,
              101,
              114,
              101,
              226,
              128,
              157,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              76,
              97,
              116,
              105,
              110,
              45,
              49,
              32,
              97,
              112,
              111,
              115,
              116,
              114,
              111,
              112,
              104,
              101,
              32,
              97,
              110,
              100,
              32,
              97,
              99,
              99,
              101,
              110,
              116,
              115,
              58,
              32,
              39,
              194,
              180,
              96,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              154,
              100,
              101,
              117,
              116,
              115,
              99,
              104,
              101,
              226,
              128,
              152,
              32,
              226,
              128,
              158,
              65,
              110,
              102,
              195,
              188,
              104,
              114,
              117,
              110,
              103,
              115,
              122,
              101,
              105,
              99,
              104,
              101,
              110,
              226,
              128,
              156,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              160,
              44,
              32,
              226,
              128,
              161,
              44,
              32,
              226,
              128,
              176,
              44,
              32,
              226,
              128,
              162,
              44,
              32,
              51,
              226,
              128,
              147,
              52,
              44,
              32,
              226,
              128,
              148,
              44,
              32,
              226,
              136,
              146,
              53,
              47,
              43,
              53,
              44,
              32,
              226,
              132,
              162,
              44,
              32,
              226,
              128,
              166,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              65,
              83,
              67,
              73,
              73,
              32,
              115,
              97,
              102,
              101,
              116,
              121,
              32,
              116,
              101,
              115,
              116,
              58,
              32,
              49,
              108,
              73,
              124,
              44,
              32,
              48,
              79,
              68,
              44,
              32,
              56,
              66,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              116,
              104,
              101,
              32,
              101,
              117,
              114,
              111,
              32,
              115,
              121,
              109,
              98,
              111,
              108,
              58,
              32,
              226,
              148,
              130,
              32,
              49,
              52,
              46,
              57,
              53,
              32,
              226,
              130,
              172,
              32,
              226,
              148,
              130,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              157,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              67,
              111,
              109,
              98,
              105,
              110,
              105,
              110,
              103,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              83,
              84,
              65,
              82,
              71,
              206,
              155,
              204,
              138,
              84,
              69,
              32,
              83,
              71,
              45,
              49,
              44,
              32,
              97,
              32,
              61,
              32,
              118,
              204,
              135,
              32,
              61,
              32,
              114,
              204,
              136,
              44,
              32,
              97,
              226,
              131,
              145,
              32,
              226,
              138,
              165,
              32,
              98,
              226,
              131,
              145,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              114,
              101,
              101,
              107,
              32,
              40,
              105,
              110,
              32,
              80,
              111,
              108,
              121,
              116,
              111,
              110,
              105,
              99,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              101,
              32,
              71,
              114,
              101,
              101,
              107,
              32,
              97,
              110,
              116,
              104,
              101,
              109,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              163,
              225,
              189,
              178,
              32,
              206,
              179,
              206,
              189,
              207,
              137,
              207,
              129,
              225,
              189,
              183,
              206,
              182,
              207,
              137,
              32,
              225,
              188,
              128,
              207,
              128,
              225,
              189,
              184,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              206,
              186,
              225,
              189,
              185,
              207,
              136,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              32,
              207,
              131,
              207,
              128,
              206,
              177,
              206,
              184,
              206,
              185,
              206,
              191,
              225,
              191,
              166,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              207,
              132,
              207,
              129,
              206,
              191,
              206,
              188,
              206,
              181,
              207,
              129,
              225,
              189,
              181,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              131,
              225,
              189,
              178,
              32,
              206,
              179,
              206,
              189,
              207,
              137,
              207,
              129,
              225,
              189,
              183,
              206,
              182,
              207,
              137,
              32,
              225,
              188,
              128,
              207,
              128,
              225,
              189,
              184,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              132,
              207,
              136,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              206,
              191,
              225,
              189,
              186,
              32,
              206,
              188,
              225,
              189,
              178,
              32,
              206,
              178,
              225,
              189,
              183,
              206,
              177,
              32,
              206,
              188,
              206,
              181,
              207,
              132,
              207,
              129,
              225,
              189,
              177,
              206,
              181,
              206,
              185,
              32,
              207,
              132,
              225,
              189,
              180,
              32,
              206,
              179,
              225,
              191,
              134,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              190,
              191,
              206,
              145,
              207,
              128,
              225,
              190,
              191,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              186,
              225,
              189,
              185,
              206,
              186,
              206,
              186,
              206,
              177,
              206,
              187,
              206,
              177,
              32,
              206,
              178,
              206,
              179,
              206,
              177,
              206,
              187,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              191,
              182,
              206,
              189,
              32,
              225,
              191,
              190,
              206,
              149,
              206,
              187,
              206,
              187,
              225,
              189,
              181,
              206,
              189,
              207,
              137,
              206,
              189,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              225,
              188,
              177,
              206,
              181,
              207,
              129,
              225,
              189,
              177,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              131,
              225,
              189,
              176,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              191,
              182,
              207,
              132,
              206,
              177,
              32,
              225,
              188,
              128,
              206,
              189,
              206,
              180,
              207,
              129,
              206,
              181,
              206,
              185,
              207,
              137,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              135,
              206,
              177,
              225,
              191,
              150,
              207,
              129,
              206,
              181,
              44,
              32,
              225,
              189,
              166,
              32,
              207,
              135,
              206,
              177,
              225,
              191,
              150,
              207,
              129,
              206,
              181,
              44,
              32,
              225,
              190,
              191,
              206,
              149,
              206,
              187,
              206,
              181,
              207,
              133,
              206,
              184,
              206,
              181,
              207,
              129,
              206,
              185,
              225,
              189,
              177,
              33,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              115,
              112,
              101,
              101,
              99,
              104,
              32,
              111,
              102,
              32,
              68,
              101,
              109,
              111,
              115,
              116,
              104,
              101,
              110,
              101,
              115,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              52,
              116,
              104,
              32,
              99,
              101,
              110,
              116,
              117,
              114,
              121,
              32,
              66,
              67,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              159,
              225,
              189,
              144,
              207,
              135,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              177,
              225,
              189,
              144,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              128,
              206,
              177,
              207,
              129,
              225,
              189,
              183,
              207,
              131,
              207,
              132,
              206,
              177,
              207,
              132,
              206,
              177,
              225,
              189,
              183,
              32,
              206,
              188,
              206,
              191,
              206,
              185,
              32,
              206,
              179,
              206,
              185,
              206,
              179,
              206,
              189,
              225,
              189,
              189,
              207,
              131,
              206,
              186,
              206,
              181,
              206,
              185,
              206,
              189,
              44,
              32,
              225,
              189,
              166,
              32,
              225,
              188,
              132,
              206,
              189,
              206,
              180,
              207,
              129,
              206,
              181,
              207,
              130,
              32,
              225,
              190,
              191,
              206,
              145,
              206,
              184,
              206,
              183,
              206,
              189,
              206,
              177,
              225,
              191,
              150,
              206,
              191,
              206,
              185,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              177,
              206,
              189,
              32,
              207,
              132,
              225,
              190,
              191,
              32,
              206,
              181,
              225,
              188,
              176,
              207,
              130,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              177,
              206,
              179,
              206,
              188,
              206,
              177,
              207,
              132,
              206,
              177,
              32,
              225,
              188,
              128,
              207,
              128,
              206,
              191,
              206,
              178,
              206,
              187,
              225,
              189,
              179,
              207,
              136,
              207,
              137,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              177,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              184,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              207,
              133,
              207,
              130,
              32,
              206,
              191,
              225,
              189,
              147,
              207,
              130,
              32,
              225,
              188,
              128,
              206,
              186,
              206,
              191,
              225,
              189,
              187,
              207,
              137,
              206,
              135,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              32,
              206,
              188,
              225,
              189,
              178,
              206,
              189,
              32,
              206,
              179,
              225,
              189,
              176,
              207,
              129,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              207,
              133,
              207,
              130,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              166,
              225,
              189,
              183,
              206,
              187,
              206,
              185,
              207,
              128,
              207,
              128,
              206,
              191,
              206,
              189,
              32,
              225,
              189,
              129,
              207,
              129,
              225,
              191,
              182,
              32,
              206,
              179,
              206,
              185,
              206,
              179,
              206,
              189,
              206,
              191,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              191,
              207,
              133,
              207,
              130,
              44,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              180,
              225,
              189,
              178,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              177,
              206,
              179,
              206,
              188,
              206,
              177,
              207,
              132,
              225,
              190,
              191,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              181,
              225,
              188,
              176,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              207,
              132,
              206,
              191,
              32,
              207,
              128,
              207,
              129,
              206,
              191,
              225,
              189,
              181,
              206,
              186,
              206,
              191,
              206,
              189,
              207,
              132,
              206,
              177,
              44,
              32,
              32,
              225,
              189,
              165,
              207,
              131,
              206,
              184,
              225,
              190,
              191,
              32,
              225,
              189,
              133,
              207,
              128,
              207,
              137,
              207,
              130,
              32,
              206,
              188,
              225,
              189,
              180,
              32,
              207,
              128,
              206,
              181,
              206,
              185,
              207,
              131,
              225,
              189,
              185,
              206,
              188,
              206,
              181,
              206,
              184,
              225,
              190,
              191,
              32,
              206,
              177,
              225,
              189,
              144,
              207,
              132,
              206,
              191,
              225,
              189,
              182,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              207,
              129,
              206,
              191,
              206,
              189,
              32,
              206,
              186,
              206,
              177,
              206,
              186,
              225,
              191,
              182,
              207,
              130,
              32,
              207,
              131,
              206,
              186,
              225,
              189,
              179,
              207,
              136,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              180,
              225,
              189,
              179,
              206,
              191,
              206,
              189,
              46,
              32,
              206,
              191,
              225,
              189,
              144,
              206,
              180,
              225,
              189,
              179,
              206,
              189,
              32,
              206,
              191,
              225,
              189,
              150,
              206,
              189,
              32,
              225,
              188,
              132,
              206,
              187,
              206,
              187,
              206,
              191,
              32,
              206,
              188,
              206,
              191,
              206,
              185,
              32,
              206,
              180,
              206,
              191,
              206,
              186,
              206,
              191,
              225,
              191,
              166,
              207,
              131,
              206,
              185,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              191,
              225,
              188,
              177,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              132,
              206,
              191,
              206,
              185,
              206,
              177,
              225,
              191,
              166,
              207,
              132,
              206,
              177,
              32,
              206,
              187,
              225,
              189,
              179,
              206,
              179,
              206,
              191,
              206,
              189,
              207,
              132,
              206,
              181,
              207,
              130,
              32,
              225,
              188,
              162,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              145,
              207,
              128,
              225,
              189,
              185,
              206,
              184,
              206,
              181,
              207,
              131,
              206,
              185,
              206,
              189,
              44,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              225,
              188,
              167,
              207,
              130,
              32,
              206,
              178,
              206,
              191,
              207,
              133,
              206,
              187,
              206,
              181,
              225,
              189,
              187,
              206,
              181,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              191,
              225,
              189,
              144,
              207,
              135,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              206,
              191,
              225,
              189,
              150,
              207,
              131,
              206,
              177,
              206,
              189,
              32,
              207,
              128,
              206,
              177,
              207,
              129,
              206,
              185,
              207,
              131,
              207,
              132,
              225,
              189,
              177,
              206,
              189,
              207,
              132,
              206,
              181,
              207,
              130,
              32,
              225,
              189,
              145,
              206,
              188,
              225,
              191,
              150,
              206,
              189,
              32,
              225,
              188,
              129,
              206,
              188,
              206,
              177,
              207,
              129,
              207,
              132,
              225,
              189,
              177,
              206,
              189,
              206,
              181,
              206,
              185,
              206,
              189,
              46,
              32,
              225,
              188,
              144,
              206,
              179,
              225,
              189,
              188,
              32,
              206,
              180,
              225,
              189,
              179,
              44,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              185,
              32,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              206,
              191,
              207,
              132,
              225,
              190,
              191,
              32,
              225,
              188,
              144,
              206,
              190,
              225,
              191,
              134,
              206,
              189,
              32,
              207,
              132,
              225,
              191,
              135,
              32,
              207,
              128,
              225,
              189,
              185,
              206,
              187,
              206,
              181,
              206,
              185,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              177,
              225,
              189,
              145,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              32,
              225,
              188,
              148,
              207,
              135,
              206,
              181,
              206,
              185,
              206,
              189,
              32,
              225,
              188,
              128,
              207,
              131,
              207,
              134,
              206,
              177,
              206,
              187,
              225,
              191,
              182,
              207,
              130,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              206,
              166,
              225,
              189,
              183,
              206,
              187,
              206,
              185,
              207,
              128,
              207,
              128,
              206,
              191,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              206,
              188,
              225,
              189,
              177,
              206,
              187,
              225,
              190,
              191,
              32,
              225,
              188,
              128,
              206,
              186,
              207,
              129,
              206,
              185,
              206,
              178,
              225,
              191,
              182,
              207,
              130,
              32,
              206,
              191,
              225,
              188,
              182,
              206,
              180,
              206,
              177,
              206,
              135,
              32,
              225,
              188,
              144,
              207,
              128,
              225,
              190,
              191,
              32,
              225,
              188,
              144,
              206,
              188,
              206,
              191,
              225,
              191,
              166,
              32,
              206,
              179,
              225,
              189,
              177,
              207,
              129,
              44,
              32,
              206,
              191,
              225,
              189,
              144,
              32,
              207,
              128,
              225,
              189,
              177,
              206,
              187,
              206,
              177,
              206,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              179,
              225,
              189,
              179,
              206,
              179,
              206,
              191,
              206,
              189,
              206,
              181,
              206,
              189,
              32,
              207,
              132,
              206,
              177,
              225,
              191,
              166,
              207,
              132,
              225,
              190,
              191,
              32,
              225,
              188,
              128,
              206,
              188,
              207,
              134,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              207,
              129,
              206,
              177,
              206,
              135,
              32,
              206,
              189,
              225,
              191,
              166,
              206,
              189,
              32,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              207,
              132,
              206,
              191,
              206,
              185,
              32,
              207,
              128,
              225,
              189,
              179,
              207,
              128,
              206,
              181,
              206,
              185,
              207,
              131,
              206,
              188,
              206,
              177,
              206,
              185,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              206,
              184,
              225,
              190,
              191,
              32,
              225,
              188,
              177,
              206,
              186,
              206,
              177,
              206,
              189,
              225,
              189,
              184,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              207,
              129,
              206,
              191,
              206,
              187,
              206,
              177,
              206,
              178,
              206,
              181,
              225,
              191,
              150,
              206,
              189,
              32,
              225,
              188,
              161,
              206,
              188,
              225,
              191,
              150,
              206,
              189,
              32,
              206,
              181,
              225,
              188,
              182,
              206,
              189,
              206,
              177,
              206,
              185,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              189,
              207,
              132,
              206,
              183,
              206,
              189,
              44,
              32,
              225,
              189,
              133,
              207,
              128,
              207,
              137,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              32,
              207,
              131,
              207,
              133,
              206,
              188,
              206,
              188,
              225,
              189,
              177,
              207,
              135,
              206,
              191,
              207,
              133,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              131,
              225,
              189,
              189,
              207,
              131,
              206,
              191,
              206,
              188,
              206,
              181,
              206,
              189,
              46,
              32,
              225,
              188,
              144,
              225,
              189,
              176,
              206,
              189,
              32,
              206,
              179,
              225,
              189,
              176,
              207,
              129,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              207,
              132,
              206,
              191,
              32,
              206,
              178,
              206,
              181,
              206,
              178,
              206,
              177,
              225,
              189,
              183,
              207,
              137,
              207,
              130,
              32,
              225,
              189,
              145,
              207,
              128,
              225,
              189,
              177,
              207,
              129,
              206,
              190,
              225,
              191,
              131,
              44,
              32,
              207,
              132,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              189,
              183,
              206,
              189,
              206,
              177,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              181,
              207,
              132,
              206,
              177,
              225,
              189,
              183,
              32,
              207,
              132,
              206,
              185,
              207,
              130,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              225,
              189,
              131,
              206,
              189,
              32,
              207,
              132,
              207,
              129,
              225,
              189,
              185,
              207,
              128,
              206,
              191,
              206,
              189,
              32,
              225,
              188,
              144,
              206,
              190,
              225,
              189,
              179,
              207,
              131,
              207,
              132,
              206,
              177,
              206,
              185,
              32,
              207,
              131,
              206,
              186,
              206,
              191,
              207,
              128,
              206,
              181,
              225,
              191,
              150,
              206,
              189,
              206,
              135,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              182,
              206,
              189,
              32,
              206,
              180,
              225,
              189,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              188,
              128,
              207,
              129,
              207,
              135,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              128,
              207,
              129,
              206,
              184,
              225,
              191,
              182,
              207,
              130,
              32,
              225,
              189,
              145,
              207,
              128,
              206,
              191,
              206,
              184,
              225,
              189,
              179,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              32,
              206,
              188,
              225,
              189,
              177,
              207,
              132,
              206,
              177,
              206,
              185,
              206,
              191,
              206,
              189,
              32,
              225,
              188,
              161,
              206,
              179,
              206,
              191,
              225,
              191,
              166,
              206,
              188,
              206,
              177,
              206,
              185,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              181,
              206,
              187,
              206,
              181,
              207,
              133,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              32,
              225,
              189,
              129,
              206,
              189,
              207,
              132,
              206,
              185,
              206,
              189,
              206,
              191,
              225,
              191,
              166,
              206,
              189,
              32,
              207,
              128,
              206,
              191,
              206,
              185,
              206,
              181,
              225,
              191,
              150,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              206,
              189,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              148,
              206,
              183,
              206,
              188,
              206,
              191,
              207,
              131,
              206,
              184,
              225,
              189,
              179,
              206,
              189,
              206,
              191,
              207,
              133,
              207,
              130,
              44,
              32,
              206,
              147,
              225,
              191,
              189,
              32,
              225,
              190,
              191,
              206,
              159,
              206,
              187,
              207,
              133,
              206,
              189,
              206,
              184,
              206,
              185,
              206,
              177,
              206,
              186,
              225,
              189,
              184,
              207,
              130,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              101,
              111,
              114,
              103,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              99,
              111,
              110,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              32,
              105,
              110,
              118,
              105,
              116,
              97,
              116,
              105,
              111,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              146,
              225,
              131,
              151,
              225,
              131,
              174,
              225,
              131,
              157,
              225,
              131,
              149,
              225,
              131,
              151,
              32,
              225,
              131,
              144,
              225,
              131,
              174,
              225,
              131,
              154,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              148,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              151,
              32,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              146,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              144,
              225,
              131,
              151,
              225,
              131,
              148,
              32,
              225,
              131,
              161,
              225,
              131,
              144,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              144,
              225,
              131,
              168,
              225,
              131,
              157,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              157,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              164,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              150,
              225,
              131,
              148,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              172,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              225,
              131,
              147,
              44,
              32,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              170,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              32,
              49,
              48,
              45,
              49,
              50,
              32,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              162,
              225,
              131,
              161,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              165,
              46,
              32,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              32,
              225,
              131,
              146,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              156,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              168,
              225,
              131,
              152,
              46,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              164,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              225,
              131,
              168,
              225,
              131,
              148,
              225,
              131,
              176,
              225,
              131,
              153,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              32,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              144,
              225,
              131,
              147,
              32,
              225,
              131,
              155,
              225,
              131,
              161,
              225,
              131,
              157,
              225,
              131,
              164,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              157,
              225,
              131,
              161,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              148,
              225,
              131,
              165,
              225,
              131,
              161,
              225,
              131,
              158,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              32,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              148,
              225,
              131,
              151,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              146,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              32,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              146,
              225,
              131,
              157,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              170,
              225,
              131,
              144,
              225,
              131,
              144,
              32,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              162,
              225,
              131,
              152,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              156,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              150,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              154,
              225,
              131,
              157,
              225,
              131,
              153,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              150,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              44,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              157,
              225,
              131,
              167,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              157,
              225,
              131,
              158,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              163,
              225,
              131,
              154,
              32,
              225,
              131,
              161,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              225,
              131,
              144,
              44,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              157,
              225,
              131,
              167,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              152,
              225,
              131,
              151,
              32,
              225,
              131,
              158,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              146,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              32,
              225,
              131,
              168,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              164,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              165,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              163,
              225,
              131,
              168,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              144,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              155,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              157,
              225,
              131,
              149,
              225,
              131,
              144,
              225,
              131,
              156,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              155,
              225,
              131,
              158,
              225,
              131,
              152,
              225,
              131,
              163,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              163,
              225,
              131,
              154,
              32,
              225,
              131,
              161,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              82,
              117,
              115,
              115,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              99,
              111,
              110,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              32,
              105,
              110,
              118,
              105,
              116,
              97,
              116,
              105,
              111,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              151,
              208,
              176,
              209,
              128,
              208,
              181,
              208,
              179,
              208,
              184,
              209,
              129,
              209,
              130,
              209,
              128,
              208,
              184,
              209,
              128,
              209,
              131,
              208,
              185,
              209,
              130,
              208,
              181,
              209,
              129,
              209,
              140,
              32,
              209,
              129,
              208,
              181,
              208,
              185,
              209,
              135,
              208,
              176,
              209,
              129,
              32,
              208,
              189,
              208,
              176,
              32,
              208,
              148,
              208,
              181,
              209,
              129,
              209,
              143,
              209,
              130,
              209,
              131,
              209,
              142,
              32,
              208,
              156,
              208,
              181,
              208,
              182,
              208,
              180,
              209,
              131,
              208,
              189,
              208,
              176,
              209,
              128,
              208,
              190,
              208,
              180,
              208,
              189,
              209,
              131,
              209,
              142,
              32,
              208,
              154,
              208,
              190,
              208,
              189,
              209,
              132,
              208,
              181,
              209,
              128,
              208,
              181,
              208,
              189,
              209,
              134,
              208,
              184,
              209,
              142,
              32,
              208,
              191,
              208,
              190,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              208,
              186,
              208,
              190,
              209,
              130,
              208,
              190,
              209,
              128,
              208,
              176,
              209,
              143,
              32,
              209,
              129,
              208,
              190,
              209,
              129,
              209,
              130,
              208,
              190,
              208,
              184,
              209,
              130,
              209,
              129,
              209,
              143,
              32,
              49,
              48,
              45,
              49,
              50,
              32,
              208,
              188,
              208,
              176,
              209,
              128,
              209,
              130,
              208,
              176,
              32,
              49,
              57,
              57,
              55,
              32,
              208,
              179,
              208,
              190,
              208,
              180,
              208,
              176,
              32,
              208,
              178,
              32,
              208,
              156,
              208,
              176,
              208,
              185,
              208,
              189,
              209,
              134,
              208,
              181,
              32,
              208,
              178,
              32,
              208,
              147,
              208,
              181,
              209,
              128,
              208,
              188,
              208,
              176,
              208,
              189,
              208,
              184,
              208,
              184,
              46,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              154,
              208,
              190,
              208,
              189,
              209,
              132,
              208,
              181,
              209,
              128,
              208,
              181,
              208,
              189,
              209,
              134,
              208,
              184,
              209,
              143,
              32,
              209,
              129,
              208,
              190,
              208,
              177,
              208,
              181,
              209,
              128,
              208,
              181,
              209,
              130,
              32,
              209,
              136,
              208,
              184,
              209,
              128,
              208,
              190,
              208,
              186,
              208,
              184,
              208,
              185,
              32,
              208,
              186,
              209,
              128,
              209,
              131,
              208,
              179,
              32,
              209,
              141,
              208,
              186,
              209,
              129,
              208,
              191,
              208,
              181,
              209,
              128,
              209,
              130,
              208,
              190,
              208,
              178,
              32,
              208,
              191,
              208,
              190,
              32,
              32,
              208,
              178,
              208,
              190,
              208,
              191,
              209,
              128,
              208,
              190,
              209,
              129,
              208,
              176,
              208,
              188,
              32,
              208,
              179,
              208,
              187,
              208,
              190,
              208,
              177,
              208,
              176,
              208,
              187,
              209,
              140,
              208,
              189,
              208,
              190,
              208,
              179,
              208,
              190,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              152,
              208,
              189,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              208,
              181,
              209,
              130,
              208,
              176,
              32,
              208,
              184,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              208,
              187,
              208,
              190,
              208,
              186,
              208,
              176,
              208,
              187,
              208,
              184,
              208,
              183,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              184,
              32,
              208,
              184,
              32,
              208,
              184,
              208,
              189,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              190,
              208,
              189,
              208,
              176,
              208,
              187,
              208,
              184,
              208,
              183,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              184,
              44,
              32,
              208,
              178,
              208,
              190,
              208,
              191,
              208,
              187,
              208,
              190,
              209,
              137,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              142,
              32,
              208,
              184,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              191,
              209,
              128,
              208,
              184,
              208,
              188,
              208,
              181,
              208,
              189,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              142,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              208,
              178,
              32,
              209,
              128,
              208,
              176,
              208,
              183,
              208,
              187,
              208,
              184,
              209,
              135,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              208,
              190,
              208,
              191,
              208,
              181,
              209,
              128,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              190,
              208,
              189,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              209,
              129,
              208,
              184,
              209,
              129,
              209,
              130,
              208,
              181,
              208,
              188,
              208,
              176,
              209,
              133,
              32,
              208,
              184,
              32,
              208,
              191,
              209,
              128,
              208,
              190,
              208,
              179,
              209,
              128,
              208,
              176,
              208,
              188,
              208,
              188,
              208,
              189,
              209,
              139,
              209,
              133,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              191,
              209,
              128,
              208,
              184,
              208,
              187,
              208,
              190,
              208,
              182,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              143,
              209,
              133,
              44,
              32,
              209,
              136,
              209,
              128,
              208,
              184,
              209,
              132,
              209,
              130,
              208,
              176,
              209,
              133,
              44,
              32,
              208,
              178,
              208,
              181,
              209,
              128,
              209,
              129,
              209,
              130,
              208,
              186,
              208,
              181,
              32,
              208,
              184,
              32,
              208,
              188,
              208,
              189,
              208,
              190,
              208,
              179,
              208,
              190,
              209,
              143,
              208,
              183,
              209,
              139,
              209,
              135,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              208,
              186,
              208,
              190,
              208,
              188,
              208,
              191,
              209,
              140,
              209,
              142,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              209,
              129,
              208,
              184,
              209,
              129,
              209,
              130,
              208,
              181,
              208,
              188,
              208,
              176,
              209,
              133,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              97,
              105,
              32,
              40,
              85,
              67,
              83,
              32,
              76,
              101,
              118,
              101,
              108,
              32,
              50,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              69,
              120,
              99,
              101,
              114,
              112,
              116,
              32,
              102,
              114,
              111,
              109,
              32,
              97,
              32,
              112,
              111,
              101,
              116,
              114,
              121,
              32,
              111,
              110,
              32,
              84,
              104,
              101,
              32,
              82,
              111,
              109,
              97,
              110,
              99,
              101,
              32,
              111,
              102,
              32,
              84,
              104,
              101,
              32,
              84,
              104,
              114,
              101,
              101,
              32,
              75,
              105,
              110,
              103,
              100,
              111,
              109,
              115,
              32,
              40,
              97,
              32,
              67,
              104,
              105,
              110,
              101,
              115,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              99,
              108,
              97,
              115,
              115,
              105,
              99,
              32,
              39,
              83,
              97,
              110,
              32,
              71,
              117,
              97,
              39,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              91,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              124,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              93,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              143,
              32,
              224,
              185,
              129,
              224,
              184,
              156,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              184,
              148,
              224,
              184,
              180,
              224,
              184,
              153,
              224,
              184,
              174,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              170,
              224,
              184,
              183,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              184,
              161,
              224,
              185,
              130,
              224,
              184,
              151,
              224,
              184,
              163,
              224,
              184,
              161,
              224,
              185,
              129,
              224,
              184,
              170,
              224,
              184,
              153,
              224,
              184,
              170,
              224,
              184,
              177,
              224,
              184,
              135,
              224,
              185,
              128,
              224,
              184,
              167,
              224,
              184,
              138,
              32,
              32,
              224,
              184,
              158,
              224,
              184,
              163,
              224,
              184,
              176,
              224,
              184,
              155,
              224,
              184,
              129,
              224,
              185,
              128,
              224,
              184,
              129,
              224,
              184,
              168,
              224,
              184,
              129,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              154,
              224,
              184,
              185,
              224,
              185,
              138,
              224,
              184,
              129,
              224,
              184,
              185,
              224,
              185,
              137,
              224,
              184,
              130,
              224,
              184,
              182,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              185,
              131,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              185,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              170,
              224,
              184,
              180,
              224,
              184,
              154,
              224,
              184,
              170,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              129,
              224,
              184,
              169,
              224,
              184,
              177,
              224,
              184,
              149,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              162,
              224,
              185,
              140,
              224,
              184,
              129,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              184,
              153,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              185,
              129,
              224,
              184,
              165,
              224,
              184,
              150,
              224,
              184,
              177,
              224,
              184,
              148,
              224,
              185,
              132,
              224,
              184,
              155,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              170,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              132,
              224,
              185,
              140,
              224,
              185,
              132,
              224,
              184,
              139,
              224,
              184,
              163,
              224,
              185,
              137,
              224,
              185,
              130,
              224,
              184,
              135,
              224,
              185,
              136,
              224,
              185,
              128,
              224,
              184,
              130,
              224,
              184,
              165,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              154,
              224,
              184,
              178,
              224,
              184,
              155,
              224,
              184,
              177,
              224,
              184,
              141,
              224,
              184,
              141,
              224,
              184,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              151,
              224,
              184,
              163,
              224,
              184,
              135,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              150,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              130,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              151,
              224,
              184,
              181,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              151,
              224,
              184,
              181,
              224,
              185,
              136,
              224,
              184,
              158,
              224,
              184,
              182,
              224,
              185,
              136,
              224,
              184,
              135,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              154,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              136,
              224,
              184,
              182,
              224,
              184,
              135,
              224,
              184,
              167,
              224,
              184,
              180,
              224,
              184,
              155,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              149,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              184,
              129,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              184,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              130,
              224,
              184,
              174,
              224,
              184,
              136,
              224,
              184,
              180,
              224,
              185,
              139,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              163,
              224,
              184,
              181,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              151,
              224,
              184,
              177,
              224,
              184,
              158,
              224,
              184,
              151,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              167,
              224,
              184,
              171,
              224,
              184,
              177,
              224,
              184,
              167,
              224,
              185,
              128,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              161,
              224,
              184,
              178,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              184,
              162,
              224,
              184,
              136,
              224,
              184,
              176,
              224,
              184,
              134,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              161,
              224,
              184,
              148,
              224,
              184,
              138,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              167,
              224,
              184,
              149,
              224,
              184,
              177,
              224,
              184,
              167,
              224,
              184,
              170,
              224,
              184,
              179,
              224,
              184,
              132,
              224,
              184,
              177,
              224,
              184,
              141,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              128,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              153,
              224,
              184,
              130,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              185,
              132,
              224,
              184,
              170,
              224,
              185,
              132,
              224,
              184,
              165,
              224,
              185,
              136,
              224,
              185,
              128,
              224,
              184,
              170,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              136,
              224,
              184,
              178,
              224,
              184,
              129,
              224,
              185,
              128,
              224,
              184,
              132,
              224,
              184,
              171,
              224,
              184,
              178,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              163,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              184,
              155,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              130,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              165,
              224,
              184,
              162,
              224,
              184,
              173,
              224,
              184,
              178,
              224,
              184,
              170,
              224,
              184,
              177,
              224,
              184,
              141,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              157,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              162,
              224,
              184,
              173,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              184,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              184,
              162,
              224,
              184,
              184,
              224,
              185,
              129,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              185,
              131,
              224,
              184,
              171,
              224,
              185,
              137,
              224,
              185,
              129,
              224,
              184,
              149,
              224,
              184,
              129,
              224,
              184,
              129,
              224,
              184,
              177,
              224,
              184,
              153,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              131,
              224,
              184,
              138,
              224,
              185,
              137,
              224,
              184,
              170,
              224,
              184,
              178,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              153,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              183,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              185,
              131,
              224,
              184,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              158,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              165,
              224,
              184,
              180,
              224,
              184,
              137,
              224,
              184,
              184,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              184,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              181,
              224,
              184,
              129,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              129,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              185,
              128,
              224,
              184,
              171,
              224,
              184,
              149,
              224,
              184,
              184,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              138,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              158,
              224,
              184,
              168,
              224,
              184,
              136,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              135,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              184,
              178,
              224,
              184,
              159,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              163,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              185,
              132,
              224,
              184,
              171,
              224,
              185,
              137,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              149,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              163,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              178,
              224,
              184,
              134,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              159,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              136,
              224,
              184,
              153,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              163,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              162,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              164,
              224,
              185,
              133,
              224,
              184,
              171,
              224,
              184,
              178,
              224,
              185,
              131,
              224,
              184,
              132,
              224,
              184,
              163,
              224,
              184,
              132,
              224,
              185,
              137,
              224,
              184,
              179,
              224,
              184,
              138,
              224,
              184,
              185,
              224,
              184,
              129,
              224,
              184,
              185,
              224,
              185,
              137,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              163,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              135,
              224,
              184,
              129,
              224,
              185,
              140,
              32,
              224,
              184,
              175,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              84,
              104,
              101,
              32,
              97,
              98,
              111,
              118,
              101,
              32,
              105,
              115,
              32,
              97,
              32,
              116,
              119,
              111,
              45,
              99,
              111,
              108,
              117,
              109,
              110,
              32,
              116,
              101,
              120,
              116,
              46,
              32,
              73,
              102,
              32,
              99,
              111,
              109,
              98,
              105,
              110,
              105,
              110,
              103,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              115,
              32,
              97,
              114,
              101,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              100,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              108,
              121,
              44,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              110,
              101,
              115,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              111,
              110,
              100,
              32,
              99,
              111,
              108,
              117,
              109,
              110,
              32,
              115,
              104,
              111,
              117,
              108,
              100,
              32,
              98,
              101,
              32,
              97,
              108,
              105,
              103,
              110,
              101,
              100,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              124,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              32,
              97,
              98,
              111,
              118,
              101,
              46,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              69,
              116,
              104,
              105,
              111,
              112,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              80,
              114,
              111,
              118,
              101,
              114,
              98,
              115,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              65,
              109,
              104,
              97,
              114,
              105,
              99,
              32,
              108,
              97,
              110,
              103,
              117,
              97,
              103,
              101,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              176,
              225,
              136,
              155,
              225,
              139,
              173,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              179,
              225,
              136,
              168,
              225,
              136,
              181,
              32,
              225,
              138,
              149,
              225,
              140,
              137,
              225,
              136,
              165,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              138,
              168,
              225,
              136,
              176,
              225,
              136,
              181,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              165,
              225,
              136,
              139,
              32,
              225,
              138,
              171,
              225,
              136,
              136,
              225,
              138,
              157,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              225,
              138,
              160,
              225,
              137,
              163,
              225,
              137,
              180,
              32,
              225,
              137,
              160,
              225,
              137,
              134,
              225,
              136,
              152,
              225,
              140,
              160,
              225,
              138,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              140,
              140,
              225,
              140,
              165,
              32,
              225,
              139,
              171,
              225,
              136,
              136,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              137,
              129,
              225,
              136,
              157,
              225,
              140,
              165,
              225,
              138,
              147,
              32,
              225,
              138,
              144,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              176,
              225,
              136,
              128,
              32,
              225,
              137,
              160,
              225,
              136,
              149,
              225,
              136,
              141,
              225,
              136,
              153,
              32,
              225,
              137,
              133,
              225,
              137,
              164,
              32,
              225,
              137,
              163,
              225,
              139,
              173,
              225,
              140,
              160,
              225,
              140,
              163,
              32,
              225,
              138,
              149,
              225,
              140,
              163,
              225,
              137,
              181,
              32,
              225,
              137,
              160,
              225,
              140,
              136,
              225,
              139,
              176,
              225,
              136,
              136,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              138,
              160,
              225,
              141,
              141,
              32,
              225,
              139,
              136,
              225,
              136,
              136,
              225,
              136,
              157,
              225,
              137,
              179,
              32,
              225,
              137,
              160,
              225,
              137,
              133,
              225,
              137,
              164,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              179,
              225,
              136,
              189,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              140,
              165,
              32,
              225,
              137,
              160,
              225,
              137,
              160,
              225,
              136,
              139,
              32,
              225,
              139,
              179,
              225,
              139,
              139,
              32,
              225,
              137,
              176,
              225,
              136,
              152,
              225,
              137,
              179,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              178,
              225,
              137,
              176,
              225,
              136,
              168,
              225,
              140,
              137,
              225,
              136,
              153,
              32,
              225,
              139,
              173,
              225,
              139,
              176,
              225,
              136,
              168,
              225,
              140,
              141,
              225,
              136,
              153,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              128,
              225,
              136,
              181,
              32,
              225,
              137,
              160,
              225,
              137,
              128,
              225,
              136,
              181,
              225,
              141,
              165,
              32,
              225,
              139,
              149,
              225,
              138,
              149,
              225,
              137,
              129,
              225,
              136,
              139,
              225,
              136,
              141,
              32,
              225,
              137,
              160,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              136,
              169,
              32,
              225,
              139,
              173,
              225,
              136,
              132,
              225,
              139,
              179,
              225,
              136,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              181,
              225,
              136,
              173,
              32,
              225,
              137,
              162,
              225,
              139,
              171,
              225,
              137,
              165,
              225,
              136,
              173,
              32,
              225,
              138,
              160,
              225,
              138,
              149,
              225,
              137,
              160,
              225,
              136,
              179,
              32,
              225,
              139,
              171,
              225,
              136,
              181,
              225,
              136,
              173,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              176,
              225,
              139,
              141,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              140,
              133,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              32,
              225,
              140,
              137,
              225,
              136,
              168,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              176,
              225,
              139,
              179,
              225,
              139,
              176,
              225,
              136,
              173,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              139,
              156,
              225,
              136,
              173,
              32,
              225,
              139,
              168,
              225,
              138,
              168,
              225,
              141,
              136,
              225,
              137,
              176,
              225,
              139,
              141,
              225,
              138,
              149,
              32,
              225,
              140,
              137,
              225,
              136,
              174,
              225,
              136,
              174,
              32,
              225,
              136,
              179,
              225,
              139,
              173,
              225,
              139,
              152,
              225,
              140,
              139,
              225,
              139,
              141,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              139,
              181,
              225,
              136,
              173,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              140,
              142,
              225,
              136,
              168,
              225,
              137,
              164,
              225,
              137,
              181,
              32,
              225,
              136,
              140,
              225,
              137,
              163,
              225,
              141,
              165,
              32,
              225,
              137,
              162,
              225,
              139,
              171,
              225,
              139,
              169,
              225,
              137,
              181,
              32,
              225,
              139,
              173,
              225,
              136,
              181,
              225,
              137,
              133,
              32,
              225,
              137,
              163,
              225,
              139,
              171,
              225,
              139,
              169,
              225,
              137,
              181,
              32,
              225,
              139,
              171,
              225,
              140,
              160,
              225,
              136,
              141,
              225,
              137,
              133,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              165,
              225,
              136,
              171,
              32,
              225,
              138,
              168,
              225,
              136,
              152,
              225,
              141,
              141,
              225,
              137,
              179,
              225,
              137,
              181,
              32,
              225,
              136,
              141,
              225,
              140,
              132,
              225,
              138,
              149,
              32,
              225,
              136,
              139,
              225,
              141,
              139,
              225,
              137,
              179,
              225,
              137,
              181,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              147,
              225,
              137,
              163,
              225,
              139,
              173,
              32,
              225,
              136,
              155,
              225,
              139,
              176,
              225,
              136,
              170,
              225,
              139,
              171,
              32,
              225,
              139,
              168,
              225,
              136,
              136,
              225,
              139,
              141,
              225,
              141,
              165,
              32,
              225,
              140,
              141,
              225,
              138,
              149,
              225,
              139,
              181,
              32,
              225,
              139,
              173,
              225,
              139,
              158,
              32,
              225,
              139,
              173,
              225,
              139,
              158,
              225,
              136,
              171,
              225,
              136,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              138,
              165,
              225,
              136,
              181,
              225,
              136,
              139,
              225,
              136,
              157,
              32,
              225,
              138,
              160,
              225,
              140,
              136,
              225,
              136,
              169,
              32,
              225,
              136,
              152,
              225,
              138,
              171,
              32,
              225,
              139,
              168,
              225,
              138,
              160,
              225,
              136,
              158,
              225,
              136,
              171,
              32,
              225,
              138,
              160,
              225,
              140,
              136,
              225,
              136,
              169,
              32,
              225,
              139,
              139,
              225,
              136,
              173,
              225,
              138,
              171,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              176,
              225,
              138,
              149,
              225,
              140,
              139,
              225,
              136,
              142,
              32,
              225,
              137,
              162,
              225,
              137,
              176,
              225,
              141,
              137,
              32,
              225,
              137,
              176,
              225,
              136,
              152,
              225,
              136,
              141,
              225,
              136,
              182,
              32,
              225,
              137,
              163,
              225,
              141,
              137,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              136,
              225,
              139,
              179,
              225,
              140,
              133,
              225,
              136,
              133,
              32,
              225,
              136,
              155,
              225,
              136,
              173,
              32,
              225,
              137,
              162,
              225,
              136,
              134,
              225,
              138,
              149,
              32,
              225,
              140,
              168,
              225,
              136,
              173,
              225,
              136,
              181,
              225,
              136,
              133,
              32,
              225,
              138,
              160,
              225,
              137,
              181,
              225,
              136,
              139,
              225,
              136,
              176,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              136,
              173,
              225,
              136,
              133,
              225,
              138,
              149,
              32,
              225,
              137,
              160,
              225,
              141,
              141,
              225,
              136,
              171,
              225,
              136,
              189,
              225,
              136,
              133,
              32,
              225,
              136,
              141,
              225,
              138,
              173,
              32,
              225,
              139,
              152,
              225,
              136,
              173,
              225,
              140,
              139,
              225,
              141,
              162,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              82,
              117,
              110,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              154,
              187,
              225,
              155,
              150,
              32,
              225,
              154,
              179,
              225,
              154,
              185,
              225,
              154,
              171,
              225,
              154,
              166,
              32,
              225,
              154,
              166,
              225,
              154,
              171,
              225,
              155,
              143,
              32,
              225,
              154,
              187,
              225,
              155,
              150,
              32,
              225,
              155,
              146,
              225,
              154,
              162,
              225,
              155,
              158,
              225,
              155,
              150,
              32,
              225,
              154,
              169,
              225,
              154,
              190,
              32,
              225,
              154,
              166,
              225,
              154,
              171,
              225,
              155,
              151,
              32,
              225,
              155,
              154,
              225,
              154,
              170,
              225,
              154,
              190,
              225,
              155,
              158,
              225,
              155,
              150,
              32,
              225,
              154,
              190,
              225,
              154,
              169,
              225,
              154,
              177,
              225,
              154,
              166,
              225,
              154,
              185,
              225,
              155,
              150,
              225,
              154,
              170,
              225,
              154,
              177,
              225,
              155,
              158,
              225,
              154,
              162,
              225,
              155,
              151,
              32,
              225,
              154,
              185,
              225,
              155,
              129,
              225,
              154,
              166,
              32,
              225,
              154,
              166,
              225,
              154,
              170,
              32,
              225,
              154,
              185,
              225,
              155,
              150,
              225,
              155,
              165,
              225,
              154,
              171,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              79,
              108,
              100,
              32,
              69,
              110,
              103,
              108,
              105,
              115,
              104,
              44,
              32,
              119,
              104,
              105,
              99,
              104,
              32,
              116,
              114,
              97,
              110,
              115,
              99,
              114,
              105,
              98,
              101,
              100,
              32,
              105,
              110,
              116,
              111,
              32,
              76,
              97,
              116,
              105,
              110,
              32,
              114,
              101,
              97,
              100,
              115,
              32,
              39,
              72,
              101,
              32,
              99,
              119,
              97,
              101,
              116,
              104,
              32,
              116,
              104,
              97,
              116,
              32,
              104,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              98,
              117,
              100,
              101,
              32,
              116,
              104,
              97,
              101,
              109,
              32,
              108,
              97,
              110,
              100,
              101,
              32,
              110,
              111,
              114,
              116,
              104,
              119,
              101,
              97,
              114,
              100,
              117,
              109,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              97,
              32,
              87,
              101,
              115,
              116,
              115,
              97,
              101,
              46,
              39,
              32,
              97,
              110,
              100,
              32,
              109,
              101,
              97,
              110,
              115,
              32,
              39,
              72,
              101,
              32,
              115,
              97,
              105,
              100,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              116,
              104,
              97,
              116,
              32,
              104,
              101,
              32,
              108,
              105,
              118,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              110,
              111,
              114,
              116,
              104,
              101,
              114,
              110,
              32,
              108,
              97,
              110,
              100,
              32,
              110,
              101,
              97,
              114,
              32,
              116,
              104,
              101,
              32,
              87,
              101,
              115,
              116,
              101,
              114,
              110,
              32,
              83,
              101,
              97,
              46,
              39,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              66,
              114,
              97,
              105,
              108,
              108,
              101,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              140,
              226,
              160,
              129,
              226,
              160,
              167,
              226,
              160,
              145,
              32,
              226,
              160,
              188,
              226,
              160,
              129,
              226,
              160,
              146,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              161,
              163,
              226,
              160,
              149,
              226,
              160,
              140,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              146,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              131,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              148,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              185,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              157,
              226,
              160,
              149,
              32,
              226,
              160,
              153,
              226,
              160,
              179,
              226,
              160,
              131,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              177,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              145,
              226,
              160,
              167,
              226,
              160,
              187,
              32,
              226,
              160,
              129,
              226,
              160,
              131,
              226,
              160,
              179,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              138,
              226,
              160,
              140,
              226,
              160,
              187,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              131,
              226,
              160,
              165,
              226,
              160,
              151,
              226,
              160,
              138,
              226,
              160,
              129,
              226,
              160,
              135,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              155,
              226,
              160,
              157,
              226,
              160,
              171,
              32,
              226,
              160,
              131,
              226,
              160,
              185,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              187,
              226,
              160,
              155,
              226,
              160,
              185,
              226,
              160,
              141,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              187,
              226,
              160,
              133,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              165,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              187,
              226,
              160,
              158,
              226,
              160,
              129,
              226,
              160,
              133,
              226,
              160,
              187,
              226,
              160,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              161,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              139,
              32,
              226,
              160,
              141,
              226,
              160,
              179,
              226,
              160,
              151,
              226,
              160,
              157,
              226,
              160,
              187,
              226,
              160,
              178,
              32,
              226,
              161,
              142,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              155,
              226,
              160,
              145,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              155,
              226,
              160,
              157,
              226,
              160,
              171,
              32,
              226,
              160,
              138,
              226,
              160,
              158,
              226,
              160,
              178,
              32,
              226,
              161,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              142,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              141,
              226,
              160,
              145,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              155,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              153,
              32,
              226,
              160,
              165,
              226,
              160,
              143,
              226,
              160,
              149,
              226,
              160,
              157,
              32,
              226,
              160,
              176,
              226,
              161,
              161,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              130,
              32,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              185,
              226,
              160,
              185,
              226,
              160,
              148,
              226,
              160,
              155,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              161,
              226,
              160,
              149,
              226,
              160,
              142,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              143,
              226,
              160,
              165,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              149,
              226,
              160,
              135,
              226,
              160,
              153,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              148,
              226,
              160,
              153,
              226,
              160,
              150,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              176,
              226,
              160,
              158,
              32,
              226,
              160,
              141,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              157,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              142,
              226,
              160,
              129,
              226,
              160,
              185,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              133,
              226,
              160,
              157,
              226,
              160,
              170,
              226,
              160,
              130,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              170,
              226,
              160,
              157,
              32,
              226,
              160,
              133,
              226,
              160,
              157,
              226,
              160,
              170,
              226,
              160,
              135,
              226,
              160,
              171,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              130,
              32,
              226,
              160,
              177,
              226,
              160,
              129,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              143,
              226,
              160,
              156,
              226,
              160,
              158,
              226,
              160,
              138,
              226,
              160,
              138,
              226,
              160,
              165,
              226,
              160,
              135,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              185,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              131,
              226,
              160,
              179,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              163,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              167,
              226,
              160,
              145,
              32,
              226,
              160,
              131,
              226,
              160,
              145,
              226,
              160,
              178,
              32,
              226,
              160,
              148,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              148,
              226,
              160,
              171,
              226,
              160,
              130,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              226,
              160,
              142,
              226,
              160,
              145,
              226,
              160,
              135,
              226,
              160,
              139,
              226,
              160,
              130,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              156,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              138,
              226,
              160,
              149,
              226,
              160,
              139,
              226,
              160,
              139,
              226,
              160,
              148,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              140,
              32,
              226,
              160,
              143,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              138,
              226,
              160,
              145,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              141,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              155,
              226,
              160,
              187,
              226,
              160,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              148,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              151,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              178,
              32,
              226,
              161,
              131,
              226,
              160,
              165,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              142,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              141,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              179,
              226,
              160,
              151,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              140,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              148,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              134,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              32,
              226,
              160,
              165,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              226,
              160,
              170,
              226,
              160,
              171,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              169,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              32,
              226,
              160,
              157,
              226,
              160,
              149,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              140,
              226,
              160,
              165,
              226,
              160,
              151,
              226,
              160,
              131,
              32,
              226,
              160,
              138,
              226,
              160,
              158,
              226,
              160,
              130,
              32,
              226,
              160,
              149,
              226,
              160,
              151,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              161,
              138,
              226,
              160,
              179,
              226,
              160,
              157,
              226,
              160,
              158,
              226,
              160,
              151,
              226,
              160,
              185,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              145,
              32,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              135,
              32,
              226,
              160,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              145,
              32,
              226,
              160,
              143,
              226,
              160,
              187,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              158,
              32,
              226,
              160,
              141,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              143,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              130,
              32,
              226,
              160,
              145,
              226,
              160,
              141,
              226,
              160,
              143,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              138,
              226,
              160,
              138,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              226,
              160,
              185,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              84,
              104,
              101,
              32,
              102,
              105,
              114,
              115,
              116,
              32,
              99,
              111,
              117,
              112,
              108,
              101,
              32,
              111,
              102,
              32,
              112,
              97,
              114,
              97,
              103,
              114,
              97,
              112,
              104,
              115,
              32,
              111,
              102,
              32,
              34,
              65,
              32,
              67,
              104,
              114,
              105,
              115,
              116,
              109,
              97,
              115,
              32,
              67,
              97,
              114,
              111,
              108,
              34,
              32,
              98,
              121,
              32,
              68,
              105,
              99,
              107,
              101,
              110,
              115,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              67,
              111,
              109,
              112,
              97,
              99,
              116,
              32,
              102,
              111,
              110,
              116,
              32,
              115,
              101,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              32,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              32,
              116,
              101,
              120,
              116,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              32,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              32,
              194,
              163,
              194,
              169,
              194,
              181,
              195,
              128,
              195,
              134,
              195,
              150,
              195,
              158,
              195,
              159,
              195,
              169,
              195,
              182,
              195,
              191,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              128,
              147,
              226,
              128,
              148,
              226,
              128,
              152,
              226,
              128,
              156,
              226,
              128,
              157,
              226,
              128,
              158,
              226,
              128,
              160,
              226,
              128,
              162,
              226,
              128,
              166,
              226,
              128,
              176,
              226,
              132,
              162,
              197,
              147,
              197,
              160,
              197,
              184,
              197,
              190,
              226,
              130,
              172,
              32,
              206,
              145,
              206,
              146,
              206,
              147,
              206,
              148,
              206,
              169,
              206,
              177,
              206,
              178,
              206,
              179,
              206,
              180,
              207,
              137,
              32,
              208,
              144,
              208,
              145,
              208,
              146,
              208,
              147,
              208,
              148,
              208,
              176,
              208,
              177,
              208,
              178,
              208,
              179,
              208,
              180,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              128,
              226,
              136,
              130,
              226,
              136,
              136,
              226,
              132,
              157,
              226,
              136,
              167,
              226,
              136,
              170,
              226,
              137,
              161,
              226,
              136,
              158,
              32,
              226,
              134,
              145,
              226,
              134,
              151,
              226,
              134,
              168,
              226,
              134,
              187,
              226,
              135,
              163,
              32,
              226,
              148,
              144,
              226,
              148,
              188,
              226,
              149,
              148,
              226,
              149,
              152,
              226,
              150,
              145,
              226,
              150,
              186,
              226,
              152,
              186,
              226,
              153,
              128,
              32,
              239,
              172,
              129,
              239,
              191,
              189,
              226,
              145,
              128,
              226,
              130,
              130,
              225,
              188,
              160,
              225,
              184,
              130,
              211,
              165,
              225,
              186,
              132,
              201,
              144,
              203,
              144,
              226,
              141,
              142,
              215,
              144,
              212,
              177,
              225,
              131,
              144,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              114,
              101,
              101,
              116,
              105,
              110,
              103,
              115,
              32,
              105,
              110,
              32,
              118,
              97,
              114,
              105,
              111,
              117,
              115,
              32,
              108,
              97,
              110,
              103,
              117,
              97,
              103,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              72,
              101,
              108,
              108,
              111,
              32,
              119,
              111,
              114,
              108,
              100,
              44,
              32,
              206,
              154,
              206,
              177,
              206,
              187,
              206,
              183,
              206,
              188,
              225,
              189,
              179,
              207,
              129,
              206,
              177,
              32,
              206,
              186,
              225,
              189,
              185,
              207,
              131,
              206,
              188,
              206,
              181,
              44,
              32,
              227,
              130,
              179,
              227,
              131,
              179,
              227,
              131,
              139,
              227,
              131,
              129,
              227,
              131,
              143,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              66,
              111,
              120,
              32,
              100,
              114,
              97,
              119,
              105,
              110,
              103,
              32,
              97,
              108,
              105,
              103,
              110,
              109,
              101,
              110,
              116,
              32,
              116,
              101,
              115,
              116,
              115,
              58,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              137,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              166,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              151,
              32,
              32,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              144,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              226,
              148,
              143,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              179,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              147,
              32,
              32,
              226,
              148,
              142,
              226,
              148,
              146,
              226,
              148,
              143,
              226,
              148,
              145,
              32,
              32,
              32,
              226,
              149,
              183,
              32,
              32,
              226,
              149,
              187,
              32,
              226,
              148,
              143,
              226,
              148,
              175,
              226,
              148,
              147,
              32,
              226,
              148,
              140,
              226,
              148,
              176,
              226,
              148,
              144,
              32,
              32,
              32,
              32,
              226,
              150,
              138,
              32,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              149,
              168,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              167,
              226,
              149,
              144,
              226,
              149,
              151,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              146,
              226,
              149,
              144,
              226,
              149,
              170,
              226,
              149,
              144,
              226,
              149,
              149,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              147,
              226,
              148,
              128,
              226,
              149,
              129,
              226,
              148,
              128,
              226,
              149,
              150,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              148,
              131,
              32,
              32,
              226,
              148,
              151,
              226,
              149,
              131,
              226,
              149,
              132,
              226,
              148,
              153,
              32,
              32,
              226,
              149,
              182,
              226,
              148,
              188,
              226,
              149,
              180,
              226,
              149,
              186,
              226,
              149,
              139,
              226,
              149,
              184,
              226,
              148,
              160,
              226,
              148,
              188,
              226,
              148,
              168,
              32,
              226,
              148,
              157,
              226,
              149,
              139,
              226,
              148,
              165,
              32,
              32,
              32,
              32,
              226,
              150,
              139,
              32,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              226,
              149,
              178,
              32,
              226,
              149,
              177,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              226,
              148,
              131,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              130,
              32,
              226,
              149,
              191,
              32,
              226,
              148,
              130,
              226,
              148,
              131,
              32,
              32,
              226,
              148,
              141,
              226,
              149,
              133,
              226,
              149,
              134,
              226,
              148,
              147,
              32,
              32,
              32,
              226,
              149,
              181,
              32,
              32,
              226,
              149,
              185,
              32,
              226,
              148,
              151,
              226,
              148,
              183,
              226,
              148,
              155,
              32,
              226,
              148,
              148,
              226,
              148,
              184,
              226,
              148,
              152,
              32,
              32,
              32,
              32,
              226,
              150,
              140,
              32,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              160,
              226,
              149,
              161,
              32,
              226,
              149,
              179,
              32,
              226,
              149,
              158,
              226,
              149,
              163,
              32,
              32,
              226,
              148,
              156,
              226,
              149,
              162,
              32,
              32,
              32,
              226,
              149,
              159,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              156,
              226,
              148,
              188,
              226,
              148,
              128,
              226,
              148,
              188,
              226,
              148,
              128,
              226,
              148,
              188,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              156,
              226,
              149,
              171,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              149,
              171,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              163,
              226,
              148,
              191,
              226,
              149,
              190,
              226,
              148,
              188,
              226,
              149,
              188,
              226,
              148,
              191,
              226,
              148,
              171,
              32,
              32,
              226,
              148,
              149,
              226,
              148,
              155,
              226,
              148,
              150,
              226,
              148,
              154,
              32,
              32,
              32,
              32,
              32,
              226,
              148,
              140,
              226,
              148,
              132,
              226,
              148,
              132,
              226,
              148,
              144,
              32,
              226,
              149,
              142,
              32,
              226,
              148,
              143,
              226,
              148,
              133,
              226,
              148,
              133,
              226,
              148,
              147,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              141,
              32,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              226,
              149,
              177,
              32,
              226,
              149,
              178,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              226,
              148,
              131,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              130,
              32,
              226,
              149,
              189,
              32,
              226,
              148,
              130,
              226,
              148,
              131,
              32,
              32,
              226,
              150,
              145,
              226,
              150,
              145,
              226,
              150,
              146,
              226,
              150,
              146,
              226,
              150,
              147,
              226,
              150,
              147,
              226,
              150,
              136,
              226,
              150,
              136,
              32,
              226,
              148,
              138,
              32,
              32,
              226,
              148,
              134,
              32,
              226,
              149,
              142,
              32,
              226,
              149,
              143,
              32,
              32,
              226,
              148,
              135,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              149,
              165,
              226,
              148,
              128,
              226,
              148,
              152,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              164,
              226,
              149,
              144,
              226,
              149,
              157,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              152,
              226,
              149,
              144,
              226,
              149,
              170,
              226,
              149,
              144,
              226,
              149,
              155,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              153,
              226,
              148,
              128,
              226,
              149,
              128,
              226,
              148,
              128,
              226,
              149,
              156,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              148,
              152,
              226,
              148,
              131,
              32,
              32,
              226,
              150,
              145,
              226,
              150,
              145,
              226,
              150,
              146,
              226,
              150,
              146,
              226,
              150,
              147,
              226,
              150,
              147,
              226,
              150,
              136,
              226,
              150,
              136,
              32,
              226,
              148,
              138,
              32,
              32,
              226,
              148,
              134,
              32,
              226,
              149,
              142,
              32,
              226,
              149,
              143,
              32,
              32,
              226,
              148,
              135,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              143,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              169,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              157,
              32,
              32,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              152,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              226,
              148,
              151,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              187,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              155,
              32,
              32,
              226,
              150,
              151,
              226,
              150,
              132,
              226,
              150,
              150,
              226,
              150,
              155,
              226,
              150,
              128,
              226,
              150,
              156,
              32,
              32,
              32,
              226,
              148,
              148,
              226,
              149,
              140,
              226,
              149,
              140,
              226,
              148,
              152,
              32,
              226,
              149,
              142,
              32,
              226,
              148,
              151,
              226,
              149,
              141,
              226,
              149,
              141,
              226,
              148,
              155,
              32,
              226,
              148,
              139,
              32,
              32,
              226,
              150,
              129,
              226,
              150,
              130,
              226,
              150,
              131,
              226,
              150,
              132,
              226,
              150,
              133,
              226,
              150,
              134,
              226,
              150,
              135,
              226,
              150,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              157,
              226,
              150,
              128,
              226,
              150,
              152,
              226,
              150,
              153,
              226,
              150,
              132,
              226,
              150,
              159,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              47,
              112,
              114,
              101,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              47,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              47,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32
            ]
          },
          "cookie": [],
          "responseTime": 185,
          "responseSize": 15630
        },
        "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has charset in content-type header",
            "skipped": false
          },
          {
            "assertion": "response has chunked transfer encoding header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f9332949-9448-4154-80eb-1d529c94c958",
          "length": 35,
          "cycles": 3,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4451b477-860d-46c5-bcd2-7868ba0f4387"
        },
        "item": {
          "id": "d461228b-6484-4aa6-8de7-b940895741a0",
          "name": "GZip Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "gzip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('gzipped', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'gzip')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*gzip.*/);",
                  "});"
                ],
                "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "gzip"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "571ea39a-a8a4-4e8f-8dd6-ded3efe248b2",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AX6g-hKzc9xBlP7UipCSMdq5w7DZTehCx.RXnX0LBr4%2FSeD%2B6VpFqL%2Foo60iySOj2F4qw0xPnQkog",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "d0045b7a-1faa-43d5-90a5-0126a089d774",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:09 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "379"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "ETag",
              "value": "W/\"17b-zCuYgL/fbe3v9O5mno/yQBACJcU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              103,
              122,
              105,
              112,
              112,
              101,
              100,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              100,
              45,
              48,
              53,
              102,
              48,
              97,
              54,
              54,
              56,
              52,
              97,
              99,
              99,
              57,
              99,
              52,
              54,
              52,
              55,
              100,
              100,
              100,
              98,
              50,
              49,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              55,
              49,
              101,
              97,
              51,
              57,
              97,
              45,
              97,
              56,
              97,
              52,
              45,
              52,
              101,
              56,
              102,
              45,
              56,
              100,
              100,
              54,
              45,
              100,
              101,
              100,
              51,
              101,
              102,
              101,
              50,
              52,
              56,
              98,
              50,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              88,
              54,
              103,
              45,
              104,
              75,
              122,
              99,
              57,
              120,
              66,
              108,
              80,
              55,
              85,
              105,
              112,
              67,
              83,
              77,
              100,
              113,
              53,
              119,
              55,
              68,
              90,
              84,
              101,
              104,
              67,
              120,
              46,
              82,
              88,
              110,
              88,
              48,
              76,
              66,
              114,
              52,
              37,
              50,
              70,
              83,
              101,
              68,
              37,
              50,
              66,
              54,
              86,
              112,
              70,
              113,
              76,
              37,
              50,
              70,
              111,
              111,
              54,
              48,
              105,
              121,
              83,
              79,
              106,
              50,
              70,
              52,
              113,
              119,
              48,
              120,
              80,
              110,
              81,
              107,
              111,
              103,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              32,
              34,
              71,
              69,
              84,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 108,
          "responseSize": 540
        },
        "id": "d461228b-6484-4aa6-8de7-b940895741a0",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "response headers should indicate valid content encoding",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response headers should indicate valid content encoding",
              "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
              "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:20)"
            }
          },
          {
            "assertion": "requesting http client should accept compressed response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "484bfb1b-e680-4118-a7d7-a7516d022c21",
          "length": 35,
          "cycles": 3,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c4f3dcd0-b24e-4967-b054-52c8841c8748"
        },
        "item": {
          "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
          "name": "Deflate Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "deflate"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('deflated', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'deflate')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*deflate.*/);",
                  "});"
                ],
                "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "deflate"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f734d05a-d7a9-446e-9692-564a32428589",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AX6g-hKzc9xBlP7UipCSMdq5w7DZTehCx.RXnX0LBr4%2FSeD%2B6VpFqL%2Foo60iySOj2F4qw0xPnQkog",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "bc066fc7-f600-4c01-8930-93aa6fca2f25",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:10 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "368"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Encoding",
              "value": "deflate"
            },
            {
              "key": "ETag",
              "value": "W/\"170-7xZiqKObHqFw51fv66U0Hsngqa0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Aic6jANaf2B7my0VO4_F7vNmZJ7tlDkuC.dCyxaSWB3%2FTgVKZtT4G2iI9ikbz8hW6T9rMr7T1GYLA; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              100,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              101,
              101,
              45,
              50,
              54,
              53,
              52,
              102,
              54,
              98,
              98,
              51,
              53,
              101,
              54,
              49,
              51,
              51,
              57,
              55,
              99,
              101,
              51,
              101,
              57,
              102,
              56,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              102,
              55,
              51,
              52,
              100,
              48,
              53,
              97,
              45,
              100,
              55,
              97,
              57,
              45,
              52,
              52,
              54,
              101,
              45,
              57,
              54,
              57,
              50,
              45,
              53,
              54,
              52,
              97,
              51,
              50,
              52,
              50,
              56,
              53,
              56,
              57,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              88,
              54,
              103,
              45,
              104,
              75,
              122,
              99,
              57,
              120,
              66,
              108,
              80,
              55,
              85,
              105,
              112,
              67,
              83,
              77,
              100,
              113,
              53,
              119,
              55,
              68,
              90,
              84,
              101,
              104,
              67,
              120,
              46,
              82,
              88,
              110,
              88,
              48,
              76,
              66,
              114,
              52,
              37,
              50,
              70,
              83,
              101,
              68,
              37,
              50,
              66,
              54,
              86,
              112,
              70,
              113,
              76,
              37,
              50,
              70,
              111,
              111,
              54,
              48,
              105,
              121,
              83,
              79,
              106,
              50,
              70,
              52,
              113,
              119,
              48,
              120,
              80,
              110,
              81,
              107,
              111,
              103,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              32,
              34,
              71,
              69,
              84,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 108,
          "responseSize": 541
        },
        "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "response headers should indicate valid content encoding",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response headers should indicate valid content encoding",
              "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
              "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:21)"
            }
          },
          {
            "assertion": "requesting http client should accept compressed response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "eb1139e1-952c-47b6-8539-1acb74d63d40",
          "length": 35,
          "cycles": 3,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b06f6e74-7a2c-4aec-97a1-2dce1129f721"
        },
        "item": {
          "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
          "name": "IP address in JSON format",
          "request": {
            "description": {
              "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "ip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('ip');",
                  "});",
                  "",
                  "pm.test(\"response must return a valid ip address\", function () {",
                  "    pm.expect(pm.response.json().ip).to",
                  "        // a really gnarly regular expression to ensure that ip address is in correct format",
                  "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                  "});"
                ],
                "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "ip"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f8589958-56ee-4dba-b5be-19ebf3d2c5a1",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Aic6jANaf2B7my0VO4_F7vNmZJ7tlDkuC.dCyxaSWB3%2FTgVKZtT4G2iI9ikbz8hW6T9rMr7T1GYLA",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e440e4b1-756f-4b63-82e1-fa6f87d6267d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:10 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "21"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"15-VtCIkyiPCnAcTFquxN3mUHAfo0Q\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              112,
              34,
              58,
              34,
              57,
              48,
              46,
              53,
              48,
              46,
              55,
              55,
              46,
              49,
              51,
              56,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 374,
          "responseSize": 21
        },
        "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "response must return a valid ip address",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "87feb027-2c8a-4418-aff2-6ac81c0606d8",
          "length": 35,
          "cycles": 3,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ea709c38-69cf-410b-a19a-b18a15c7750c"
        },
        "item": {
          "id": "a5d4d6d5-bef8-420b-9fbf-e21b8a1e09b1",
          "name": "Current UTC time",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "now"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html"
              },
              "id": "ca211094-b349-4c98-a830-f222b29f8a2e",
              "name": "time as text",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "now"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "49"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:12 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
                }
              ],
              "body": "Wed, 11 Jan 2017 10:27:12 GMT",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73453a52-4137-4f3e-90d6-3984ab6ae36b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response time matches server response 'date' header\", function () {",
                  "    pm.expect(pm.response.text()).to.eql(pm.response.headers.get('date'))",
                  "});"
                ],
                "_lastExecutionId": "f7a8df2d-a923-489f-8590-121c5884959a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "now"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ff4dde7b-6332-44e7-9edd-80427e6bdca2",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Aic6jANaf2B7my0VO4_F7vNmZJ7tlDkuC.dCyxaSWB3%2FTgVKZtT4G2iI9ikbz8hW6T9rMr7T1GYLA",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "7a83b98b-3990-43a1-b3cd-29a60e1ec03d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:10 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-4xOYe1YANh5tAmfOUn9aihXTRvk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ANSe6B8kJm_IetkAjTb1lakYckpTQajMK.pcZ5m4ygKBFHaYTZ9Zvd1nZ2P9i6%2FrrCLo1oiHlE6V8; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              87,
              101,
              100,
              44,
              32,
              48,
              55,
              32,
              65,
              112,
              114,
              32,
              50,
              48,
              50,
              49,
              32,
              49,
              49,
              58,
              51,
              53,
              58,
              49,
              48,
              32,
              71,
              77,
              84
            ]
          },
          "cookie": [],
          "responseTime": 106,
          "responseSize": 29
        },
        "id": "a5d4d6d5-bef8-420b-9fbf-e21b8a1e09b1",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response time matches server response 'date' header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d0de4c88-ebd7-41bc-906e-73c37c620323",
          "length": 35,
          "cycles": 3,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f71dcb05-aab8-42ab-8b54-6314349a72fb"
        },
        "item": {
          "id": "c8d50185-29c4-4f53-9575-c392b4fde8a3",
          "name": "Timestamp validity",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "valid"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6c2c373b-cc8b-4ef5-a76c-c6f0e6fb7d74",
              "name": "Valid Timestamp",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "valid"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": "2016-10-10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:33 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI; Path=/; HttpOnly"
                }
              ],
              "body": "{\"valid\":true}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI"
                }
              ]
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c21cba1a-1042-4723-b43d-63680913a75b",
              "name": "Invalid Timestamp",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "valid"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": "2016-10-10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "15"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:53 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"f-/i9mO/upK91ZtL0BkKFGtw\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI; Path=/; HttpOnly"
                }
              ],
              "body": "{\"valid\":false}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9da491d-4d99-4573-bdac-bcc292514a2f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query time is valid\", function () {",
                  "    pm.response.to.have.jsonBody('valid', true);",
                  "});"
                ],
                "_lastExecutionId": "a32a0c04-31b5-47f2-9b08-cf91e1736bb5"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "valid"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3568928d-dc2a-4f37-a59a-f07560f141d6",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ANSe6B8kJm_IetkAjTb1lakYckpTQajMK.pcZ5m4ygKBFHaYTZ9Zvd1nZ2P9i6%2FrrCLo1oiHlE6V8",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "9da15e74-443f-460a-a4a7-dd043b7748db",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:11 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"e-3MDSGou3nIOvlBZElUyTiBbaRZY\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AgPLsGHoxv9OM2F5_1BZNV6PPJrHL9F_r.rV54GH8jTOi3To3R%2BigVBBG8uSXpXZaqPS%2FbcskOJCY; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              118,
              97,
              108,
              105,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 117,
          "responseSize": 14
        },
        "id": "c8d50185-29c4-4f53-9575-c392b4fde8a3",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say whether request query time is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1649de0e-5477-4a5f-a757-b1d3a1abeb1d",
          "length": 35,
          "cycles": 3,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "419169c4-f249-4f7c-921d-ab03a8decea9"
        },
        "item": {
          "id": "212b68da-fdf7-4975-a19c-6f74e9e808a2",
          "name": "Format timestamp",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "format"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "format",
                  "value": "mm"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "76cec32e-facc-4bac-a014-298db8e01c85",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query time is valid\", function () {",
                  "    pm.response.to.have.jsonBody('format', '20');",
                  "});"
                ],
                "_lastExecutionId": "f4ad9d0e-2682-4be9-b8b2-4ea00c20503e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "format"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "format",
                "value": "mm"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1af0a13c-9f27-42dc-bd15-1baf98bf8951",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AgPLsGHoxv9OM2F5_1BZNV6PPJrHL9F_r.rV54GH8jTOi3To3R%2BigVBBG8uSXpXZaqPS%2FbcskOJCY",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "cce86adb-4577-4a88-93d5-61c268136300",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:11 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"f-oSXEKZdRgFcBy3nxz+EFgc2p5wo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AFASjhnrRLe7wMztDegfKcFQ54HqX5a6F.e%2BmKa60W0zg5iLV2pr7yP2I3oCOXRzvsGUUSg0HH%2B68; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              114,
              109,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 118,
          "responseSize": 15
        },
        "id": "212b68da-fdf7-4975-a19c-6f74e9e808a2",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say whether request query time is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5d8e95fb-c585-4d18-a8ce-7e58a38e1d55",
          "length": 35,
          "cycles": 3,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "aea1ec83-032d-4896-bafc-e9fdc999148c"
        },
        "item": {
          "id": "f83ababe-7141-4fd7-ad43-0800523e3133",
          "name": "Extract timestamp unit",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "unit"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "unit",
                  "value": "day"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aeef2e27-c75f-4d9c-a45a-44f66e72e74f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query unit is valid\", function () {",
                  "    pm.response.to.have.jsonBody('unit', 1);",
                  "});"
                ],
                "_lastExecutionId": "b2d1ab98-a6ed-48e0-ac6a-85e6d645303d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "unit"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "unit",
                "value": "day"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "44fc2ac5-fb2d-4186-bc4a-ec33a89dfed4",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AFASjhnrRLe7wMztDegfKcFQ54HqX5a6F.e%2BmKa60W0zg5iLV2pr7yP2I3oCOXRzvsGUUSg0HH%2B68",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "1ff903b2-9ea4-4305-bb18-0b9d84148171",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:11 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "10"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"a-Tq86/bt7ViOhfxXgqKCTL6sompk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AOdYf2jAnf0F4ik9HP6NlHZUVv2lCPWtY.%2B7FBraIXWsHRt4OqSYUoqx0JzWDpwl9FYK5SPI9ssk0; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              117,
              110,
              105,
              116,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 198,
          "responseSize": 10
        },
        "id": "f83ababe-7141-4fd7-ad43-0800523e3133",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say whether request query unit is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "23a8af92-2b57-4aa6-8564-4c515746a48a",
          "length": 35,
          "cycles": 3,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b9d5255e-70d6-418e-92ca-df43e83cd9c2"
        },
        "item": {
          "id": "9704752a-bdc9-4cf3-95f5-41f8d640556b",
          "name": "Time addition",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "add"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "years",
                  "value": "100"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c273fbfd-6b01-4d9d-af5b-2a15775203cf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the added years\", function () {",
                  "    pm.response.to.have.jsonBody('sum', 'Sat Oct 10 2116 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "243679b7-9064-4a32-96fa-79b47411e320"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "add"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "years",
                "value": "100"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7fefafee-a6da-475e-ac44-15387c582e84",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AOdYf2jAnf0F4ik9HP6NlHZUVv2lCPWtY.%2B7FBraIXWsHRt4OqSYUoqx0JzWDpwl9FYK5SPI9ssk0",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "03435577-9464-4675-9141-cc5e61c1248d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:11 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "43"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"2b-NI+s6dhyoOC4+MmZW5sCBgzsnMw\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ALPskV-qV1Uq1piBWYT2aeaGo4cOj51S0.CN4D5X%2FPbmBhoctervlxzIwZcgVkeAVdboycp6wfi60; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              109,
              34,
              58,
              34,
              83,
              97,
              116,
              32,
              79,
              99,
              116,
              32,
              49,
              48,
              32,
              50,
              49,
              49,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 118,
          "responseSize": 43
        },
        "id": "9704752a-bdc9-4cf3-95f5-41f8d640556b",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the added years",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "183dbf75-4059-4a3c-a378-840fdeff850f",
          "length": 35,
          "cycles": 3,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1fe194b5-f530-4214-810c-7b01df251e7d"
        },
        "item": {
          "id": "95a5016d-a032-41d2-8808-b7e1676f9831",
          "name": "Time subtraction",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "subtract"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "years",
                  "value": "50"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f16c1cc3-5a11-4939-85c2-86d6566b9547",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the subtracted years\", function () {",
                  "    pm.response.to.have.jsonBody('difference', 'Mon Oct 10 1966 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "70b6f3bf-f0fc-404d-a5df-90e99bb6921b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "subtract"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "years",
                "value": "50"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "858fb1e8-ac4e-44ce-ad81-ed1a198172c5",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ALPskV-qV1Uq1piBWYT2aeaGo4cOj51S0.CN4D5X%2FPbmBhoctervlxzIwZcgVkeAVdboycp6wfi60",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "58617d4d-2581-4b2c-bb51-17ea07bd59a0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "50"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"32-PND5PkDaCj18RICDpWcSi9vkakY\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AJ78BfsrrnhwaOc3cjfZsI7FrQ9k5iDfD.QKPGOZNh89xwCQcynG8EZKqYUQmWh3ewgYvmxZcfzmI; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              34,
              58,
              34,
              77,
              111,
              110,
              32,
              79,
              99,
              116,
              32,
              49,
              48,
              32,
              49,
              57,
              54,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 108,
          "responseSize": 50
        },
        "id": "95a5016d-a032-41d2-8808-b7e1676f9831",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the subtracted years",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4d4699a7-50ed-49d2-b1b2-54a2de25b64b",
          "length": 35,
          "cycles": 3,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "31c44b96-ab00-49e0-af7e-d561951666ea"
        },
        "item": {
          "id": "7028b100-a994-4204-bcc7-cd9f69366299",
          "name": "Start of time",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "start"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "unit",
                  "value": "month"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7972aa90-336e-47ac-a922-c8d8588d858e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the beginning of month\", function () {",
                  "    pm.response.to.have.jsonBody('start', 'Sat Oct 01 2016 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "c5330198-ebf3-4b45-959f-3e87f4907669"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "start"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "unit",
                "value": "month"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3bc1a376-08b0-48f3-bb8e-623b8432d978",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AJ78BfsrrnhwaOc3cjfZsI7FrQ9k5iDfD.QKPGOZNh89xwCQcynG8EZKqYUQmWh3ewgYvmxZcfzmI",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "fd2665a8-2a7e-4429-a7f6-d73a13913c96",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "45"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"2d-+DRNEGBPVvAa16PUC5AjHCOmq/0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ArL40vS1XzPN4JtTAnJKONk5L4UQ9tb-J.pfq%2BHlcfiHq0L7hlGdxskLu8UPWTTRIjAX9xFY86aSM; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              83,
              97,
              116,
              32,
              79,
              99,
              116,
              32,
              48,
              49,
              32,
              50,
              48,
              49,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 114,
          "responseSize": 45
        },
        "id": "7028b100-a994-4204-bcc7-cd9f69366299",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the beginning of month",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8794e3b1-f806-40f7-9936-90fc895df02b",
          "length": 35,
          "cycles": 3,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "88151bde-9ed5-49f8-8190-b9259310341d"
        },
        "item": {
          "id": "90f71a58-4559-405f-b6f8-40ee051cf6dd",
          "name": "Object representation",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "object"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "055a57c1-fc26-43fb-ac02-0524487d1b7a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the date components\", function () {",
                  "    pm.expect(pm.response.json()).to.eql({",
                  "        \"years\": 2016,",
                  "        \"months\": 9,",
                  "        \"date\": 10,",
                  "        ",
                  "        \"hours\": 0,",
                  "        \"minutes\": 0,",
                  "        \"seconds\": 0,",
                  "        \"milliseconds\": 0",
                  "    });",
                  "});"
                ],
                "_lastExecutionId": "e83a9a44-d35b-475e-ad2f-8535ea667752"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "object"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9a2397bd-2736-40c2-8037-789f23f41213",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ArL40vS1XzPN4JtTAnJKONk5L4UQ9tb-J.pfq%2BHlcfiHq0L7hlGdxskLu8UPWTTRIjAX9xFY86aSM",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "8fca4345-b363-4ca9-8ce9-2827160a51fd",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "86"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"56-sbJq4ZMpg65IM+Xxb5GSE9GGvQc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AiDz6eVmRO1mI2lzyDUzYx7PoaF2sD2mM.j%2BlD7sFHmdh74V2H3hnKS5uVzZ%2F1AHFlxYtLB%2BzF2cc; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              121,
              101,
              97,
              114,
              115,
              34,
              58,
              50,
              48,
              49,
              54,
              44,
              34,
              109,
              111,
              110,
              116,
              104,
              115,
              34,
              58,
              57,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              104,
              111,
              117,
              114,
              115,
              34,
              58,
              48,
              44,
              34,
              109,
              105,
              110,
              117,
              116,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              115,
              101,
              99,
              111,
              110,
              100,
              115,
              34,
              58,
              48,
              44,
              34,
              109,
              105,
              108,
              108,
              105,
              115,
              101,
              99,
              111,
              110,
              100,
              115,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 114,
          "responseSize": 86
        },
        "id": "90f71a58-4559-405f-b6f8-40ee051cf6dd",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the date components",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "52e2ee1a-d6a4-4ed7-ada8-edffc33d634e",
          "length": 35,
          "cycles": 3,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "238e4110-afa7-4fe1-ab37-da20435f1639"
        },
        "item": {
          "id": "1a17bac8-0451-4c5c-86b4-c2ecfdda9734",
          "name": "Before comparisons",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "before"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "target",
                  "value": "2017-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2917b24-d2a3-4927-bb2b-22e6181d3933",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is before target\", function () {",
                  "    pm.response.to.have.jsonBody('before', true);",
                  "});"
                ],
                "_lastExecutionId": "5f9e34ad-2309-4527-bade-144103846aff"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "before"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "target",
                "value": "2017-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f9b5364b-0779-477c-a717-c73a3281685d",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AiDz6eVmRO1mI2lzyDUzYx7PoaF2sD2mM.j%2BlD7sFHmdh74V2H3hnKS5uVzZ%2F1AHFlxYtLB%2BzF2cc",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e0d8d043-e9ed-4404-9f76-666353e90f24",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:12 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"f-pYji1tDlxSR6vlOQLH4azAZGkpo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AwnUxo8OLi84G7lhZE3xv4XvqhutTEGTb.YfIzkTJ94S2qmy72%2BLuY%2BnbXpxVHLhS8BhkfGi9vH1Q; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              98,
              101,
              102,
              111,
              114,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 15
        },
        "id": "1a17bac8-0451-4c5c-86b4-c2ecfdda9734",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is before target",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "81c1b9be-c236-4b3a-819d-2062c6b85815",
          "length": 35,
          "cycles": 3,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5ddc62ae-4341-4f74-a8e7-88b0ef4ecdd5"
        },
        "item": {
          "id": "5a54c7e6-3ee8-405d-9e31-bc43e60b86bb",
          "name": "After comparisons",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "after"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "target",
                  "value": "2017-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5549751f-5ef1-42fa-8847-f9bc6e2b434f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is not after target\", function () {",
                  "    pm.response.to.have.jsonBody('after', false);",
                  "});"
                ],
                "_lastExecutionId": "ab81a676-0e2c-4d54-9f80-f5ea8552b49b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "after"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "target",
                "value": "2017-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ab7c1af2-8583-4694-8cf3-f0d7c9eb5629",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AwnUxo8OLi84G7lhZE3xv4XvqhutTEGTb.YfIzkTJ94S2qmy72%2BLuY%2BnbXpxVHLhS8BhkfGi9vH1Q",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "35f266b0-4a04-43df-ac2e-d337a9bd3f57",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"f-1yo7D9f7qelpng2aZyy3Vk9UAA8\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AV_6in6CO0uLA15GGHIfHKeVAmIMY0WKL.gMJC3pasv5yBt8wkfZuQt1hdvbgBZdLqxyh738Rp6m8; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              102,
              116,
              101,
              114,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 120,
          "responseSize": 15
        },
        "id": "5a54c7e6-3ee8-405d-9e31-bc43e60b86bb",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is not after target",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e4051151-dcc8-4724-997a-c1cfe12607c6",
          "length": 35,
          "cycles": 3,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9c6fc218-40a0-44de-a194-478e43d72fff"
        },
        "item": {
          "id": "0356ee05-cf82-490d-b6ec-1b62df3bff47",
          "name": "Between timestamps",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "between"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "start",
                  "value": "2017-10-10"
                },
                {
                  "key": "end",
                  "value": "2019-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5106a113-8ee9-47f1-b69c-eea0fffe8f2b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is not between start and end\", function () {",
                  "    pm.response.to.have.jsonBody('between', false);",
                  "});"
                ],
                "_lastExecutionId": "66c301fc-937b-4d9f-bc76-c1d0ee83b9fa"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "between"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "start",
                "value": "2017-10-10"
              },
              {
                "key": "end",
                "value": "2019-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "79614b6f-59e3-4194-a523-3fe6261929c5",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AV_6in6CO0uLA15GGHIfHKeVAmIMY0WKL.gMJC3pasv5yBt8wkfZuQt1hdvbgBZdLqxyh738Rp6m8",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "3cddef58-b298-450a-91f1-fbd4038dffa1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "17"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"11-Q5jSDN8J9UWiS3bMKjaPflikNDU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Af_bxfGKHJHyQrbn9iPNOseUeLcfP9Teo.T%2B%2FwnhH4tIPFZsxtvqhG80AHyNVdIjbTHYuSsgNK2Ks; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              98,
              101,
              116,
              119,
              101,
              101,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 150,
          "responseSize": 17
        },
        "id": "0356ee05-cf82-490d-b6ec-1b62df3bff47",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is not between start and end",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "008d4eef-586f-4c9d-a743-e5fbcdc88bbb",
          "length": 35,
          "cycles": 3,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3ccec60a-bed3-4ec7-b997-e3ca0bbebf19"
        },
        "item": {
          "id": "e4ff274f-e54a-4793-b54a-0dd7011f17b3",
          "name": "Leap year check",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "leap"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "99d38ceb-e45e-45f6-a41c-5501e2397b1a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is within leap year\", function () {",
                  "    pm.response.to.have.jsonBody('leap', true);",
                  "});"
                ],
                "_lastExecutionId": "5f7a2205-a3b7-4876-a883-93000b2be151"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "leap"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4ff149d6-a8bd-4797-ac7d-9060b8f08bcd",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Af_bxfGKHJHyQrbn9iPNOseUeLcfP9Teo.T%2B%2FwnhH4tIPFZsxtvqhG80AHyNVdIjbTHYuSsgNK2Ks",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "0f5d8d67-7272-4b61-9a05-046123132dc4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "13"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"d-/cHbrs54NBQWs+BmYLn36yaGw/0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Aj_cKGsYnl4IllSek_kB4gbkN0GKH9YmU.NXXaxkBnUbhTmbrpiwV5rv9teiWFmpWloTy3RH7IYuo; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              108,
              101,
              97,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 111,
          "responseSize": 13
        },
        "id": "e4ff274f-e54a-4793-b54a-0dd7011f17b3",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is within leap year",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ee074b0c-34cb-419e-9c34-def403be32ae",
          "length": 35,
          "cycles": 3,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "68d977f3-4cdc-47b1-9640-0ac57ba2b85f"
        },
        "item": {
          "id": "715da1e6-8db6-448b-b9c9-b09e68c0f355",
          "name": "DigestAuth Request",
          "request": {
            "description": {
              "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "digest-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d839093-6eb1-4377-81f9-cf60d5a4e9d2",
                "type": "text/javascript",
                "exec": [
                  "tests[\"response code is 401\"] = responseCode.code === 401;",
                  "tests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));",
                  "",
                  "var authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),",
                  "    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,",
                  "    realmEnd = authenticateHeader.indexOf('\"',realmStart),",
                  "    realm = authenticateHeader.slice(realmStart,realmEnd),",
                  "    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,",
                  "    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),",
                  "    nonce = authenticateHeader.slice(nonceStart,nonceEnd);",
                  "    ",
                  "postman.setGlobalVariable('echo_digest_realm', realm);",
                  "postman.setGlobalVariable('echo_digest_nonce', nonce);"
                ],
                "_lastExecutionId": "f2a73ac2-a573-40ca-88a8-196f9bbc2a38"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "digest-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "23286f94-b989-4aed-b5a5-37f5c0033426",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Aj_cKGsYnl4IllSek_kB4gbkN0GKH9YmU.NXXaxkBnUbhTmbrpiwV5rv9teiWFmpWloTy3RH7IYuo",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "b272bfb9-5a98-4292-b3c6-c2fb61f8bce9",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:13 GMT"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "WWW-Authenticate",
              "value": "Digest realm=\"Users\", nonce=\"ihsqyoHzQ05wz2B7865j3Vr3AGGxlaDi\", qop=\"auth\""
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A1sR43P_cGk42H1pW6nA0Qi3QvfY7T4rY.%2FuZxqIO6uvxQYdPQzidXMUzBqsy5Xe92hwolzkVYQmA; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 107,
          "responseSize": 12
        },
        "id": "715da1e6-8db6-448b-b9c9-b09e68c0f355",
        "assertions": [
          {
            "assertion": "response code is 401",
            "skipped": false
          },
          {
            "assertion": "response has WWW-Authenticate header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ff3ae2e2-eab1-44ef-a3b8-b205c72123ae",
          "length": 35,
          "cycles": 3,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "6e60200a-e821-4bab-ad71-720ba5c52639"
        },
        "item": {
          "id": "fd22acbd-cb82-49c2-82de-f688345b179f",
          "name": "GET Request",
          "request": {
            "description": {
              "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "get"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a138aa63-f066-4c9d-9675-b6cffc01c10a",
              "name": "GET Request Woops",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "get"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "foo1",
                      "value": "bar1"
                    },
                    {
                      "key": "foo2",
                      "value": "bar2"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Date",
                  "value": "Tue, 11 Jun 2019 10:43:13 GMT"
                },
                {
                  "key": "ETag",
                  "value": "W/\"161-aLhNcsGArlgLSKbxPqfBW3viHPI\""
                },
                {
                  "key": "Server",
                  "value": "nginx"
                },
                {
                  "key": "set-cookie",
                  "value": "sails.sid=s%3AGz-wblZgXE8FCDq7aJpx_tUgZUcG3Nsw.LdNEN8L0C7nGWkvGLwvdw6R2s6Syjr%2FzkvyevA8qR0c; Path=/; HttpOnly"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Content-Length",
                  "value": "249"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "body": "{\n    \"args\": {\n        \"foo1\": \"bar1\",\n        \"foo2\": \"bar2\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"postman-token\": \"5c27cd7d-6b16-4e5a-a0ef-191c9a3a275f\",\n        \"user-agent\": \"PostmanRuntime/7.6.1\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"url\": \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e9eff07-1580-48cb-993d-e9a68150f888",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with request queries\", function () {",
                  "    pm.response.to.have.jsonBody('args.foo1', 'bar1')",
                  "        .and.have.jsonBody('args.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "5065259d-a475-4ffe-8414-de55cf5710c3"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "get"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5080cbf4-abfb-4963-b09a-c4ef04f5de3d",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A1sR43P_cGk42H1pW6nA0Qi3QvfY7T4rY.%2FuZxqIO6uvxQYdPQzidXMUzBqsy5Xe92hwolzkVYQmA",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f56c6802-fe31-435d-b4fe-2175278e8459",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:13 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "524"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"20c-DxeNopxArmzjBeGa2bXWUQnw7b8\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A62oshmJ5RjckKSvZKMz1h09lBoULsNLS.7NUicQjfWA5sHb0wHnbgMQAVAFFsXmPHZ5ipy5WS3nM; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              49,
              45,
              51,
              49,
              102,
              57,
              52,
              102,
              50,
              50,
              53,
              54,
              102,
              56,
              53,
              98,
              56,
              52,
              48,
              57,
              53,
              55,
              56,
              49,
              53,
              48,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              53,
              48,
              56,
              48,
              99,
              98,
              102,
              52,
              45,
              97,
              98,
              102,
              98,
              45,
              52,
              57,
              54,
              51,
              45,
              98,
              48,
              57,
              97,
              45,
              99,
              52,
              101,
              102,
              48,
              52,
              102,
              53,
              100,
              101,
              51,
              100,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              49,
              115,
              82,
              52,
              51,
              80,
              95,
              99,
              71,
              107,
              52,
              50,
              72,
              49,
              112,
              87,
              54,
              110,
              65,
              48,
              81,
              105,
              51,
              81,
              118,
              102,
              89,
              55,
              84,
              52,
              114,
              89,
              46,
              37,
              50,
              70,
              117,
              90,
              120,
              113,
              73,
              79,
              54,
              117,
              118,
              120,
              81,
              89,
              100,
              80,
              81,
              122,
              105,
              100,
              88,
              77,
              85,
              122,
              66,
              113,
              115,
              121,
              53,
              88,
              101,
              57,
              50,
              104,
              119,
              111,
              108,
              122,
              107,
              86,
              89,
              81,
              109,
              65,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              103,
              101,
              116,
              63,
              102,
              111,
              111,
              49,
              61,
              98,
              97,
              114,
              49,
              38,
              102,
              111,
              111,
              50,
              61,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 129,
          "responseSize": 524
        },
        "id": "fd22acbd-cb82-49c2-82de-f688345b179f",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with request queries",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8c48e1a1-057d-4f4f-b338-ae89fb905fb3",
          "length": 35,
          "cycles": 3,
          "position": 1,
          "iteration": 1,
          "httpRequestId": "10444a0a-e077-45f9-8a2f-d644e350c2f3"
        },
        "item": {
          "id": "eafd3e2e-2568-4847-a900-3d9e3b5fd395",
          "name": "POST Raw Text",
          "request": {
            "description": {
              "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "post"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "338be7b5-bc6b-42b3-b7f0-cb760d9b0648",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with request body\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "8c098e16-c6f8-4881-b939-81e419371545"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "post"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4d810a2a-6fcd-40de-9634-8246bbaf7b42",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A62oshmJ5RjckKSvZKMz1h09lBoULsNLS.7NUicQjfWA5sHb0wHnbgMQAVAFFsXmPHZ5ipy5WS3nM",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "a0a49d02-f568-49b3-bb8d-189f7a53f181",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "627"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"273-o1OWXCHV/NT0G8Cj84GcMBOr3VU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AKHRQAHpYxeTipqXMxP3-FSeMUyCDYzMq.cmshPCwCc83elW5RVlY%2B2ujv2ofqgh%2FYPmm2t3mcrBw; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              50,
              45,
              50,
              101,
              54,
              48,
              56,
              100,
              98,
              53,
              53,
              56,
              100,
              101,
              48,
              57,
              100,
              49,
              55,
              97,
              102,
              101,
              53,
              54,
              55,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              100,
              56,
              49,
              48,
              97,
              50,
              97,
              45,
              54,
              102,
              99,
              100,
              45,
              52,
              48,
              100,
              101,
              45,
              57,
              54,
              51,
              52,
              45,
              56,
              50,
              52,
              54,
              98,
              98,
              97,
              102,
              55,
              98,
              52,
              50,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              54,
              50,
              111,
              115,
              104,
              109,
              74,
              53,
              82,
              106,
              99,
              107,
              75,
              83,
              118,
              90,
              75,
              77,
              122,
              49,
              104,
              48,
              57,
              108,
              66,
              111,
              85,
              76,
              115,
              78,
              76,
              83,
              46,
              55,
              78,
              85,
              105,
              99,
              81,
              106,
              102,
              87,
              65,
              53,
              115,
              72,
              98,
              48,
              119,
              72,
              110,
              98,
              103,
              77,
              81,
              65,
              86,
              65,
              70,
              70,
              115,
              88,
              109,
              80,
              72,
              90,
              53,
              105,
              112,
              121,
              53,
              87,
              83,
              51,
              110,
              77,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 243,
          "responseSize": 627
        },
        "id": "eafd3e2e-2568-4847-a900-3d9e3b5fd395",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with request body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bcd466bb-23ae-4b2a-ad41-47cd15997f96",
          "length": 35,
          "cycles": 3,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "f382fb55-2b5a-484b-85a1-9f81f7185d69"
        },
        "item": {
          "id": "0c497979-1113-4c8a-9374-76b5c6c645e2",
          "name": "POST Form Data",
          "request": {
            "description": {
              "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "post"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0c85547c-6dcf-49e7-9ddf-2c76649633dd",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('form.foo1', 'bar1')",
                  "        .and.have.jsonBody('form.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "e68d56c2-7137-446d-a661-f70d629e89e9"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "post"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d5fe2bc4-73a8-4387-9dd2-173d11465b29",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 19,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AKHRQAHpYxeTipqXMxP3-FSeMUyCDYzMq.cmshPCwCc83elW5RVlY%2B2ujv2ofqgh%2FYPmm2t3mcrBw",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ]
          }
        },
        "response": {
          "id": "b3233b30-26bc-4591-afe4-8696772cf145",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "648"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"288-O33GFL/8yyyn+bNS5BLkj+xdBHg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AgFhC61vpKhT2BIPlE1dIBc2_x8BB_vBP.mwxcB1vU2PIjtsqAHexcT0th9bUUHEMETfFiie0CzHI; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              50,
              45,
              53,
              102,
              99,
              57,
              54,
              53,
              49,
              52,
              50,
              101,
              102,
              52,
              50,
              97,
              98,
              56,
              55,
              99,
              97,
              102,
              97,
              100,
              52,
              48,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              49,
              57,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              100,
              53,
              102,
              101,
              50,
              98,
              99,
              52,
              45,
              55,
              51,
              97,
              56,
              45,
              52,
              51,
              56,
              55,
              45,
              57,
              100,
              100,
              50,
              45,
              49,
              55,
              51,
              100,
              49,
              49,
              52,
              54,
              53,
              98,
              50,
              57,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              120,
              45,
              119,
              119,
              119,
              45,
              102,
              111,
              114,
              109,
              45,
              117,
              114,
              108,
              101,
              110,
              99,
              111,
              100,
              101,
              100,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              75,
              72,
              82,
              81,
              65,
              72,
              112,
              89,
              120,
              101,
              84,
              105,
              112,
              113,
              88,
              77,
              120,
              80,
              51,
              45,
              70,
              83,
              101,
              77,
              85,
              121,
              67,
              68,
              89,
              122,
              77,
              113,
              46,
              99,
              109,
              115,
              104,
              80,
              67,
              119,
              67,
              99,
              56,
              51,
              101,
              108,
              87,
              53,
              82,
              86,
              108,
              89,
              37,
              50,
              66,
              50,
              117,
              106,
              118,
              50,
              111,
              102,
              113,
              103,
              104,
              37,
              50,
              70,
              89,
              80,
              109,
              109,
              50,
              116,
              51,
              109,
              99,
              114,
              66,
              119,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 122,
          "responseSize": 648
        },
        "id": "0c497979-1113-4c8a-9374-76b5c6c645e2",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "923f7acc-2496-4641-9549-a0afd689bab5",
          "length": 35,
          "cycles": 3,
          "position": 3,
          "iteration": 1,
          "httpRequestId": "38fda21f-1dfc-45f4-87f3-5b287e25eb80"
        },
        "item": {
          "id": "5a239488-6a6a-470c-b7ff-eaa84a7ffe58",
          "name": "PUT Request",
          "request": {
            "description": {
              "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "put"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e5a1c629-4531-4a25-8f2d-c57e8b85c1a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "ef7e8413-11f6-4f00-970a-53b37c68e30b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "put"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ab21f691-c28f-4281-8907-f8851cf2c7d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AgFhC61vpKhT2BIPlE1dIBc2_x8BB_vBP.mwxcB1vU2PIjtsqAHexcT0th9bUUHEMETfFiie0CzHI",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "a201a924-7719-47f2-9fc7-d90d83c3ea83",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "626"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"272-hmyWYsvI2d57DN+05PHppuqIG1g\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AOiUvMCu7QUpG7OuJmemTkkLdLn04xleK.%2ByTf99bWAL0m%2BfJMXOByLlDRmTq3HVRhqe%2BBWo87HUs; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              50,
              45,
              51,
              48,
              100,
              56,
              49,
              97,
              54,
              99,
              50,
              50,
              102,
              53,
              98,
              101,
              50,
              52,
              54,
              53,
              53,
              49,
              54,
              54,
              98,
              51,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              97,
              98,
              50,
              49,
              102,
              54,
              57,
              49,
              45,
              99,
              50,
              56,
              102,
              45,
              52,
              50,
              56,
              49,
              45,
              56,
              57,
              48,
              55,
              45,
              102,
              56,
              56,
              53,
              49,
              99,
              102,
              50,
              99,
              55,
              100,
              52,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              103,
              70,
              104,
              67,
              54,
              49,
              118,
              112,
              75,
              104,
              84,
              50,
              66,
              73,
              80,
              108,
              69,
              49,
              100,
              73,
              66,
              99,
              50,
              95,
              120,
              56,
              66,
              66,
              95,
              118,
              66,
              80,
              46,
              109,
              119,
              120,
              99,
              66,
              49,
              118,
              85,
              50,
              80,
              73,
              106,
              116,
              115,
              113,
              65,
              72,
              101,
              120,
              99,
              84,
              48,
              116,
              104,
              57,
              98,
              85,
              85,
              72,
              69,
              77,
              69,
              84,
              102,
              70,
              105,
              105,
              101,
              48,
              67,
              122,
              72,
              73,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              117,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 144,
          "responseSize": 626
        },
        "id": "5a239488-6a6a-470c-b7ff-eaa84a7ffe58",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "795bf6ca-2da7-459d-b895-70804e556b9a",
          "length": 35,
          "cycles": 3,
          "position": 4,
          "iteration": 1,
          "httpRequestId": "7213c444-6cb3-41d5-82dd-b75b08295ab6"
        },
        "item": {
          "id": "3b8f1e32-56c6-41b5-9981-7d99b09cd709",
          "name": "PATCH Request",
          "request": {
            "description": {
              "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "patch"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "63e159bf-ca02-43f6-a8d3-af615b4144bf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "c1d7ecbc-a426-42cb-993c-d84a41771f7d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "patch"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b67bc275-f254-44a0-b5fc-b2a10e750c9f",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AOiUvMCu7QUpG7OuJmemTkkLdLn04xleK.%2ByTf99bWAL0m%2BfJMXOByLlDRmTq3HVRhqe%2BBWo87HUs",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "02554652-e0c8-46d3-ab7e-350ed5918e7a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:14 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "634"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"27a-2BWlDDtHiygSwDLpWOyNTJs+hWY\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AtQ1-72v2ar_Fb2MB0dMYi8kGSZ2yZlLq.4wZ6PcB0x12ywk7gYVO6SvciXwPUwZKl1EynEREZNbU; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              50,
              45,
              53,
              52,
              100,
              48,
              50,
              52,
              57,
              55,
              51,
              51,
              97,
              53,
              97,
              57,
              48,
              102,
              49,
              55,
              53,
              55,
              99,
              48,
              102,
              49,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              98,
              54,
              55,
              98,
              99,
              50,
              55,
              53,
              45,
              102,
              50,
              53,
              52,
              45,
              52,
              52,
              97,
              48,
              45,
              98,
              53,
              102,
              99,
              45,
              98,
              50,
              97,
              49,
              48,
              101,
              55,
              53,
              48,
              99,
              57,
              102,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              79,
              105,
              85,
              118,
              77,
              67,
              117,
              55,
              81,
              85,
              112,
              71,
              55,
              79,
              117,
              74,
              109,
              101,
              109,
              84,
              107,
              107,
              76,
              100,
              76,
              110,
              48,
              52,
              120,
              108,
              101,
              75,
              46,
              37,
              50,
              66,
              121,
              84,
              102,
              57,
              57,
              98,
              87,
              65,
              76,
              48,
              109,
              37,
              50,
              66,
              102,
              74,
              77,
              88,
              79,
              66,
              121,
              76,
              108,
              68,
              82,
              109,
              84,
              113,
              51,
              72,
              86,
              82,
              104,
              113,
              101,
              37,
              50,
              66,
              66,
              87,
              111,
              56,
              55,
              72,
              85,
              115,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              97,
              116,
              99,
              104,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 105,
          "responseSize": 634
        },
        "id": "3b8f1e32-56c6-41b5-9981-7d99b09cd709",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4128017d-befb-4cde-af63-3a403c94eb33",
          "length": 35,
          "cycles": 3,
          "position": 5,
          "iteration": 1,
          "httpRequestId": "2ad04e4f-593f-4f84-a90b-a25a0e7b479e"
        },
        "item": {
          "id": "04547aaf-db3d-4c72-b993-c35e86a03c49",
          "name": "DELETE Request",
          "request": {
            "description": {
              "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "delete"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f85abfd-9d73-45cc-8433-9af7749fc762",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "e524f0fe-c2b8-4732-a4fe-432df5177234"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "delete"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6d3d208f-b033-4c76-b725-a1593048bec1",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AtQ1-72v2ar_Fb2MB0dMYi8kGSZ2yZlLq.4wZ6PcB0x12ywk7gYVO6SvciXwPUwZKl1EynEREZNbU",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "cbfd3027-b31e-4486-925e-955bf51cb325",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "629"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"275-TIpaHemgS7yiQfFgnkatKO3XHeU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AiehueJSZWU6EoKMTM-JdJuLbaF2_JQo6.Mme0BxHgI5UTLRLSFbTpB9Rf3thi9VGC1yAyxjYEoko; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              51,
              45,
              55,
              97,
              49,
              97,
              50,
              51,
              54,
              48,
              50,
              98,
              57,
              49,
              50,
              52,
              51,
              100,
              49,
              97,
              98,
              98,
              51,
              56,
              50,
              50,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              54,
              100,
              51,
              100,
              50,
              48,
              56,
              102,
              45,
              98,
              48,
              51,
              51,
              45,
              52,
              99,
              55,
              54,
              45,
              98,
              55,
              50,
              53,
              45,
              97,
              49,
              53,
              57,
              51,
              48,
              52,
              56,
              98,
              101,
              99,
              49,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              116,
              81,
              49,
              45,
              55,
              50,
              118,
              50,
              97,
              114,
              95,
              70,
              98,
              50,
              77,
              66,
              48,
              100,
              77,
              89,
              105,
              56,
              107,
              71,
              83,
              90,
              50,
              121,
              90,
              108,
              76,
              113,
              46,
              52,
              119,
              90,
              54,
              80,
              99,
              66,
              48,
              120,
              49,
              50,
              121,
              119,
              107,
              55,
              103,
              89,
              86,
              79,
              54,
              83,
              118,
              99,
              105,
              88,
              119,
              80,
              85,
              119,
              90,
              75,
              108,
              49,
              69,
              121,
              110,
              69,
              82,
              69,
              90,
              78,
              98,
              85,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              100,
              101,
              108,
              101,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 114,
          "responseSize": 629
        },
        "id": "04547aaf-db3d-4c72-b993-c35e86a03c49",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "845639e8-41fc-493f-9474-cefa7301f60a",
          "length": 35,
          "cycles": 3,
          "position": 6,
          "iteration": 1,
          "httpRequestId": "2358368f-3bec-42b8-83d5-885e9a2ad762"
        },
        "item": {
          "id": "29eb65cd-9865-48f1-bc09-e523e0c04014",
          "name": "Request Headers",
          "request": {
            "description": {
              "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "my-sample-header",
                "value": "Lorem ipsum dolor sit amet"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ebe7ef85-c80e-460e-aa50-c3b03457180d",
              "name": "my-sample-header",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "my-sample-header",
                    "value": "Lorem ipsum dolor sit amet"
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "342"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\n    \"headers\": {\n        \"host\": \"echo.getpostman.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, sdch\",\n        \"accept-language\": \"en-US,en;q=0.8\",\n        \"cache-control\": \"no-cache\",\n        \"my-sample-header\": \"Lorem ipsum dolor sit amet\",\n        \"postman-token\": \"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\n        \"x-forwarded-port\": \"443\",\n        \"x-forwarded-proto\": \"https\"\n    }\n}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0068cecc-ad18-4015-bdae-28ac4a194f1c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// we check to ensire that the headers we sent as request is returned as part of",
                  "// the response body. if you change the request headers, make sure to add them",
                  "// to the tests here",
                  "pm.test(\"sample request header should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                  "});"
                ],
                "_lastExecutionId": "00795d41-8dc1-46b6-aeae-b96f5dd11d31"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "my-sample-header",
              "value": "Lorem ipsum dolor sit amet"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4a6351d6-19d1-4567-a5fd-471ff84806e3",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AiehueJSZWU6EoKMTM-JdJuLbaF2_JQo6.Mme0BxHgI5UTLRLSFbTpB9Rf3thi9VGC1yAyxjYEoko",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c0967705-e520-4c41-b807-1fe5f6dfe29b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "476"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1dc-NNhzheGbqMQnXpUem46EB5B/2to\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AlGAHAIKf3EduKarT89P7vqsQROKm3xHJ.HbZiSI1yXrC6abVLB2OIsFBxlZ6%2Fj6xqVgpRJICIC4Y; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              51,
              45,
              49,
              99,
              99,
              102,
              48,
              101,
              48,
              52,
              52,
              49,
              50,
              100,
              101,
              98,
              97,
              49,
              51,
              50,
              49,
              102,
              49,
              102,
              55,
              99,
              34,
              44,
              34,
              109,
              121,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              52,
              97,
              54,
              51,
              53,
              49,
              100,
              54,
              45,
              49,
              57,
              100,
              49,
              45,
              52,
              53,
              54,
              55,
              45,
              97,
              53,
              102,
              100,
              45,
              52,
              55,
              49,
              102,
              102,
              56,
              52,
              56,
              48,
              54,
              101,
              51,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              105,
              101,
              104,
              117,
              101,
              74,
              83,
              90,
              87,
              85,
              54,
              69,
              111,
              75,
              77,
              84,
              77,
              45,
              74,
              100,
              74,
              117,
              76,
              98,
              97,
              70,
              50,
              95,
              74,
              81,
              111,
              54,
              46,
              77,
              109,
              101,
              48,
              66,
              120,
              72,
              103,
              73,
              53,
              85,
              84,
              76,
              82,
              76,
              83,
              70,
              98,
              84,
              112,
              66,
              57,
              82,
              102,
              51,
              116,
              104,
              105,
              57,
              86,
              71,
              67,
              49,
              121,
              65,
              121,
              120,
              106,
              89,
              69,
              111,
              107,
              111,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 124,
          "responseSize": 476
        },
        "id": "29eb65cd-9865-48f1-bc09-e523e0c04014",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "sample request header should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "39cbf3db-9825-448b-8eae-9945647a2dcd",
          "length": 35,
          "cycles": 3,
          "position": 7,
          "iteration": 1,
          "httpRequestId": "a75107b6-ad8e-4f0d-a7bd-321e1bedfcb5"
        },
        "item": {
          "id": "81325070-3889-4142-80bb-150f3b3d6984",
          "name": "Response Headers",
          "request": {
            "description": {
              "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "response-headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html"
              },
              "id": "432437d0-2906-4a43-9b64-c4790d5acc08",
              "name": "Response headers",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "response-headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "Content-Type",
                      "value": "text/html"
                    },
                    {
                      "key": "test",
                      "value": "response_headers"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "71"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "test",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "test",
                  "value": "response_headers"
                }
              ],
              "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "946fadce-0d6a-43ea-9978-e729f9c462aa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has the headers sent as part of request query\", function () {",
                  "    pm.response.to.have.header('foo1', 'bar1')",
                  "        .and.have.header('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test(\"sample request param should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                  "        .and.have.jsonBody('foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "ab79e159-81de-4dde-a345-9d7be8cfb6a2"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "response-headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "365a9bd8-7305-4949-93c6-958931be5ec9",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AlGAHAIKf3EduKarT89P7vqsQROKm3xHJ.HbZiSI1yXrC6abVLB2OIsFBxlZ6%2Fj6xqVgpRJICIC4Y",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "a6377c2f-d379-4b55-b445-f39af317b83e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "foo1",
              "value": "bar1"
            },
            {
              "key": "foo2",
              "value": "bar2"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-PgOLWVqd2mMvcpNzTF0Cfy4hftg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A1uipfrBqJMvIdrCOrJIpPmO5adu1r0JD.lLCpWLipPBUXMhvNU%2FIVQSB4hIOLgACryaWzv2EyE28; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 104,
          "responseSize": 29
        },
        "id": "81325070-3889-4142-80bb-150f3b3d6984",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has the headers sent as part of request query",
            "skipped": false
          },
          {
            "assertion": "sample request param should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c5497c32-dff0-4a25-9308-14b12633d584",
          "length": 35,
          "cycles": 3,
          "position": 8,
          "iteration": 1,
          "httpRequestId": "bdcdb8db-987b-4be1-8b58-eb305b06c3bf"
        },
        "item": {
          "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
          "name": "Basic Auth",
          "request": {
            "description": {
              "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "basic-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                },
                {
                  "type": "string",
                  "value": "password",
                  "key": "password"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "showPassword"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "c3b6d719-8b10-45a2-a5ca-a0f6f2a7935c",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "basic-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "showPassword"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "42"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"authenticated\":true}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37d88aec-07c2-4ca1-be59-75ed726c4b9a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying 'authenticated'\", function () {",
                  "    pm.response.to.have.jsonBody('authenticated', true);",
                  "});"
                ],
                "_lastExecutionId": "b19df1c7-feb0-4f74-8b22-5c269184ca12"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "basic-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic cG9zdG1hbjpwYXNzd29yZA==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2bd965bc-ee4e-44dc-a161-5bbfc460c6bd",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A1uipfrBqJMvIdrCOrJIpPmO5adu1r0JD.lLCpWLipPBUXMhvNU%2FIVQSB4hIOLgACryaWzv2EyE28",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              },
              {
                "type": "string",
                "value": "password",
                "key": "password"
              },
              {
                "type": "any",
                "key": "saveHelperData"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "showPassword"
              }
            ]
          }
        },
        "response": {
          "id": "a9a1fc88-dfb5-45ba-a59c-3826f4122509",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "22"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"16-sJz8uwjdDv0wvm7//BYdNw8vMbU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3APcaj_Od29IYdnHLj5qKRmgtoD8DRywOo.LMcMIYN4x6HgIA7kUjUx3CBC8%2BwUQ4Q86pj1Exf39kw; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 110,
          "responseSize": 22
        },
        "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json saying 'authenticated'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "abb38d1e-eb86-4755-bf8e-4030f0ddd642",
          "length": 35,
          "cycles": 3,
          "position": 9,
          "iteration": 1,
          "httpRequestId": "bf8bcb3c-559b-42ff-974b-33ef6e538f52"
        },
        "item": {
          "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
          "name": "DigestAuth Success",
          "request": {
            "description": {
              "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "digest-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "digest",
              "digest": [
                {
                  "type": "string",
                  "value": "MD5",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                },
                {
                  "type": "string",
                  "value": "{{echo_digest_realm}}",
                  "key": "realm"
                },
                {
                  "type": "string",
                  "value": "password",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "{{echo_digest_nonce}}",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonceCount"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "clientNonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "opaque"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "qop"
                },
                {
                  "type": "any",
                  "key": "disableRetryRequest"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "bc874d05-7a57-49c4-90d8-80cfe34506e4",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "digest-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "digest",
                  "digest": [
                    {
                      "type": "string",
                      "value": "MD5",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_realm}}",
                      "key": "realm"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_nonce}}",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonceCount"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "clientNonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "opaque"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "qop"
                    },
                    {
                      "type": "any",
                      "key": "disableRetryRequest"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "42"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"authenticated\":true}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3035607-07e4-4a5d-a5e3-592c48b7460f",
                "type": "text/javascript",
                "exec": [
                  "tests[\"response code is 200\"] = responseCode.code === 200;",
                  "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                ],
                "_lastExecutionId": "745e5c52-f581-4a85-b30f-3199c3065730"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "digest-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ihsqyoHzQ05wz2B7865j3Vr3AGGxlaDi\", uri=\"/digest-auth\", algorithm=\"MD5\", response=\"08dc8ab887fd759cd4b1377cbdfb1d77\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6042bac7-52b9-49a8-ba72-f1ba43148a43",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3APcaj_Od29IYdnHLj5qKRmgtoD8DRywOo.LMcMIYN4x6HgIA7kUjUx3CBC8%2BwUQ4Q86pj1Exf39kw",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "digest",
            "digest": [
              {
                "type": "string",
                "value": "MD5",
                "key": "algorithm"
              },
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              },
              {
                "type": "string",
                "value": "Users",
                "key": "realm"
              },
              {
                "type": "string",
                "value": "password",
                "key": "password"
              },
              {
                "type": "string",
                "value": "ihsqyoHzQ05wz2B7865j3Vr3AGGxlaDi",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonceCount"
              },
              {
                "type": "string",
                "value": "",
                "key": "clientNonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "opaque"
              },
              {
                "type": "string",
                "value": "",
                "key": "qop"
              },
              {
                "type": "any",
                "key": "disableRetryRequest"
              }
            ]
          }
        },
        "response": {
          "id": "6cd6b45f-0a0b-4424-a50b-62b1a5e14b63",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:15 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "22"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"16-sJz8uwjdDv0wvm7//BYdNw8vMbU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Ae1xbxcafGOgEUUCuEvkkGsP7Aix9LmyR.EBP88j77c0%2BT497me3SsaalfU6PaOZH1yGsfjm4NfL4; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 115,
          "responseSize": 22
        },
        "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
        "assertions": [
          {
            "assertion": "response code is 200",
            "skipped": false
          },
          {
            "assertion": "body contains authenticated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2fd28328-8c56-4ffd-9839-bb5c8aced7fe",
          "length": 35,
          "cycles": 3,
          "position": 10,
          "iteration": 1,
          "httpRequestId": "b876acb6-248f-4ea9-b77a-49ccafb2f060"
        },
        "item": {
          "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
          "name": "Hawk Auth",
          "request": {
            "description": {
              "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "auth",
                "hawk"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "hawk",
              "hawk": [
                {
                  "type": "string",
                  "value": "dh37fgj492je",
                  "key": "authId"
                },
                {
                  "type": "string",
                  "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                  "key": "authKey"
                },
                {
                  "type": "string",
                  "value": "sha256",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "user"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "string",
                  "value": "RZKGNz",
                  "key": "nonce"
                },
                {
                  "type": "any",
                  "key": "extraData"
                },
                {
                  "type": "any",
                  "key": "appId"
                },
                {
                  "type": "any",
                  "key": "delegation"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "26a84d63-c2e7-420a-8582-76d40716f355",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Server-Authorization",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server-Authorization",
                  "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "auth",
              "hawk"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Hawk id=\"dh37fgj492je\", ts=\"1617795316\", nonce=\"RZKGNz\", mac=\"prN+SHFnPWlaCATAGZ5B7XHqKOAXRM6JuouTMFkpqOE=\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ee8f8595-829a-4f5f-905d-12e88b51c7db",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Ae1xbxcafGOgEUUCuEvkkGsP7Aix9LmyR.EBP88j77c0%2BT497me3SsaalfU6PaOZH1yGsfjm4NfL4",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "hawk",
            "hawk": [
              {
                "type": "string",
                "value": "dh37fgj492je",
                "key": "authId"
              },
              {
                "type": "string",
                "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                "key": "authKey"
              },
              {
                "type": "string",
                "value": "sha256",
                "key": "algorithm"
              },
              {
                "type": "string",
                "value": "",
                "key": "user"
              },
              {
                "type": "any",
                "key": "saveHelperData"
              },
              {
                "type": "string",
                "value": "RZKGNz",
                "key": "nonce"
              },
              {
                "type": "any",
                "key": "extraData"
              },
              {
                "type": "any",
                "key": "appId"
              },
              {
                "type": "any",
                "key": "delegation"
              },
              {
                "type": "string",
                "value": "1617795316",
                "key": "timestamp",
                "system": true
              }
            ]
          }
        },
        "response": {
          "id": "f59b0a9d-7f1f-4900-8268-124ae7b827ae",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:16 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "44"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"2c-UZ5QLCWp1r9bxkKdVTupq1/XxUI\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Awy3bUj_VmY1vUNOMJvKOosdCSSf6x9Ma.n86m4ljUkbTJFSnB7nWTYo2MTqqM%2BicYMwq7TR3iLh4; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              72,
              97,
              119,
              107,
              32,
              65,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 117,
          "responseSize": 44
        },
        "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json saying passed 'status'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response body has json saying passed 'status'",
              "message": "expected { Object (message) } in response to contain property 'status'",
              "stack": "AssertionError: expected { Object (message) } in response to contain property 'status'\n   at Object.eval sandbox-script.js:2:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "2ba02e88-24c0-478d-8fb3-a3e7e8f43364",
          "length": 35,
          "cycles": 3,
          "position": 11,
          "iteration": 1,
          "httpRequestId": "f011da5f-3fd1-48b9-ac10-f26130864909"
        },
        "item": {
          "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
          "name": "OAuth1.0 (verify signature)",
          "request": {
            "description": {
              "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "oauth1"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth1",
              "oauth1": [
                {
                  "type": "string",
                  "value": "RKCGzna7bv9YD57c",
                  "key": "consumerKey"
                },
                {
                  "type": "string",
                  "value": "D+EdQ-gs$-%@2Nu7",
                  "key": "consumerSecret"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "token"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "tokenSecret"
                },
                {
                  "type": "string",
                  "value": "HMAC-SHA1",
                  "key": "signatureMethod"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "version"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "realm"
                },
                {
                  "type": "boolean",
                  "value": true,
                  "key": "addParamsToHeader"
                },
                {
                  "type": "any",
                  "key": "autoAddParam"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "addEmptyParamsToSign"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "48fbdb6f-cbaa-46d7-8c32-aae8f916f8c8",
              "name": "200",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "95"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.8.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "c12747fd-818e-4858-9ffc-7e2e50f2fe19",
              "name": "401",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                  }
                ],
                "method": "GET"
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "536"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.8.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50c80c4b-7093-40f7-ad3c-35d1d713720b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "885be686-e857-4781-b6d5-a8bdb7facc60"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "oauth1"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1617795316\",oauth_nonce=\"voa7COLCsFX\",oauth_signature=\"zNW9wMkyhFqg4UPv9CJpx4iaT80%3D\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1085b652-a262-44d3-8ac0-3dd860aad6de",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Awy3bUj_VmY1vUNOMJvKOosdCSSf6x9Ma.n86m4ljUkbTJFSnB7nWTYo2MTqqM%2BicYMwq7TR3iLh4",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth1",
            "oauth1": [
              {
                "type": "string",
                "value": "RKCGzna7bv9YD57c",
                "key": "consumerKey"
              },
              {
                "type": "string",
                "value": "D+EdQ-gs$-%@2Nu7",
                "key": "consumerSecret"
              },
              {
                "type": "string",
                "value": "",
                "key": "token"
              },
              {
                "type": "string",
                "value": "",
                "key": "tokenSecret"
              },
              {
                "type": "string",
                "value": "HMAC-SHA1",
                "key": "signatureMethod"
              },
              {
                "type": "string",
                "value": "",
                "key": "timestamp"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "version"
              },
              {
                "type": "string",
                "value": "",
                "key": "realm"
              },
              {
                "type": "boolean",
                "value": true,
                "key": "addParamsToHeader"
              },
              {
                "type": "any",
                "key": "autoAddParam"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "addEmptyParamsToSign"
              }
            ]
          }
        },
        "response": {
          "id": "5859e936-fce0-43e1-9c28-0035d3ea2b60",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:16 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-dXPS7nEYaa6r6PVjN9RjHjrHaLU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AE3opYiLQ0HmekLMZHKr-NM-U4U1PHwyI.e4qhmvrDh3%2FIvNRfhhJ4ecYaZtR8byxQK3NYTIc3UqQ; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              112,
              97,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              65,
              117,
              116,
              104,
              45,
              49,
              46,
              48,
              97,
              32,
              115,
              105,
              103,
              110,
              97,
              116,
              117,
              114,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              119,
              97,
              115,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 109,
          "responseSize": 78
        },
        "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json saying passed 'status'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4a01586a-8c6d-4f45-ba0b-0a0a8054115b",
          "length": 35,
          "cycles": 3,
          "position": 12,
          "iteration": 1,
          "httpRequestId": "30c510d6-bf66-4dd1-8f4a-b69bdbbb34b6"
        },
        "item": {
          "id": "ed229219-7d93-495a-8fd3-72c6e7e4d2e2",
          "name": "Set Cookies",
          "request": {
            "description": {
              "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies",
                "set"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "8af401c7-7d97-4341-8963-2fa780ae4923",
              "name": "Cookies",
              "originalRequest": {
                "description": {
                  "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "cookies",
                    "set"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "foo1",
                      "value": "bar1"
                    },
                    {
                      "key": "foo2",
                      "value": "bar2"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "51"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:15:28 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo1\":\"bar\",\"foo2\":\"bar\"}}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f729199-e60a-4a84-8f09-340383e2afc7",
                "type": "text/javascript",
                "exec": [
                  "pm.test('response should be 200 or 302', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                  "});",
                  "",
                  "// response code could be either a 200 or a redirection based on the settings of ",
                  "// the http client. hence we need to handle both cases",
                  "pm.test('response body should be valid', function () {",
                  "    if (pm.response.code === 200) {",
                  "        pm.response.to.have.jsonBody('cookies.foo1', 'bar1')",
                  "            .and.have.jsonBody('cookies.foo2', 'bar2');",
                  "    }",
                  "    else {",
                  "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "5cca95b5-a749-48bd-87ac-3b23c2841e64"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies",
              "set"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "be128338-188c-4174-932a-08d1bfebfa95",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AasTu1qUr5FxyRoo7oTvT20nbfbRjwyyc.fuMPIySrbGcgmFrEABmPmChqxkzbmTSpTnNX123Xhpc; foo1=bar1; foo2=bar2",
              "system": true
            },
            {
              "key": "Referer",
              "value": "https://postman-echo.com/cookies/set?foo1=bar1&foo2=bar2",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "a5db905c-af11-4311-8710-6c0c0601f7a2",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:16 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "41"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"29-JRHqGq7F5tGozH71XMqVk/pLueo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AofcpqGcEnJzW6V9oW-5iOyV1wL-0hUb1.2zWb2%2BvKlJCNtcmxehGmy7hQpkQXSE7AxiUA17KH5xY; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 227,
          "responseSize": 41
        },
        "id": "ed229219-7d93-495a-8fd3-72c6e7e4d2e2",
        "assertions": [
          {
            "assertion": "response should be 200 or 302",
            "skipped": false
          },
          {
            "assertion": "the \"foo1\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "the \"foo2\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "response body should be valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2d95716b-baac-4f90-a1e8-abe328c0cf2d",
          "length": 35,
          "cycles": 3,
          "position": 13,
          "iteration": 1,
          "httpRequestId": "608edcc0-7334-4dee-b245-38365683228c"
        },
        "item": {
          "id": "65831a5e-9e45-4205-99ca-549d74afd7ff",
          "name": "Get Cookies",
          "request": {
            "description": {
              "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "b604a750-d41a-4e9b-a2eb-c29a7c77f9dc",
              "name": "Cookies",
              "originalRequest": {
                "description": {
                  "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "cookies"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "46"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:16:29 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a7103205-62a8-463d-8459-4c6a089321cc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test('response body should be valid', function () {",
                  "    pm.response.to.have.jsonBody('cookies.foo1', 'bar1');",
                  "    pm.response.to.have.jsonBody('cookies.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "283749bb-bed4-4718-979a-2d7009078278"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "83dfc01a-ffe9-4b86-a8f1-8bc0ff228786",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AofcpqGcEnJzW6V9oW-5iOyV1wL-0hUb1.2zWb2%2BvKlJCNtcmxehGmy7hQpkQXSE7AxiUA17KH5xY; foo1=bar1; foo2=bar2",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "2b7040f2-b382-4697-9c5b-54c99540c1c1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:16 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "41"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"29-JRHqGq7F5tGozH71XMqVk/pLueo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A7C09LlnjNPfIa5JM72cvz5zPDAo43mv-.wpkU2MTgMJ2NsWB50DNBv0ALYlsjU%2BFndDEcbXsfAdc; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 109,
          "responseSize": 41
        },
        "id": "65831a5e-9e45-4205-99ca-549d74afd7ff",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "the \"foo1\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "the \"foo2\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "response body should be valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ae7238c4-22b7-4ca5-bc60-4ec9f1092fa9",
          "length": 35,
          "cycles": 3,
          "position": 14,
          "iteration": 1,
          "httpRequestId": "2d441534-8cec-4a4a-acf8-cf20e643b846"
        },
        "item": {
          "id": "3c2c59a6-b190-4e5f-becc-c653eff28667",
          "name": "Delete Cookies",
          "request": {
            "description": {
              "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies",
                "delete"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": null
                },
                {
                  "key": "foo2",
                  "value": null
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "f253d260-4e1e-434a-82e4-f621dcea09b8",
              "name": "Cookies Response",
              "originalRequest": {
                "description": {
                  "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "cookies",
                    "delete"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "foo1",
                      "value": null
                    },
                    {
                      "key": "foo2",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "46"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:16:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6b980339-4ce1-4c43-8271-4e089dbe365d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('response should be 200 or 302', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie should not be present', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie should not be present', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo2');",
                  "});",
                  "",
                  "// response code could be either a 200 or a redirection based on the settings of ",
                  "// the http client. hence we need to handle both cases",
                  "pm.test('response body should be valid', function () {",
                  "    if (pm.response.code === 200) {",
                  "        pm.response.to.not.have.jsonBody('cookies.foo1');",
                  "        pm.response.to.not.have.jsonBody('cookies.foo2');",
                  "    }",
                  "    else {",
                  "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "b477297f-eb65-4c9a-9e7c-5b5840f4977a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies",
              "delete"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": null
              },
              {
                "key": "foo2",
                "value": null
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e2645481-42b0-4ab5-bbbc-4418f9401700",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A7C09LlnjNPfIa5JM72cvz5zPDAo43mv-.wpkU2MTgMJ2NsWB50DNBv0ALYlsjU%2BFndDEcbXsfAdc",
              "system": true
            },
            {
              "key": "Referer",
              "value": "https://postman-echo.com/cookies/delete?foo1&foo2",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e3675479-5c1f-4c8c-9b95-f29958a425fc",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:17 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"e-HwHgMXOuquwNiBd0Mx9LHc/Rmfk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AOqr2-wACO4TjchKw-tJuUnb_fUNnQBu8.I3fp5qI8DNWlPhl2UuWlWcluS3wuGBtNLrrdG9HK08k; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 446,
          "responseSize": 14
        },
        "id": "3c2c59a6-b190-4e5f-becc-c653eff28667",
        "assertions": [
          {
            "assertion": "response should be 200 or 302",
            "skipped": false
          },
          {
            "assertion": "the \"foo1\" cookie should not be present",
            "skipped": false
          },
          {
            "assertion": "the \"foo2\" cookie should not be present",
            "skipped": false
          },
          {
            "assertion": "response body should be valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e91fbf34-3459-4dc5-9ec1-4274051ee2e2",
          "length": 35,
          "cycles": 3,
          "position": 15,
          "iteration": 1,
          "httpRequestId": "e1dc414e-a9cc-470c-8fe4-93cb45abf935"
        },
        "item": {
          "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
          "name": "Response Status Code",
          "request": {
            "description": {
              "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "status",
                "200"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
              "name": "200",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"e-1056260003\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"status\":200}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": "2016-04-15T11:14:58.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": "2016-04-15T11:14:58.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                },
                {
                  "name": "_ga",
                  "expires": "2018-03-31T11:16:21.000Z",
                  "domain": ".echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "GA1.3.1703443399.1459422978"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('status');",
                  "});",
                  "",
                  "// additional sanity tests",
                  "pm.test(\"status in response body must match the one in request\", function () {",
                  "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                  "});"
                ],
                "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "status",
              "200"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5de58827-9313-4014-933a-600e3de2d538",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AOqr2-wACO4TjchKw-tJuUnb_fUNnQBu8.I3fp5qI8DNWlPhl2UuWlWcluS3wuGBtNLrrdG9HK08k",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c87d7040-dfe0-4117-895d-30cbc670ed03",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:17 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"e-QlsUp1vTYvBgYHrHCBYe2n/q268\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AqviFZcPs4RFUKSExg_68NPINnWzSPjET.YNPCHQS5Om%2BQe%2FSjMaUA7bdcr7Is2C8zbiPGesaSQEQ; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 114,
          "responseSize": 14
        },
        "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "status in response body must match the one in request",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5c367f21-dce6-4387-a76c-e1c101829847",
          "length": 35,
          "cycles": 3,
          "position": 16,
          "iteration": 1,
          "httpRequestId": "9c057a3b-c6d8-44c8-adc6-c97316c318f3"
        },
        "item": {
          "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
          "name": "Streamed Response",
          "request": {
            "description": {
              "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "stream",
                "5"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has chunked transfer encoding header\", function () {",
                  "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                  "});"
                ],
                "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "stream",
              "5"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5db1efc5-8351-4f0c-abac-9b71e90ede03",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AqviFZcPs4RFUKSExg_68NPINnWzSPjET.YNPCHQS5Om%2BQe%2FSjMaUA7bdcr7Is2C8zbiPGesaSQEQ",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "85d9793f-b47c-4d5e-8e29-63db3e78133f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:17 GMT"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AZ7LnkYZcXFdbK5rwR9P96Fk61oMjvz_k.VzqN%2Fd6Jd1wasBrzYXMRNsiWgEqQ0HpNc8AZ98CFVQA; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              53,
              45,
              49,
              57,
              100,
              51,
              56,
              98,
              54,
              48,
              53,
              97,
              49,
              57,
              51,
              57,
              57,
              48,
              53,
              56,
              53,
              56,
              50,
              49,
              55,
              49,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              100,
              98,
              49,
              101,
              102,
              99,
              53,
              45,
              56,
              51,
              53,
              49,
              45,
              52,
              102,
              48,
              99,
              45,
              97,
              98,
              97,
              99,
              45,
              57,
              98,
              55,
              49,
              101,
              57,
              48,
              101,
              100,
              101,
              48,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              118,
              105,
              70,
              90,
              99,
              80,
              115,
              52,
              82,
              70,
              85,
              75,
              83,
              69,
              120,
              103,
              95,
              54,
              56,
              78,
              80,
              73,
              78,
              110,
              87,
              122,
              83,
              80,
              106,
              69,
              84,
              46,
              89,
              78,
              80,
              67,
              72,
              81,
              83,
              53,
              79,
              109,
              37,
              50,
              66,
              81,
              101,
              37,
              50,
              70,
              83,
              106,
              77,
              97,
              85,
              65,
              55,
              98,
              100,
              99,
              114,
              55,
              73,
              115,
              50,
              67,
              56,
              122,
              98,
              105,
              80,
              71,
              101,
              115,
              97,
              83,
              81,
              69,
              81,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              53,
              45,
              49,
              57,
              100,
              51,
              56,
              98,
              54,
              48,
              53,
              97,
              49,
              57,
              51,
              57,
              57,
              48,
              53,
              56,
              53,
              56,
              50,
              49,
              55,
              49,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              100,
              98,
              49,
              101,
              102,
              99,
              53,
              45,
              56,
              51,
              53,
              49,
              45,
              52,
              102,
              48,
              99,
              45,
              97,
              98,
              97,
              99,
              45,
              57,
              98,
              55,
              49,
              101,
              57,
              48,
              101,
              100,
              101,
              48,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              118,
              105,
              70,
              90,
              99,
              80,
              115,
              52,
              82,
              70,
              85,
              75,
              83,
              69,
              120,
              103,
              95,
              54,
              56,
              78,
              80,
              73,
              78,
              110,
              87,
              122,
              83,
              80,
              106,
              69,
              84,
              46,
              89,
              78,
              80,
              67,
              72,
              81,
              83,
              53,
              79,
              109,
              37,
              50,
              66,
              81,
              101,
              37,
              50,
              70,
              83,
              106,
              77,
              97,
              85,
              65,
              55,
              98,
              100,
              99,
              114,
              55,
              73,
              115,
              50,
              67,
              56,
              122,
              98,
              105,
              80,
              71,
              101,
              115,
              97,
              83,
              81,
              69,
              81,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              53,
              45,
              49,
              57,
              100,
              51,
              56,
              98,
              54,
              48,
              53,
              97,
              49,
              57,
              51,
              57,
              57,
              48,
              53,
              56,
              53,
              56,
              50,
              49,
              55,
              49,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              100,
              98,
              49,
              101,
              102,
              99,
              53,
              45,
              56,
              51,
              53,
              49,
              45,
              52,
              102,
              48,
              99,
              45,
              97,
              98,
              97,
              99,
              45,
              57,
              98,
              55,
              49,
              101,
              57,
              48,
              101,
              100,
              101,
              48,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              118,
              105,
              70,
              90,
              99,
              80,
              115,
              52,
              82,
              70,
              85,
              75,
              83,
              69,
              120,
              103,
              95,
              54,
              56,
              78,
              80,
              73,
              78,
              110,
              87,
              122,
              83,
              80,
              106,
              69,
              84,
              46,
              89,
              78,
              80,
              67,
              72,
              81,
              83,
              53,
              79,
              109,
              37,
              50,
              66,
              81,
              101,
              37,
              50,
              70,
              83,
              106,
              77,
              97,
              85,
              65,
              55,
              98,
              100,
              99,
              114,
              55,
              73,
              115,
              50,
              67,
              56,
              122,
              98,
              105,
              80,
              71,
              101,
              115,
              97,
              83,
              81,
              69,
              81,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              53,
              45,
              49,
              57,
              100,
              51,
              56,
              98,
              54,
              48,
              53,
              97,
              49,
              57,
              51,
              57,
              57,
              48,
              53,
              56,
              53,
              56,
              50,
              49,
              55,
              49,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              100,
              98,
              49,
              101,
              102,
              99,
              53,
              45,
              56,
              51,
              53,
              49,
              45,
              52,
              102,
              48,
              99,
              45,
              97,
              98,
              97,
              99,
              45,
              57,
              98,
              55,
              49,
              101,
              57,
              48,
              101,
              100,
              101,
              48,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              118,
              105,
              70,
              90,
              99,
              80,
              115,
              52,
              82,
              70,
              85,
              75,
              83,
              69,
              120,
              103,
              95,
              54,
              56,
              78,
              80,
              73,
              78,
              110,
              87,
              122,
              83,
              80,
              106,
              69,
              84,
              46,
              89,
              78,
              80,
              67,
              72,
              81,
              83,
              53,
              79,
              109,
              37,
              50,
              66,
              81,
              101,
              37,
              50,
              70,
              83,
              106,
              77,
              97,
              85,
              65,
              55,
              98,
              100,
              99,
              114,
              55,
              73,
              115,
              50,
              67,
              56,
              122,
              98,
              105,
              80,
              71,
              101,
              115,
              97,
              83,
              81,
              69,
              81,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              53,
              45,
              49,
              57,
              100,
              51,
              56,
              98,
              54,
              48,
              53,
              97,
              49,
              57,
              51,
              57,
              57,
              48,
              53,
              56,
              53,
              56,
              50,
              49,
              55,
              49,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              100,
              98,
              49,
              101,
              102,
              99,
              53,
              45,
              56,
              51,
              53,
              49,
              45,
              52,
              102,
              48,
              99,
              45,
              97,
              98,
              97,
              99,
              45,
              57,
              98,
              55,
              49,
              101,
              57,
              48,
              101,
              100,
              101,
              48,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              118,
              105,
              70,
              90,
              99,
              80,
              115,
              52,
              82,
              70,
              85,
              75,
              83,
              69,
              120,
              103,
              95,
              54,
              56,
              78,
              80,
              73,
              78,
              110,
              87,
              122,
              83,
              80,
              106,
              69,
              84,
              46,
              89,
              78,
              80,
              67,
              72,
              81,
              83,
              53,
              79,
              109,
              37,
              50,
              66,
              81,
              101,
              37,
              50,
              70,
              83,
              106,
              77,
              97,
              85,
              65,
              55,
              98,
              100,
              99,
              114,
              55,
              73,
              115,
              50,
              67,
              56,
              122,
              98,
              105,
              80,
              71,
              101,
              115,
              97,
              83,
              81,
              69,
              81,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 122,
          "responseSize": 2880
        },
        "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has chunked transfer encoding header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "54dee388-19f1-4758-b8ed-34d9e55e393d",
          "length": 35,
          "cycles": 3,
          "position": 17,
          "iteration": 1,
          "httpRequestId": "f5b65e0b-c044-4f89-9655-2655c2beb190"
        },
        "item": {
          "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
          "name": "Delay Response",
          "request": {
            "description": {
              "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "delay",
                "2"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "25994048-5137-4d58-92af-855aff7c6234",
              "name": "success-response",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "3"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "13"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"delay\":\"3\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                "type": "text/javascript",
                "exec": [
                  "var _ = require('lodash');",
                  "",
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('delay');",
                  "});",
                  "",
                  "// additional sanity tests",
                  "pm.test(\"request must have a valid delay\", function () {",
                  "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                  "});",
                  "pm.test(\"response should take more time than the delay specified\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                  "});"
                ],
                "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "delay",
              "2"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d4c0a633-aa5e-4775-adaf-348258f40822",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AZ7LnkYZcXFdbK5rwR9P96Fk61oMjvz_k.VzqN%2Fd6Jd1wasBrzYXMRNsiWgEqQ0HpNc8AZ98CFVQA",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "480dece5-3814-4821-8e80-d3060c7dbb20",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:20 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "13"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"d-vb8pS8uHJYunqF73qADGxcv0Je8\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Au326PVA2l-rE3uPlzkQPshJciKxSlyAo.mEAKqk1upgZecus1oUngp3JucY08tf9%2Bi9U9naNb%2Fo4; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              108,
              97,
              121,
              34,
              58,
              34,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2103,
          "responseSize": 13
        },
        "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "request must have a valid delay",
            "skipped": false
          },
          {
            "assertion": "response should take more time than the delay specified",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "85f47725-86fb-48ee-b95c-2b62941cbb02",
          "length": 35,
          "cycles": 3,
          "position": 18,
          "iteration": 1,
          "httpRequestId": "f7d8cece-f487-4ee6-a8af-ff5a529a9f83"
        },
        "item": {
          "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
          "name": "Get UTF8 Encoded Response",
          "request": {
            "description": {
              "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "encoding",
                "utf8"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has charset in content-type header\", function () {",
                  "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                  "});",
                  "",
                  "pm.test(\"response has chunked transfer encoding header\", function () {",
                  "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                  "});"
                ],
                "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "encoding",
              "utf8"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2e624a3e-aa25-40c7-a574-3c75461c217f",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Au326PVA2l-rE3uPlzkQPshJciKxSlyAo.mEAKqk1upgZecus1oUngp3JucY08tf9%2Bi9U9naNb%2Fo4",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "6f529a4b-6621-40b2-9ee1-63574cccad5b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:20 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"3d0e-bb1Z6nxw+98ped7xrePAFKVeCtU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AJp_c-UPisCOTEO2Nu8s3kW9hPC3DBlsV.PrR%2BvnsKz4YqftWdyOqpf8rpLq7pN51Bqh%2FV6mVmob0; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              10,
              32,
              32,
              32,
              32,
              60,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              104,
              49,
              62,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              68,
              101,
              109,
              111,
              60,
              47,
              104,
              49,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              112,
              62,
              84,
              97,
              107,
              101,
              110,
              32,
              102,
              114,
              111,
              109,
              32,
              60,
              97,
              32,
              104,
              114,
              101,
              102,
              61,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              117,
              99,
              115,
              47,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              115,
              47,
              85,
              84,
              70,
              45,
              56,
              45,
              100,
              101,
              109,
              111,
              46,
              116,
              120,
              116,
              34,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              117,
              99,
              115,
              47,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              115,
              47,
              85,
              84,
              70,
              45,
              56,
              45,
              100,
              101,
              109,
              111,
              46,
              116,
              120,
              116,
              60,
              47,
              97,
              62,
              60,
              47,
              112,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              112,
              114,
              101,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              84,
              70,
              45,
              56,
              32,
              101,
              110,
              99,
              111,
              100,
              101,
              100,
              32,
              115,
              97,
              109,
              112,
              108,
              101,
              32,
              112,
              108,
              97,
              105,
              110,
              45,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              77,
              97,
              114,
              107,
              117,
              115,
              32,
              75,
              117,
              104,
              110,
              32,
              91,
              203,
              136,
              109,
              97,
              202,
              179,
              107,
              202,
              138,
              115,
              32,
              107,
              117,
              203,
              144,
              110,
              93,
              32,
              60,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              62,
              32,
              226,
              128,
              148,
              32,
              50,
              48,
              48,
              50,
              45,
              48,
              55,
              45,
              50,
              53,
              10,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              101,
              32,
              65,
              83,
              67,
              73,
              73,
              32,
              99,
              111,
              109,
              112,
              97,
              116,
              105,
              98,
              108,
              101,
              32,
              85,
              84,
              70,
              45,
              56,
              32,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              108,
              97,
              105,
              110,
              45,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              105,
              115,
              32,
              100,
              101,
              102,
              105,
              110,
              101,
              100,
              32,
              105,
              110,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              73,
              83,
              79,
              32,
              49,
              48,
              54,
              52,
              54,
              45,
              49,
              44,
              32,
              97,
              110,
              100,
              32,
              82,
              70,
              67,
              32,
              50,
              50,
              55,
              57,
              46,
              10,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              115,
              105,
              110,
              103,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              47,
              85,
              84,
              70,
              45,
              56,
              44,
              32,
              121,
              111,
              117,
              32,
              99,
              97,
              110,
              32,
              119,
              114,
              105,
              116,
              101,
              32,
              105,
              110,
              32,
              101,
              109,
              97,
              105,
              108,
              115,
              32,
              97,
              110,
              100,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              99,
              111,
              100,
              101,
              32,
              116,
              104,
              105,
              110,
              103,
              115,
              32,
              115,
              117,
              99,
              104,
              32,
              97,
              115,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              77,
              97,
              116,
              104,
              101,
              109,
              97,
              116,
              105,
              99,
              115,
              32,
              97,
              110,
              100,
              32,
              115,
              99,
              105,
              101,
              110,
              99,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              174,
              32,
              69,
              226,
              139,
              133,
              100,
              97,
              32,
              61,
              32,
              81,
              44,
              32,
              32,
              110,
              32,
              226,
              134,
              146,
              32,
              226,
              136,
              158,
              44,
              32,
              226,
              136,
              145,
              32,
              102,
              40,
              105,
              41,
              32,
              61,
              32,
              226,
              136,
              143,
              32,
              103,
              40,
              105,
              41,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              167,
              226,
              142,
              161,
              226,
              142,
              155,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              142,
              158,
              226,
              142,
              164,
              226,
              142,
              171,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              148,
              130,
              97,
              194,
              178,
              43,
              98,
              194,
              179,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              128,
              120,
              226,
              136,
              136,
              226,
              132,
              157,
              58,
              32,
              226,
              140,
              136,
              120,
              226,
              140,
              137,
              32,
              61,
              32,
              226,
              136,
              146,
              226,
              140,
              138,
              226,
              136,
              146,
              120,
              226,
              140,
              139,
              44,
              32,
              206,
              177,
              32,
              226,
              136,
              167,
              32,
              194,
              172,
              206,
              178,
              32,
              61,
              32,
              194,
              172,
              40,
              194,
              172,
              206,
              177,
              32,
              226,
              136,
              168,
              32,
              206,
              178,
              41,
              44,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              148,
              130,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              142,
              183,
              32,
              99,
              226,
              130,
              136,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              132,
              149,
              32,
              226,
              138,
              134,
              32,
              226,
              132,
              149,
              226,
              130,
              128,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              164,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              154,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              157,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              130,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              168,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              172,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              136,
              158,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              138,
              165,
              32,
              60,
              32,
              97,
              32,
              226,
              137,
              160,
              32,
              98,
              32,
              226,
              137,
              161,
              32,
              99,
              32,
              226,
              137,
              164,
              32,
              100,
              32,
              226,
              137,
              170,
              32,
              226,
              138,
              164,
              32,
              226,
              135,
              146,
              32,
              40,
              226,
              159,
              166,
              65,
              226,
              159,
              167,
              32,
              226,
              135,
              148,
              32,
              226,
              159,
              170,
              66,
              226,
              159,
              171,
              41,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              142,
              178,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              142,
              179,
              97,
              226,
              129,
              177,
              45,
              98,
              226,
              129,
              177,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              50,
              72,
              226,
              130,
              130,
              32,
              43,
              32,
              79,
              226,
              130,
              130,
              32,
              226,
              135,
              140,
              32,
              50,
              72,
              226,
              130,
              130,
              79,
              44,
              32,
              82,
              32,
              61,
              32,
              52,
              46,
              55,
              32,
              107,
              206,
              169,
              44,
              32,
              226,
              140,
              128,
              32,
              50,
              48,
              48,
              32,
              109,
              109,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              169,
              226,
              142,
              163,
              226,
              142,
              157,
              105,
              61,
              49,
              32,
              32,
              32,
              32,
              226,
              142,
              160,
              226,
              142,
              166,
              226,
              142,
              173,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              76,
              105,
              110,
              103,
              117,
              105,
              115,
              116,
              105,
              99,
              115,
              32,
              97,
              110,
              100,
              32,
              100,
              105,
              99,
              116,
              105,
              111,
              110,
              97,
              114,
              105,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              195,
              176,
              105,
              32,
              196,
              177,
              110,
              116,
              201,
              153,
              203,
              136,
              110,
              195,
              166,
              202,
              131,
              201,
              153,
              110,
              201,
              153,
              108,
              32,
              102,
              201,
              153,
              203,
              136,
              110,
              201,
              155,
              116,
              196,
              177,
              107,
              32,
              201,
              153,
              115,
              111,
              202,
              138,
              115,
              105,
              203,
              136,
              101,
              196,
              177,
              202,
              131,
              110,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              89,
              32,
              91,
              203,
              136,
              202,
              143,
              112,
              115,
              105,
              108,
              201,
              148,
              110,
              93,
              44,
              32,
              89,
              101,
              110,
              32,
              91,
              106,
              201,
              155,
              110,
              93,
              44,
              32,
              89,
              111,
              103,
              97,
              32,
              91,
              203,
              136,
              106,
              111,
              203,
              144,
              103,
              201,
              145,
              93,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              65,
              80,
              76,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              40,
              86,
              226,
              141,
              179,
              86,
              41,
              61,
              226,
              141,
              179,
              226,
              141,
              180,
              86,
              41,
              47,
              86,
              226,
              134,
              144,
              44,
              86,
              32,
              32,
              32,
              32,
              226,
              140,
              183,
              226,
              134,
              144,
              226,
              141,
              179,
              226,
              134,
              146,
              226,
              141,
              180,
              226,
              136,
              134,
              226,
              136,
              135,
              226,
              138,
              131,
              226,
              128,
              190,
              226,
              141,
              142,
              226,
              141,
              149,
              226,
              140,
              136,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              78,
              105,
              99,
              101,
              114,
              32,
              116,
              121,
              112,
              111,
              103,
              114,
              97,
              112,
              104,
              121,
              32,
              105,
              110,
              32,
              112,
              108,
              97,
              105,
              110,
              32,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              151,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              152,
              115,
              105,
              110,
              103,
              108,
              101,
              226,
              128,
              153,
              32,
              97,
              110,
              100,
              32,
              226,
              128,
              156,
              100,
              111,
              117,
              98,
              108,
              101,
              226,
              128,
              157,
              32,
              113,
              117,
              111,
              116,
              101,
              115,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              67,
              117,
              114,
              108,
              121,
              32,
              97,
              112,
              111,
              115,
              116,
              114,
              111,
              112,
              104,
              101,
              115,
              58,
              32,
              226,
              128,
              156,
              87,
              101,
              226,
              128,
              153,
              118,
              101,
              32,
              98,
              101,
              101,
              110,
              32,
              104,
              101,
              114,
              101,
              226,
              128,
              157,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              76,
              97,
              116,
              105,
              110,
              45,
              49,
              32,
              97,
              112,
              111,
              115,
              116,
              114,
              111,
              112,
              104,
              101,
              32,
              97,
              110,
              100,
              32,
              97,
              99,
              99,
              101,
              110,
              116,
              115,
              58,
              32,
              39,
              194,
              180,
              96,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              154,
              100,
              101,
              117,
              116,
              115,
              99,
              104,
              101,
              226,
              128,
              152,
              32,
              226,
              128,
              158,
              65,
              110,
              102,
              195,
              188,
              104,
              114,
              117,
              110,
              103,
              115,
              122,
              101,
              105,
              99,
              104,
              101,
              110,
              226,
              128,
              156,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              160,
              44,
              32,
              226,
              128,
              161,
              44,
              32,
              226,
              128,
              176,
              44,
              32,
              226,
              128,
              162,
              44,
              32,
              51,
              226,
              128,
              147,
              52,
              44,
              32,
              226,
              128,
              148,
              44,
              32,
              226,
              136,
              146,
              53,
              47,
              43,
              53,
              44,
              32,
              226,
              132,
              162,
              44,
              32,
              226,
              128,
              166,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              65,
              83,
              67,
              73,
              73,
              32,
              115,
              97,
              102,
              101,
              116,
              121,
              32,
              116,
              101,
              115,
              116,
              58,
              32,
              49,
              108,
              73,
              124,
              44,
              32,
              48,
              79,
              68,
              44,
              32,
              56,
              66,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              116,
              104,
              101,
              32,
              101,
              117,
              114,
              111,
              32,
              115,
              121,
              109,
              98,
              111,
              108,
              58,
              32,
              226,
              148,
              130,
              32,
              49,
              52,
              46,
              57,
              53,
              32,
              226,
              130,
              172,
              32,
              226,
              148,
              130,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              157,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              67,
              111,
              109,
              98,
              105,
              110,
              105,
              110,
              103,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              83,
              84,
              65,
              82,
              71,
              206,
              155,
              204,
              138,
              84,
              69,
              32,
              83,
              71,
              45,
              49,
              44,
              32,
              97,
              32,
              61,
              32,
              118,
              204,
              135,
              32,
              61,
              32,
              114,
              204,
              136,
              44,
              32,
              97,
              226,
              131,
              145,
              32,
              226,
              138,
              165,
              32,
              98,
              226,
              131,
              145,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              114,
              101,
              101,
              107,
              32,
              40,
              105,
              110,
              32,
              80,
              111,
              108,
              121,
              116,
              111,
              110,
              105,
              99,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              101,
              32,
              71,
              114,
              101,
              101,
              107,
              32,
              97,
              110,
              116,
              104,
              101,
              109,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              163,
              225,
              189,
              178,
              32,
              206,
              179,
              206,
              189,
              207,
              137,
              207,
              129,
              225,
              189,
              183,
              206,
              182,
              207,
              137,
              32,
              225,
              188,
              128,
              207,
              128,
              225,
              189,
              184,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              206,
              186,
              225,
              189,
              185,
              207,
              136,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              32,
              207,
              131,
              207,
              128,
              206,
              177,
              206,
              184,
              206,
              185,
              206,
              191,
              225,
              191,
              166,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              207,
              132,
              207,
              129,
              206,
              191,
              206,
              188,
              206,
              181,
              207,
              129,
              225,
              189,
              181,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              131,
              225,
              189,
              178,
              32,
              206,
              179,
              206,
              189,
              207,
              137,
              207,
              129,
              225,
              189,
              183,
              206,
              182,
              207,
              137,
              32,
              225,
              188,
              128,
              207,
              128,
              225,
              189,
              184,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              132,
              207,
              136,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              206,
              191,
              225,
              189,
              186,
              32,
              206,
              188,
              225,
              189,
              178,
              32,
              206,
              178,
              225,
              189,
              183,
              206,
              177,
              32,
              206,
              188,
              206,
              181,
              207,
              132,
              207,
              129,
              225,
              189,
              177,
              206,
              181,
              206,
              185,
              32,
              207,
              132,
              225,
              189,
              180,
              32,
              206,
              179,
              225,
              191,
              134,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              190,
              191,
              206,
              145,
              207,
              128,
              225,
              190,
              191,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              186,
              225,
              189,
              185,
              206,
              186,
              206,
              186,
              206,
              177,
              206,
              187,
              206,
              177,
              32,
              206,
              178,
              206,
              179,
              206,
              177,
              206,
              187,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              191,
              182,
              206,
              189,
              32,
              225,
              191,
              190,
              206,
              149,
              206,
              187,
              206,
              187,
              225,
              189,
              181,
              206,
              189,
              207,
              137,
              206,
              189,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              225,
              188,
              177,
              206,
              181,
              207,
              129,
              225,
              189,
              177,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              131,
              225,
              189,
              176,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              191,
              182,
              207,
              132,
              206,
              177,
              32,
              225,
              188,
              128,
              206,
              189,
              206,
              180,
              207,
              129,
              206,
              181,
              206,
              185,
              207,
              137,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              135,
              206,
              177,
              225,
              191,
              150,
              207,
              129,
              206,
              181,
              44,
              32,
              225,
              189,
              166,
              32,
              207,
              135,
              206,
              177,
              225,
              191,
              150,
              207,
              129,
              206,
              181,
              44,
              32,
              225,
              190,
              191,
              206,
              149,
              206,
              187,
              206,
              181,
              207,
              133,
              206,
              184,
              206,
              181,
              207,
              129,
              206,
              185,
              225,
              189,
              177,
              33,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              115,
              112,
              101,
              101,
              99,
              104,
              32,
              111,
              102,
              32,
              68,
              101,
              109,
              111,
              115,
              116,
              104,
              101,
              110,
              101,
              115,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              52,
              116,
              104,
              32,
              99,
              101,
              110,
              116,
              117,
              114,
              121,
              32,
              66,
              67,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              159,
              225,
              189,
              144,
              207,
              135,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              177,
              225,
              189,
              144,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              128,
              206,
              177,
              207,
              129,
              225,
              189,
              183,
              207,
              131,
              207,
              132,
              206,
              177,
              207,
              132,
              206,
              177,
              225,
              189,
              183,
              32,
              206,
              188,
              206,
              191,
              206,
              185,
              32,
              206,
              179,
              206,
              185,
              206,
              179,
              206,
              189,
              225,
              189,
              189,
              207,
              131,
              206,
              186,
              206,
              181,
              206,
              185,
              206,
              189,
              44,
              32,
              225,
              189,
              166,
              32,
              225,
              188,
              132,
              206,
              189,
              206,
              180,
              207,
              129,
              206,
              181,
              207,
              130,
              32,
              225,
              190,
              191,
              206,
              145,
              206,
              184,
              206,
              183,
              206,
              189,
              206,
              177,
              225,
              191,
              150,
              206,
              191,
              206,
              185,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              177,
              206,
              189,
              32,
              207,
              132,
              225,
              190,
              191,
              32,
              206,
              181,
              225,
              188,
              176,
              207,
              130,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              177,
              206,
              179,
              206,
              188,
              206,
              177,
              207,
              132,
              206,
              177,
              32,
              225,
              188,
              128,
              207,
              128,
              206,
              191,
              206,
              178,
              206,
              187,
              225,
              189,
              179,
              207,
              136,
              207,
              137,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              177,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              184,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              207,
              133,
              207,
              130,
              32,
              206,
              191,
              225,
              189,
              147,
              207,
              130,
              32,
              225,
              188,
              128,
              206,
              186,
              206,
              191,
              225,
              189,
              187,
              207,
              137,
              206,
              135,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              32,
              206,
              188,
              225,
              189,
              178,
              206,
              189,
              32,
              206,
              179,
              225,
              189,
              176,
              207,
              129,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              207,
              133,
              207,
              130,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              166,
              225,
              189,
              183,
              206,
              187,
              206,
              185,
              207,
              128,
              207,
              128,
              206,
              191,
              206,
              189,
              32,
              225,
              189,
              129,
              207,
              129,
              225,
              191,
              182,
              32,
              206,
              179,
              206,
              185,
              206,
              179,
              206,
              189,
              206,
              191,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              191,
              207,
              133,
              207,
              130,
              44,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              180,
              225,
              189,
              178,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              177,
              206,
              179,
              206,
              188,
              206,
              177,
              207,
              132,
              225,
              190,
              191,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              181,
              225,
              188,
              176,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              207,
              132,
              206,
              191,
              32,
              207,
              128,
              207,
              129,
              206,
              191,
              225,
              189,
              181,
              206,
              186,
              206,
              191,
              206,
              189,
              207,
              132,
              206,
              177,
              44,
              32,
              32,
              225,
              189,
              165,
              207,
              131,
              206,
              184,
              225,
              190,
              191,
              32,
              225,
              189,
              133,
              207,
              128,
              207,
              137,
              207,
              130,
              32,
              206,
              188,
              225,
              189,
              180,
              32,
              207,
              128,
              206,
              181,
              206,
              185,
              207,
              131,
              225,
              189,
              185,
              206,
              188,
              206,
              181,
              206,
              184,
              225,
              190,
              191,
              32,
              206,
              177,
              225,
              189,
              144,
              207,
              132,
              206,
              191,
              225,
              189,
              182,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              207,
              129,
              206,
              191,
              206,
              189,
              32,
              206,
              186,
              206,
              177,
              206,
              186,
              225,
              191,
              182,
              207,
              130,
              32,
              207,
              131,
              206,
              186,
              225,
              189,
              179,
              207,
              136,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              180,
              225,
              189,
              179,
              206,
              191,
              206,
              189,
              46,
              32,
              206,
              191,
              225,
              189,
              144,
              206,
              180,
              225,
              189,
              179,
              206,
              189,
              32,
              206,
              191,
              225,
              189,
              150,
              206,
              189,
              32,
              225,
              188,
              132,
              206,
              187,
              206,
              187,
              206,
              191,
              32,
              206,
              188,
              206,
              191,
              206,
              185,
              32,
              206,
              180,
              206,
              191,
              206,
              186,
              206,
              191,
              225,
              191,
              166,
              207,
              131,
              206,
              185,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              191,
              225,
              188,
              177,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              132,
              206,
              191,
              206,
              185,
              206,
              177,
              225,
              191,
              166,
              207,
              132,
              206,
              177,
              32,
              206,
              187,
              225,
              189,
              179,
              206,
              179,
              206,
              191,
              206,
              189,
              207,
              132,
              206,
              181,
              207,
              130,
              32,
              225,
              188,
              162,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              145,
              207,
              128,
              225,
              189,
              185,
              206,
              184,
              206,
              181,
              207,
              131,
              206,
              185,
              206,
              189,
              44,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              225,
              188,
              167,
              207,
              130,
              32,
              206,
              178,
              206,
              191,
              207,
              133,
              206,
              187,
              206,
              181,
              225,
              189,
              187,
              206,
              181,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              191,
              225,
              189,
              144,
              207,
              135,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              206,
              191,
              225,
              189,
              150,
              207,
              131,
              206,
              177,
              206,
              189,
              32,
              207,
              128,
              206,
              177,
              207,
              129,
              206,
              185,
              207,
              131,
              207,
              132,
              225,
              189,
              177,
              206,
              189,
              207,
              132,
              206,
              181,
              207,
              130,
              32,
              225,
              189,
              145,
              206,
              188,
              225,
              191,
              150,
              206,
              189,
              32,
              225,
              188,
              129,
              206,
              188,
              206,
              177,
              207,
              129,
              207,
              132,
              225,
              189,
              177,
              206,
              189,
              206,
              181,
              206,
              185,
              206,
              189,
              46,
              32,
              225,
              188,
              144,
              206,
              179,
              225,
              189,
              188,
              32,
              206,
              180,
              225,
              189,
              179,
              44,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              185,
              32,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              206,
              191,
              207,
              132,
              225,
              190,
              191,
              32,
              225,
              188,
              144,
              206,
              190,
              225,
              191,
              134,
              206,
              189,
              32,
              207,
              132,
              225,
              191,
              135,
              32,
              207,
              128,
              225,
              189,
              185,
              206,
              187,
              206,
              181,
              206,
              185,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              177,
              225,
              189,
              145,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              32,
              225,
              188,
              148,
              207,
              135,
              206,
              181,
              206,
              185,
              206,
              189,
              32,
              225,
              188,
              128,
              207,
              131,
              207,
              134,
              206,
              177,
              206,
              187,
              225,
              191,
              182,
              207,
              130,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              206,
              166,
              225,
              189,
              183,
              206,
              187,
              206,
              185,
              207,
              128,
              207,
              128,
              206,
              191,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              206,
              188,
              225,
              189,
              177,
              206,
              187,
              225,
              190,
              191,
              32,
              225,
              188,
              128,
              206,
              186,
              207,
              129,
              206,
              185,
              206,
              178,
              225,
              191,
              182,
              207,
              130,
              32,
              206,
              191,
              225,
              188,
              182,
              206,
              180,
              206,
              177,
              206,
              135,
              32,
              225,
              188,
              144,
              207,
              128,
              225,
              190,
              191,
              32,
              225,
              188,
              144,
              206,
              188,
              206,
              191,
              225,
              191,
              166,
              32,
              206,
              179,
              225,
              189,
              177,
              207,
              129,
              44,
              32,
              206,
              191,
              225,
              189,
              144,
              32,
              207,
              128,
              225,
              189,
              177,
              206,
              187,
              206,
              177,
              206,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              179,
              225,
              189,
              179,
              206,
              179,
              206,
              191,
              206,
              189,
              206,
              181,
              206,
              189,
              32,
              207,
              132,
              206,
              177,
              225,
              191,
              166,
              207,
              132,
              225,
              190,
              191,
              32,
              225,
              188,
              128,
              206,
              188,
              207,
              134,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              207,
              129,
              206,
              177,
              206,
              135,
              32,
              206,
              189,
              225,
              191,
              166,
              206,
              189,
              32,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              207,
              132,
              206,
              191,
              206,
              185,
              32,
              207,
              128,
              225,
              189,
              179,
              207,
              128,
              206,
              181,
              206,
              185,
              207,
              131,
              206,
              188,
              206,
              177,
              206,
              185,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              206,
              184,
              225,
              190,
              191,
              32,
              225,
              188,
              177,
              206,
              186,
              206,
              177,
              206,
              189,
              225,
              189,
              184,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              207,
              129,
              206,
              191,
              206,
              187,
              206,
              177,
              206,
              178,
              206,
              181,
              225,
              191,
              150,
              206,
              189,
              32,
              225,
              188,
              161,
              206,
              188,
              225,
              191,
              150,
              206,
              189,
              32,
              206,
              181,
              225,
              188,
              182,
              206,
              189,
              206,
              177,
              206,
              185,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              189,
              207,
              132,
              206,
              183,
              206,
              189,
              44,
              32,
              225,
              189,
              133,
              207,
              128,
              207,
              137,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              32,
              207,
              131,
              207,
              133,
              206,
              188,
              206,
              188,
              225,
              189,
              177,
              207,
              135,
              206,
              191,
              207,
              133,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              131,
              225,
              189,
              189,
              207,
              131,
              206,
              191,
              206,
              188,
              206,
              181,
              206,
              189,
              46,
              32,
              225,
              188,
              144,
              225,
              189,
              176,
              206,
              189,
              32,
              206,
              179,
              225,
              189,
              176,
              207,
              129,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              207,
              132,
              206,
              191,
              32,
              206,
              178,
              206,
              181,
              206,
              178,
              206,
              177,
              225,
              189,
              183,
              207,
              137,
              207,
              130,
              32,
              225,
              189,
              145,
              207,
              128,
              225,
              189,
              177,
              207,
              129,
              206,
              190,
              225,
              191,
              131,
              44,
              32,
              207,
              132,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              189,
              183,
              206,
              189,
              206,
              177,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              181,
              207,
              132,
              206,
              177,
              225,
              189,
              183,
              32,
              207,
              132,
              206,
              185,
              207,
              130,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              225,
              189,
              131,
              206,
              189,
              32,
              207,
              132,
              207,
              129,
              225,
              189,
              185,
              207,
              128,
              206,
              191,
              206,
              189,
              32,
              225,
              188,
              144,
              206,
              190,
              225,
              189,
              179,
              207,
              131,
              207,
              132,
              206,
              177,
              206,
              185,
              32,
              207,
              131,
              206,
              186,
              206,
              191,
              207,
              128,
              206,
              181,
              225,
              191,
              150,
              206,
              189,
              206,
              135,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              182,
              206,
              189,
              32,
              206,
              180,
              225,
              189,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              188,
              128,
              207,
              129,
              207,
              135,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              128,
              207,
              129,
              206,
              184,
              225,
              191,
              182,
              207,
              130,
              32,
              225,
              189,
              145,
              207,
              128,
              206,
              191,
              206,
              184,
              225,
              189,
              179,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              32,
              206,
              188,
              225,
              189,
              177,
              207,
              132,
              206,
              177,
              206,
              185,
              206,
              191,
              206,
              189,
              32,
              225,
              188,
              161,
              206,
              179,
              206,
              191,
              225,
              191,
              166,
              206,
              188,
              206,
              177,
              206,
              185,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              181,
              206,
              187,
              206,
              181,
              207,
              133,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              32,
              225,
              189,
              129,
              206,
              189,
              207,
              132,
              206,
              185,
              206,
              189,
              206,
              191,
              225,
              191,
              166,
              206,
              189,
              32,
              207,
              128,
              206,
              191,
              206,
              185,
              206,
              181,
              225,
              191,
              150,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              206,
              189,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              148,
              206,
              183,
              206,
              188,
              206,
              191,
              207,
              131,
              206,
              184,
              225,
              189,
              179,
              206,
              189,
              206,
              191,
              207,
              133,
              207,
              130,
              44,
              32,
              206,
              147,
              225,
              191,
              189,
              32,
              225,
              190,
              191,
              206,
              159,
              206,
              187,
              207,
              133,
              206,
              189,
              206,
              184,
              206,
              185,
              206,
              177,
              206,
              186,
              225,
              189,
              184,
              207,
              130,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              101,
              111,
              114,
              103,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              99,
              111,
              110,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              32,
              105,
              110,
              118,
              105,
              116,
              97,
              116,
              105,
              111,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              146,
              225,
              131,
              151,
              225,
              131,
              174,
              225,
              131,
              157,
              225,
              131,
              149,
              225,
              131,
              151,
              32,
              225,
              131,
              144,
              225,
              131,
              174,
              225,
              131,
              154,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              148,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              151,
              32,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              146,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              144,
              225,
              131,
              151,
              225,
              131,
              148,
              32,
              225,
              131,
              161,
              225,
              131,
              144,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              144,
              225,
              131,
              168,
              225,
              131,
              157,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              157,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              164,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              150,
              225,
              131,
              148,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              172,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              225,
              131,
              147,
              44,
              32,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              170,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              32,
              49,
              48,
              45,
              49,
              50,
              32,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              162,
              225,
              131,
              161,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              165,
              46,
              32,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              32,
              225,
              131,
              146,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              156,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              168,
              225,
              131,
              152,
              46,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              164,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              225,
              131,
              168,
              225,
              131,
              148,
              225,
              131,
              176,
              225,
              131,
              153,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              32,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              144,
              225,
              131,
              147,
              32,
              225,
              131,
              155,
              225,
              131,
              161,
              225,
              131,
              157,
              225,
              131,
              164,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              157,
              225,
              131,
              161,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              148,
              225,
              131,
              165,
              225,
              131,
              161,
              225,
              131,
              158,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              32,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              148,
              225,
              131,
              151,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              146,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              32,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              146,
              225,
              131,
              157,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              170,
              225,
              131,
              144,
              225,
              131,
              144,
              32,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              162,
              225,
              131,
              152,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              156,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              150,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              154,
              225,
              131,
              157,
              225,
              131,
              153,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              150,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              44,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              157,
              225,
              131,
              167,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              157,
              225,
              131,
              158,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              163,
              225,
              131,
              154,
              32,
              225,
              131,
              161,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              225,
              131,
              144,
              44,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              157,
              225,
              131,
              167,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              152,
              225,
              131,
              151,
              32,
              225,
              131,
              158,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              146,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              32,
              225,
              131,
              168,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              164,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              165,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              163,
              225,
              131,
              168,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              144,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              155,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              157,
              225,
              131,
              149,
              225,
              131,
              144,
              225,
              131,
              156,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              155,
              225,
              131,
              158,
              225,
              131,
              152,
              225,
              131,
              163,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              163,
              225,
              131,
              154,
              32,
              225,
              131,
              161,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              82,
              117,
              115,
              115,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              99,
              111,
              110,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              32,
              105,
              110,
              118,
              105,
              116,
              97,
              116,
              105,
              111,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              151,
              208,
              176,
              209,
              128,
              208,
              181,
              208,
              179,
              208,
              184,
              209,
              129,
              209,
              130,
              209,
              128,
              208,
              184,
              209,
              128,
              209,
              131,
              208,
              185,
              209,
              130,
              208,
              181,
              209,
              129,
              209,
              140,
              32,
              209,
              129,
              208,
              181,
              208,
              185,
              209,
              135,
              208,
              176,
              209,
              129,
              32,
              208,
              189,
              208,
              176,
              32,
              208,
              148,
              208,
              181,
              209,
              129,
              209,
              143,
              209,
              130,
              209,
              131,
              209,
              142,
              32,
              208,
              156,
              208,
              181,
              208,
              182,
              208,
              180,
              209,
              131,
              208,
              189,
              208,
              176,
              209,
              128,
              208,
              190,
              208,
              180,
              208,
              189,
              209,
              131,
              209,
              142,
              32,
              208,
              154,
              208,
              190,
              208,
              189,
              209,
              132,
              208,
              181,
              209,
              128,
              208,
              181,
              208,
              189,
              209,
              134,
              208,
              184,
              209,
              142,
              32,
              208,
              191,
              208,
              190,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              208,
              186,
              208,
              190,
              209,
              130,
              208,
              190,
              209,
              128,
              208,
              176,
              209,
              143,
              32,
              209,
              129,
              208,
              190,
              209,
              129,
              209,
              130,
              208,
              190,
              208,
              184,
              209,
              130,
              209,
              129,
              209,
              143,
              32,
              49,
              48,
              45,
              49,
              50,
              32,
              208,
              188,
              208,
              176,
              209,
              128,
              209,
              130,
              208,
              176,
              32,
              49,
              57,
              57,
              55,
              32,
              208,
              179,
              208,
              190,
              208,
              180,
              208,
              176,
              32,
              208,
              178,
              32,
              208,
              156,
              208,
              176,
              208,
              185,
              208,
              189,
              209,
              134,
              208,
              181,
              32,
              208,
              178,
              32,
              208,
              147,
              208,
              181,
              209,
              128,
              208,
              188,
              208,
              176,
              208,
              189,
              208,
              184,
              208,
              184,
              46,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              154,
              208,
              190,
              208,
              189,
              209,
              132,
              208,
              181,
              209,
              128,
              208,
              181,
              208,
              189,
              209,
              134,
              208,
              184,
              209,
              143,
              32,
              209,
              129,
              208,
              190,
              208,
              177,
              208,
              181,
              209,
              128,
              208,
              181,
              209,
              130,
              32,
              209,
              136,
              208,
              184,
              209,
              128,
              208,
              190,
              208,
              186,
              208,
              184,
              208,
              185,
              32,
              208,
              186,
              209,
              128,
              209,
              131,
              208,
              179,
              32,
              209,
              141,
              208,
              186,
              209,
              129,
              208,
              191,
              208,
              181,
              209,
              128,
              209,
              130,
              208,
              190,
              208,
              178,
              32,
              208,
              191,
              208,
              190,
              32,
              32,
              208,
              178,
              208,
              190,
              208,
              191,
              209,
              128,
              208,
              190,
              209,
              129,
              208,
              176,
              208,
              188,
              32,
              208,
              179,
              208,
              187,
              208,
              190,
              208,
              177,
              208,
              176,
              208,
              187,
              209,
              140,
              208,
              189,
              208,
              190,
              208,
              179,
              208,
              190,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              152,
              208,
              189,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              208,
              181,
              209,
              130,
              208,
              176,
              32,
              208,
              184,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              208,
              187,
              208,
              190,
              208,
              186,
              208,
              176,
              208,
              187,
              208,
              184,
              208,
              183,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              184,
              32,
              208,
              184,
              32,
              208,
              184,
              208,
              189,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              190,
              208,
              189,
              208,
              176,
              208,
              187,
              208,
              184,
              208,
              183,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              184,
              44,
              32,
              208,
              178,
              208,
              190,
              208,
              191,
              208,
              187,
              208,
              190,
              209,
              137,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              142,
              32,
              208,
              184,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              191,
              209,
              128,
              208,
              184,
              208,
              188,
              208,
              181,
              208,
              189,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              142,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              208,
              178,
              32,
              209,
              128,
              208,
              176,
              208,
              183,
              208,
              187,
              208,
              184,
              209,
              135,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              208,
              190,
              208,
              191,
              208,
              181,
              209,
              128,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              190,
              208,
              189,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              209,
              129,
              208,
              184,
              209,
              129,
              209,
              130,
              208,
              181,
              208,
              188,
              208,
              176,
              209,
              133,
              32,
              208,
              184,
              32,
              208,
              191,
              209,
              128,
              208,
              190,
              208,
              179,
              209,
              128,
              208,
              176,
              208,
              188,
              208,
              188,
              208,
              189,
              209,
              139,
              209,
              133,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              191,
              209,
              128,
              208,
              184,
              208,
              187,
              208,
              190,
              208,
              182,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              143,
              209,
              133,
              44,
              32,
              209,
              136,
              209,
              128,
              208,
              184,
              209,
              132,
              209,
              130,
              208,
              176,
              209,
              133,
              44,
              32,
              208,
              178,
              208,
              181,
              209,
              128,
              209,
              129,
              209,
              130,
              208,
              186,
              208,
              181,
              32,
              208,
              184,
              32,
              208,
              188,
              208,
              189,
              208,
              190,
              208,
              179,
              208,
              190,
              209,
              143,
              208,
              183,
              209,
              139,
              209,
              135,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              208,
              186,
              208,
              190,
              208,
              188,
              208,
              191,
              209,
              140,
              209,
              142,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              209,
              129,
              208,
              184,
              209,
              129,
              209,
              130,
              208,
              181,
              208,
              188,
              208,
              176,
              209,
              133,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              97,
              105,
              32,
              40,
              85,
              67,
              83,
              32,
              76,
              101,
              118,
              101,
              108,
              32,
              50,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              69,
              120,
              99,
              101,
              114,
              112,
              116,
              32,
              102,
              114,
              111,
              109,
              32,
              97,
              32,
              112,
              111,
              101,
              116,
              114,
              121,
              32,
              111,
              110,
              32,
              84,
              104,
              101,
              32,
              82,
              111,
              109,
              97,
              110,
              99,
              101,
              32,
              111,
              102,
              32,
              84,
              104,
              101,
              32,
              84,
              104,
              114,
              101,
              101,
              32,
              75,
              105,
              110,
              103,
              100,
              111,
              109,
              115,
              32,
              40,
              97,
              32,
              67,
              104,
              105,
              110,
              101,
              115,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              99,
              108,
              97,
              115,
              115,
              105,
              99,
              32,
              39,
              83,
              97,
              110,
              32,
              71,
              117,
              97,
              39,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              91,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              124,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              93,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              143,
              32,
              224,
              185,
              129,
              224,
              184,
              156,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              184,
              148,
              224,
              184,
              180,
              224,
              184,
              153,
              224,
              184,
              174,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              170,
              224,
              184,
              183,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              184,
              161,
              224,
              185,
              130,
              224,
              184,
              151,
              224,
              184,
              163,
              224,
              184,
              161,
              224,
              185,
              129,
              224,
              184,
              170,
              224,
              184,
              153,
              224,
              184,
              170,
              224,
              184,
              177,
              224,
              184,
              135,
              224,
              185,
              128,
              224,
              184,
              167,
              224,
              184,
              138,
              32,
              32,
              224,
              184,
              158,
              224,
              184,
              163,
              224,
              184,
              176,
              224,
              184,
              155,
              224,
              184,
              129,
              224,
              185,
              128,
              224,
              184,
              129,
              224,
              184,
              168,
              224,
              184,
              129,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              154,
              224,
              184,
              185,
              224,
              185,
              138,
              224,
              184,
              129,
              224,
              184,
              185,
              224,
              185,
              137,
              224,
              184,
              130,
              224,
              184,
              182,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              185,
              131,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              185,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              170,
              224,
              184,
              180,
              224,
              184,
              154,
              224,
              184,
              170,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              129,
              224,
              184,
              169,
              224,
              184,
              177,
              224,
              184,
              149,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              162,
              224,
              185,
              140,
              224,
              184,
              129,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              184,
              153,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              185,
              129,
              224,
              184,
              165,
              224,
              184,
              150,
              224,
              184,
              177,
              224,
              184,
              148,
              224,
              185,
              132,
              224,
              184,
              155,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              170,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              132,
              224,
              185,
              140,
              224,
              185,
              132,
              224,
              184,
              139,
              224,
              184,
              163,
              224,
              185,
              137,
              224,
              185,
              130,
              224,
              184,
              135,
              224,
              185,
              136,
              224,
              185,
              128,
              224,
              184,
              130,
              224,
              184,
              165,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              154,
              224,
              184,
              178,
              224,
              184,
              155,
              224,
              184,
              177,
              224,
              184,
              141,
              224,
              184,
              141,
              224,
              184,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              151,
              224,
              184,
              163,
              224,
              184,
              135,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              150,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              130,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              151,
              224,
              184,
              181,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              151,
              224,
              184,
              181,
              224,
              185,
              136,
              224,
              184,
              158,
              224,
              184,
              182,
              224,
              185,
              136,
              224,
              184,
              135,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              154,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              136,
              224,
              184,
              182,
              224,
              184,
              135,
              224,
              184,
              167,
              224,
              184,
              180,
              224,
              184,
              155,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              149,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              184,
              129,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              184,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              130,
              224,
              184,
              174,
              224,
              184,
              136,
              224,
              184,
              180,
              224,
              185,
              139,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              163,
              224,
              184,
              181,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              151,
              224,
              184,
              177,
              224,
              184,
              158,
              224,
              184,
              151,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              167,
              224,
              184,
              171,
              224,
              184,
              177,
              224,
              184,
              167,
              224,
              185,
              128,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              161,
              224,
              184,
              178,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              184,
              162,
              224,
              184,
              136,
              224,
              184,
              176,
              224,
              184,
              134,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              161,
              224,
              184,
              148,
              224,
              184,
              138,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              167,
              224,
              184,
              149,
              224,
              184,
              177,
              224,
              184,
              167,
              224,
              184,
              170,
              224,
              184,
              179,
              224,
              184,
              132,
              224,
              184,
              177,
              224,
              184,
              141,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              128,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              153,
              224,
              184,
              130,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              185,
              132,
              224,
              184,
              170,
              224,
              185,
              132,
              224,
              184,
              165,
              224,
              185,
              136,
              224,
              185,
              128,
              224,
              184,
              170,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              136,
              224,
              184,
              178,
              224,
              184,
              129,
              224,
              185,
              128,
              224,
              184,
              132,
              224,
              184,
              171,
              224,
              184,
              178,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              163,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              184,
              155,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              130,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              165,
              224,
              184,
              162,
              224,
              184,
              173,
              224,
              184,
              178,
              224,
              184,
              170,
              224,
              184,
              177,
              224,
              184,
              141,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              157,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              162,
              224,
              184,
              173,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              184,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              184,
              162,
              224,
              184,
              184,
              224,
              185,
              129,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              185,
              131,
              224,
              184,
              171,
              224,
              185,
              137,
              224,
              185,
              129,
              224,
              184,
              149,
              224,
              184,
              129,
              224,
              184,
              129,
              224,
              184,
              177,
              224,
              184,
              153,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              131,
              224,
              184,
              138,
              224,
              185,
              137,
              224,
              184,
              170,
              224,
              184,
              178,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              153,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              183,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              185,
              131,
              224,
              184,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              158,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              165,
              224,
              184,
              180,
              224,
              184,
              137,
              224,
              184,
              184,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              184,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              181,
              224,
              184,
              129,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              129,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              185,
              128,
              224,
              184,
              171,
              224,
              184,
              149,
              224,
              184,
              184,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              138,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              158,
              224,
              184,
              168,
              224,
              184,
              136,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              135,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              184,
              178,
              224,
              184,
              159,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              163,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              185,
              132,
              224,
              184,
              171,
              224,
              185,
              137,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              149,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              163,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              178,
              224,
              184,
              134,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              159,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              136,
              224,
              184,
              153,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              163,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              162,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              164,
              224,
              185,
              133,
              224,
              184,
              171,
              224,
              184,
              178,
              224,
              185,
              131,
              224,
              184,
              132,
              224,
              184,
              163,
              224,
              184,
              132,
              224,
              185,
              137,
              224,
              184,
              179,
              224,
              184,
              138,
              224,
              184,
              185,
              224,
              184,
              129,
              224,
              184,
              185,
              224,
              185,
              137,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              163,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              135,
              224,
              184,
              129,
              224,
              185,
              140,
              32,
              224,
              184,
              175,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              84,
              104,
              101,
              32,
              97,
              98,
              111,
              118,
              101,
              32,
              105,
              115,
              32,
              97,
              32,
              116,
              119,
              111,
              45,
              99,
              111,
              108,
              117,
              109,
              110,
              32,
              116,
              101,
              120,
              116,
              46,
              32,
              73,
              102,
              32,
              99,
              111,
              109,
              98,
              105,
              110,
              105,
              110,
              103,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              115,
              32,
              97,
              114,
              101,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              100,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              108,
              121,
              44,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              110,
              101,
              115,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              111,
              110,
              100,
              32,
              99,
              111,
              108,
              117,
              109,
              110,
              32,
              115,
              104,
              111,
              117,
              108,
              100,
              32,
              98,
              101,
              32,
              97,
              108,
              105,
              103,
              110,
              101,
              100,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              124,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              32,
              97,
              98,
              111,
              118,
              101,
              46,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              69,
              116,
              104,
              105,
              111,
              112,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              80,
              114,
              111,
              118,
              101,
              114,
              98,
              115,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              65,
              109,
              104,
              97,
              114,
              105,
              99,
              32,
              108,
              97,
              110,
              103,
              117,
              97,
              103,
              101,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              176,
              225,
              136,
              155,
              225,
              139,
              173,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              179,
              225,
              136,
              168,
              225,
              136,
              181,
              32,
              225,
              138,
              149,
              225,
              140,
              137,
              225,
              136,
              165,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              138,
              168,
              225,
              136,
              176,
              225,
              136,
              181,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              165,
              225,
              136,
              139,
              32,
              225,
              138,
              171,
              225,
              136,
              136,
              225,
              138,
              157,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              225,
              138,
              160,
              225,
              137,
              163,
              225,
              137,
              180,
              32,
              225,
              137,
              160,
              225,
              137,
              134,
              225,
              136,
              152,
              225,
              140,
              160,
              225,
              138,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              140,
              140,
              225,
              140,
              165,
              32,
              225,
              139,
              171,
              225,
              136,
              136,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              137,
              129,
              225,
              136,
              157,
              225,
              140,
              165,
              225,
              138,
              147,
              32,
              225,
              138,
              144,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              176,
              225,
              136,
              128,
              32,
              225,
              137,
              160,
              225,
              136,
              149,
              225,
              136,
              141,
              225,
              136,
              153,
              32,
              225,
              137,
              133,
              225,
              137,
              164,
              32,
              225,
              137,
              163,
              225,
              139,
              173,
              225,
              140,
              160,
              225,
              140,
              163,
              32,
              225,
              138,
              149,
              225,
              140,
              163,
              225,
              137,
              181,
              32,
              225,
              137,
              160,
              225,
              140,
              136,
              225,
              139,
              176,
              225,
              136,
              136,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              138,
              160,
              225,
              141,
              141,
              32,
              225,
              139,
              136,
              225,
              136,
              136,
              225,
              136,
              157,
              225,
              137,
              179,
              32,
              225,
              137,
              160,
              225,
              137,
              133,
              225,
              137,
              164,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              179,
              225,
              136,
              189,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              140,
              165,
              32,
              225,
              137,
              160,
              225,
              137,
              160,
              225,
              136,
              139,
              32,
              225,
              139,
              179,
              225,
              139,
              139,
              32,
              225,
              137,
              176,
              225,
              136,
              152,
              225,
              137,
              179,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              178,
              225,
              137,
              176,
              225,
              136,
              168,
              225,
              140,
              137,
              225,
              136,
              153,
              32,
              225,
              139,
              173,
              225,
              139,
              176,
              225,
              136,
              168,
              225,
              140,
              141,
              225,
              136,
              153,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              128,
              225,
              136,
              181,
              32,
              225,
              137,
              160,
              225,
              137,
              128,
              225,
              136,
              181,
              225,
              141,
              165,
              32,
              225,
              139,
              149,
              225,
              138,
              149,
              225,
              137,
              129,
              225,
              136,
              139,
              225,
              136,
              141,
              32,
              225,
              137,
              160,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              136,
              169,
              32,
              225,
              139,
              173,
              225,
              136,
              132,
              225,
              139,
              179,
              225,
              136,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              181,
              225,
              136,
              173,
              32,
              225,
              137,
              162,
              225,
              139,
              171,
              225,
              137,
              165,
              225,
              136,
              173,
              32,
              225,
              138,
              160,
              225,
              138,
              149,
              225,
              137,
              160,
              225,
              136,
              179,
              32,
              225,
              139,
              171,
              225,
              136,
              181,
              225,
              136,
              173,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              176,
              225,
              139,
              141,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              140,
              133,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              32,
              225,
              140,
              137,
              225,
              136,
              168,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              176,
              225,
              139,
              179,
              225,
              139,
              176,
              225,
              136,
              173,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              139,
              156,
              225,
              136,
              173,
              32,
              225,
              139,
              168,
              225,
              138,
              168,
              225,
              141,
              136,
              225,
              137,
              176,
              225,
              139,
              141,
              225,
              138,
              149,
              32,
              225,
              140,
              137,
              225,
              136,
              174,
              225,
              136,
              174,
              32,
              225,
              136,
              179,
              225,
              139,
              173,
              225,
              139,
              152,
              225,
              140,
              139,
              225,
              139,
              141,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              139,
              181,
              225,
              136,
              173,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              140,
              142,
              225,
              136,
              168,
              225,
              137,
              164,
              225,
              137,
              181,
              32,
              225,
              136,
              140,
              225,
              137,
              163,
              225,
              141,
              165,
              32,
              225,
              137,
              162,
              225,
              139,
              171,
              225,
              139,
              169,
              225,
              137,
              181,
              32,
              225,
              139,
              173,
              225,
              136,
              181,
              225,
              137,
              133,
              32,
              225,
              137,
              163,
              225,
              139,
              171,
              225,
              139,
              169,
              225,
              137,
              181,
              32,
              225,
              139,
              171,
              225,
              140,
              160,
              225,
              136,
              141,
              225,
              137,
              133,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              165,
              225,
              136,
              171,
              32,
              225,
              138,
              168,
              225,
              136,
              152,
              225,
              141,
              141,
              225,
              137,
              179,
              225,
              137,
              181,
              32,
              225,
              136,
              141,
              225,
              140,
              132,
              225,
              138,
              149,
              32,
              225,
              136,
              139,
              225,
              141,
              139,
              225,
              137,
              179,
              225,
              137,
              181,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              147,
              225,
              137,
              163,
              225,
              139,
              173,
              32,
              225,
              136,
              155,
              225,
              139,
              176,
              225,
              136,
              170,
              225,
              139,
              171,
              32,
              225,
              139,
              168,
              225,
              136,
              136,
              225,
              139,
              141,
              225,
              141,
              165,
              32,
              225,
              140,
              141,
              225,
              138,
              149,
              225,
              139,
              181,
              32,
              225,
              139,
              173,
              225,
              139,
              158,
              32,
              225,
              139,
              173,
              225,
              139,
              158,
              225,
              136,
              171,
              225,
              136,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              138,
              165,
              225,
              136,
              181,
              225,
              136,
              139,
              225,
              136,
              157,
              32,
              225,
              138,
              160,
              225,
              140,
              136,
              225,
              136,
              169,
              32,
              225,
              136,
              152,
              225,
              138,
              171,
              32,
              225,
              139,
              168,
              225,
              138,
              160,
              225,
              136,
              158,
              225,
              136,
              171,
              32,
              225,
              138,
              160,
              225,
              140,
              136,
              225,
              136,
              169,
              32,
              225,
              139,
              139,
              225,
              136,
              173,
              225,
              138,
              171,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              176,
              225,
              138,
              149,
              225,
              140,
              139,
              225,
              136,
              142,
              32,
              225,
              137,
              162,
              225,
              137,
              176,
              225,
              141,
              137,
              32,
              225,
              137,
              176,
              225,
              136,
              152,
              225,
              136,
              141,
              225,
              136,
              182,
              32,
              225,
              137,
              163,
              225,
              141,
              137,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              136,
              225,
              139,
              179,
              225,
              140,
              133,
              225,
              136,
              133,
              32,
              225,
              136,
              155,
              225,
              136,
              173,
              32,
              225,
              137,
              162,
              225,
              136,
              134,
              225,
              138,
              149,
              32,
              225,
              140,
              168,
              225,
              136,
              173,
              225,
              136,
              181,
              225,
              136,
              133,
              32,
              225,
              138,
              160,
              225,
              137,
              181,
              225,
              136,
              139,
              225,
              136,
              176,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              136,
              173,
              225,
              136,
              133,
              225,
              138,
              149,
              32,
              225,
              137,
              160,
              225,
              141,
              141,
              225,
              136,
              171,
              225,
              136,
              189,
              225,
              136,
              133,
              32,
              225,
              136,
              141,
              225,
              138,
              173,
              32,
              225,
              139,
              152,
              225,
              136,
              173,
              225,
              140,
              139,
              225,
              141,
              162,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              82,
              117,
              110,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              154,
              187,
              225,
              155,
              150,
              32,
              225,
              154,
              179,
              225,
              154,
              185,
              225,
              154,
              171,
              225,
              154,
              166,
              32,
              225,
              154,
              166,
              225,
              154,
              171,
              225,
              155,
              143,
              32,
              225,
              154,
              187,
              225,
              155,
              150,
              32,
              225,
              155,
              146,
              225,
              154,
              162,
              225,
              155,
              158,
              225,
              155,
              150,
              32,
              225,
              154,
              169,
              225,
              154,
              190,
              32,
              225,
              154,
              166,
              225,
              154,
              171,
              225,
              155,
              151,
              32,
              225,
              155,
              154,
              225,
              154,
              170,
              225,
              154,
              190,
              225,
              155,
              158,
              225,
              155,
              150,
              32,
              225,
              154,
              190,
              225,
              154,
              169,
              225,
              154,
              177,
              225,
              154,
              166,
              225,
              154,
              185,
              225,
              155,
              150,
              225,
              154,
              170,
              225,
              154,
              177,
              225,
              155,
              158,
              225,
              154,
              162,
              225,
              155,
              151,
              32,
              225,
              154,
              185,
              225,
              155,
              129,
              225,
              154,
              166,
              32,
              225,
              154,
              166,
              225,
              154,
              170,
              32,
              225,
              154,
              185,
              225,
              155,
              150,
              225,
              155,
              165,
              225,
              154,
              171,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              79,
              108,
              100,
              32,
              69,
              110,
              103,
              108,
              105,
              115,
              104,
              44,
              32,
              119,
              104,
              105,
              99,
              104,
              32,
              116,
              114,
              97,
              110,
              115,
              99,
              114,
              105,
              98,
              101,
              100,
              32,
              105,
              110,
              116,
              111,
              32,
              76,
              97,
              116,
              105,
              110,
              32,
              114,
              101,
              97,
              100,
              115,
              32,
              39,
              72,
              101,
              32,
              99,
              119,
              97,
              101,
              116,
              104,
              32,
              116,
              104,
              97,
              116,
              32,
              104,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              98,
              117,
              100,
              101,
              32,
              116,
              104,
              97,
              101,
              109,
              32,
              108,
              97,
              110,
              100,
              101,
              32,
              110,
              111,
              114,
              116,
              104,
              119,
              101,
              97,
              114,
              100,
              117,
              109,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              97,
              32,
              87,
              101,
              115,
              116,
              115,
              97,
              101,
              46,
              39,
              32,
              97,
              110,
              100,
              32,
              109,
              101,
              97,
              110,
              115,
              32,
              39,
              72,
              101,
              32,
              115,
              97,
              105,
              100,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              116,
              104,
              97,
              116,
              32,
              104,
              101,
              32,
              108,
              105,
              118,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              110,
              111,
              114,
              116,
              104,
              101,
              114,
              110,
              32,
              108,
              97,
              110,
              100,
              32,
              110,
              101,
              97,
              114,
              32,
              116,
              104,
              101,
              32,
              87,
              101,
              115,
              116,
              101,
              114,
              110,
              32,
              83,
              101,
              97,
              46,
              39,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              66,
              114,
              97,
              105,
              108,
              108,
              101,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              140,
              226,
              160,
              129,
              226,
              160,
              167,
              226,
              160,
              145,
              32,
              226,
              160,
              188,
              226,
              160,
              129,
              226,
              160,
              146,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              161,
              163,
              226,
              160,
              149,
              226,
              160,
              140,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              146,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              131,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              148,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              185,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              157,
              226,
              160,
              149,
              32,
              226,
              160,
              153,
              226,
              160,
              179,
              226,
              160,
              131,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              177,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              145,
              226,
              160,
              167,
              226,
              160,
              187,
              32,
              226,
              160,
              129,
              226,
              160,
              131,
              226,
              160,
              179,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              138,
              226,
              160,
              140,
              226,
              160,
              187,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              131,
              226,
              160,
              165,
              226,
              160,
              151,
              226,
              160,
              138,
              226,
              160,
              129,
              226,
              160,
              135,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              155,
              226,
              160,
              157,
              226,
              160,
              171,
              32,
              226,
              160,
              131,
              226,
              160,
              185,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              187,
              226,
              160,
              155,
              226,
              160,
              185,
              226,
              160,
              141,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              187,
              226,
              160,
              133,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              165,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              187,
              226,
              160,
              158,
              226,
              160,
              129,
              226,
              160,
              133,
              226,
              160,
              187,
              226,
              160,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              161,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              139,
              32,
              226,
              160,
              141,
              226,
              160,
              179,
              226,
              160,
              151,
              226,
              160,
              157,
              226,
              160,
              187,
              226,
              160,
              178,
              32,
              226,
              161,
              142,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              155,
              226,
              160,
              145,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              155,
              226,
              160,
              157,
              226,
              160,
              171,
              32,
              226,
              160,
              138,
              226,
              160,
              158,
              226,
              160,
              178,
              32,
              226,
              161,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              142,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              141,
              226,
              160,
              145,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              155,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              153,
              32,
              226,
              160,
              165,
              226,
              160,
              143,
              226,
              160,
              149,
              226,
              160,
              157,
              32,
              226,
              160,
              176,
              226,
              161,
              161,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              130,
              32,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              185,
              226,
              160,
              185,
              226,
              160,
              148,
              226,
              160,
              155,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              161,
              226,
              160,
              149,
              226,
              160,
              142,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              143,
              226,
              160,
              165,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              149,
              226,
              160,
              135,
              226,
              160,
              153,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              148,
              226,
              160,
              153,
              226,
              160,
              150,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              176,
              226,
              160,
              158,
              32,
              226,
              160,
              141,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              157,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              142,
              226,
              160,
              129,
              226,
              160,
              185,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              133,
              226,
              160,
              157,
              226,
              160,
              170,
              226,
              160,
              130,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              170,
              226,
              160,
              157,
              32,
              226,
              160,
              133,
              226,
              160,
              157,
              226,
              160,
              170,
              226,
              160,
              135,
              226,
              160,
              171,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              130,
              32,
              226,
              160,
              177,
              226,
              160,
              129,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              143,
              226,
              160,
              156,
              226,
              160,
              158,
              226,
              160,
              138,
              226,
              160,
              138,
              226,
              160,
              165,
              226,
              160,
              135,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              185,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              131,
              226,
              160,
              179,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              163,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              167,
              226,
              160,
              145,
              32,
              226,
              160,
              131,
              226,
              160,
              145,
              226,
              160,
              178,
              32,
              226,
              160,
              148,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              148,
              226,
              160,
              171,
              226,
              160,
              130,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              226,
              160,
              142,
              226,
              160,
              145,
              226,
              160,
              135,
              226,
              160,
              139,
              226,
              160,
              130,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              156,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              138,
              226,
              160,
              149,
              226,
              160,
              139,
              226,
              160,
              139,
              226,
              160,
              148,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              140,
              32,
              226,
              160,
              143,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              138,
              226,
              160,
              145,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              141,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              155,
              226,
              160,
              187,
              226,
              160,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              148,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              151,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              178,
              32,
              226,
              161,
              131,
              226,
              160,
              165,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              142,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              141,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              179,
              226,
              160,
              151,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              140,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              148,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              134,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              32,
              226,
              160,
              165,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              226,
              160,
              170,
              226,
              160,
              171,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              169,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              32,
              226,
              160,
              157,
              226,
              160,
              149,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              140,
              226,
              160,
              165,
              226,
              160,
              151,
              226,
              160,
              131,
              32,
              226,
              160,
              138,
              226,
              160,
              158,
              226,
              160,
              130,
              32,
              226,
              160,
              149,
              226,
              160,
              151,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              161,
              138,
              226,
              160,
              179,
              226,
              160,
              157,
              226,
              160,
              158,
              226,
              160,
              151,
              226,
              160,
              185,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              145,
              32,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              135,
              32,
              226,
              160,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              145,
              32,
              226,
              160,
              143,
              226,
              160,
              187,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              158,
              32,
              226,
              160,
              141,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              143,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              130,
              32,
              226,
              160,
              145,
              226,
              160,
              141,
              226,
              160,
              143,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              138,
              226,
              160,
              138,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              226,
              160,
              185,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              84,
              104,
              101,
              32,
              102,
              105,
              114,
              115,
              116,
              32,
              99,
              111,
              117,
              112,
              108,
              101,
              32,
              111,
              102,
              32,
              112,
              97,
              114,
              97,
              103,
              114,
              97,
              112,
              104,
              115,
              32,
              111,
              102,
              32,
              34,
              65,
              32,
              67,
              104,
              114,
              105,
              115,
              116,
              109,
              97,
              115,
              32,
              67,
              97,
              114,
              111,
              108,
              34,
              32,
              98,
              121,
              32,
              68,
              105,
              99,
              107,
              101,
              110,
              115,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              67,
              111,
              109,
              112,
              97,
              99,
              116,
              32,
              102,
              111,
              110,
              116,
              32,
              115,
              101,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              32,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              32,
              116,
              101,
              120,
              116,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              32,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              32,
              194,
              163,
              194,
              169,
              194,
              181,
              195,
              128,
              195,
              134,
              195,
              150,
              195,
              158,
              195,
              159,
              195,
              169,
              195,
              182,
              195,
              191,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              128,
              147,
              226,
              128,
              148,
              226,
              128,
              152,
              226,
              128,
              156,
              226,
              128,
              157,
              226,
              128,
              158,
              226,
              128,
              160,
              226,
              128,
              162,
              226,
              128,
              166,
              226,
              128,
              176,
              226,
              132,
              162,
              197,
              147,
              197,
              160,
              197,
              184,
              197,
              190,
              226,
              130,
              172,
              32,
              206,
              145,
              206,
              146,
              206,
              147,
              206,
              148,
              206,
              169,
              206,
              177,
              206,
              178,
              206,
              179,
              206,
              180,
              207,
              137,
              32,
              208,
              144,
              208,
              145,
              208,
              146,
              208,
              147,
              208,
              148,
              208,
              176,
              208,
              177,
              208,
              178,
              208,
              179,
              208,
              180,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              128,
              226,
              136,
              130,
              226,
              136,
              136,
              226,
              132,
              157,
              226,
              136,
              167,
              226,
              136,
              170,
              226,
              137,
              161,
              226,
              136,
              158,
              32,
              226,
              134,
              145,
              226,
              134,
              151,
              226,
              134,
              168,
              226,
              134,
              187,
              226,
              135,
              163,
              32,
              226,
              148,
              144,
              226,
              148,
              188,
              226,
              149,
              148,
              226,
              149,
              152,
              226,
              150,
              145,
              226,
              150,
              186,
              226,
              152,
              186,
              226,
              153,
              128,
              32,
              239,
              172,
              129,
              239,
              191,
              189,
              226,
              145,
              128,
              226,
              130,
              130,
              225,
              188,
              160,
              225,
              184,
              130,
              211,
              165,
              225,
              186,
              132,
              201,
              144,
              203,
              144,
              226,
              141,
              142,
              215,
              144,
              212,
              177,
              225,
              131,
              144,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              114,
              101,
              101,
              116,
              105,
              110,
              103,
              115,
              32,
              105,
              110,
              32,
              118,
              97,
              114,
              105,
              111,
              117,
              115,
              32,
              108,
              97,
              110,
              103,
              117,
              97,
              103,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              72,
              101,
              108,
              108,
              111,
              32,
              119,
              111,
              114,
              108,
              100,
              44,
              32,
              206,
              154,
              206,
              177,
              206,
              187,
              206,
              183,
              206,
              188,
              225,
              189,
              179,
              207,
              129,
              206,
              177,
              32,
              206,
              186,
              225,
              189,
              185,
              207,
              131,
              206,
              188,
              206,
              181,
              44,
              32,
              227,
              130,
              179,
              227,
              131,
              179,
              227,
              131,
              139,
              227,
              131,
              129,
              227,
              131,
              143,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              66,
              111,
              120,
              32,
              100,
              114,
              97,
              119,
              105,
              110,
              103,
              32,
              97,
              108,
              105,
              103,
              110,
              109,
              101,
              110,
              116,
              32,
              116,
              101,
              115,
              116,
              115,
              58,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              137,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              166,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              151,
              32,
              32,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              144,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              226,
              148,
              143,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              179,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              147,
              32,
              32,
              226,
              148,
              142,
              226,
              148,
              146,
              226,
              148,
              143,
              226,
              148,
              145,
              32,
              32,
              32,
              226,
              149,
              183,
              32,
              32,
              226,
              149,
              187,
              32,
              226,
              148,
              143,
              226,
              148,
              175,
              226,
              148,
              147,
              32,
              226,
              148,
              140,
              226,
              148,
              176,
              226,
              148,
              144,
              32,
              32,
              32,
              32,
              226,
              150,
              138,
              32,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              149,
              168,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              167,
              226,
              149,
              144,
              226,
              149,
              151,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              146,
              226,
              149,
              144,
              226,
              149,
              170,
              226,
              149,
              144,
              226,
              149,
              149,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              147,
              226,
              148,
              128,
              226,
              149,
              129,
              226,
              148,
              128,
              226,
              149,
              150,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              148,
              131,
              32,
              32,
              226,
              148,
              151,
              226,
              149,
              131,
              226,
              149,
              132,
              226,
              148,
              153,
              32,
              32,
              226,
              149,
              182,
              226,
              148,
              188,
              226,
              149,
              180,
              226,
              149,
              186,
              226,
              149,
              139,
              226,
              149,
              184,
              226,
              148,
              160,
              226,
              148,
              188,
              226,
              148,
              168,
              32,
              226,
              148,
              157,
              226,
              149,
              139,
              226,
              148,
              165,
              32,
              32,
              32,
              32,
              226,
              150,
              139,
              32,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              226,
              149,
              178,
              32,
              226,
              149,
              177,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              226,
              148,
              131,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              130,
              32,
              226,
              149,
              191,
              32,
              226,
              148,
              130,
              226,
              148,
              131,
              32,
              32,
              226,
              148,
              141,
              226,
              149,
              133,
              226,
              149,
              134,
              226,
              148,
              147,
              32,
              32,
              32,
              226,
              149,
              181,
              32,
              32,
              226,
              149,
              185,
              32,
              226,
              148,
              151,
              226,
              148,
              183,
              226,
              148,
              155,
              32,
              226,
              148,
              148,
              226,
              148,
              184,
              226,
              148,
              152,
              32,
              32,
              32,
              32,
              226,
              150,
              140,
              32,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              160,
              226,
              149,
              161,
              32,
              226,
              149,
              179,
              32,
              226,
              149,
              158,
              226,
              149,
              163,
              32,
              32,
              226,
              148,
              156,
              226,
              149,
              162,
              32,
              32,
              32,
              226,
              149,
              159,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              156,
              226,
              148,
              188,
              226,
              148,
              128,
              226,
              148,
              188,
              226,
              148,
              128,
              226,
              148,
              188,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              156,
              226,
              149,
              171,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              149,
              171,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              163,
              226,
              148,
              191,
              226,
              149,
              190,
              226,
              148,
              188,
              226,
              149,
              188,
              226,
              148,
              191,
              226,
              148,
              171,
              32,
              32,
              226,
              148,
              149,
              226,
              148,
              155,
              226,
              148,
              150,
              226,
              148,
              154,
              32,
              32,
              32,
              32,
              32,
              226,
              148,
              140,
              226,
              148,
              132,
              226,
              148,
              132,
              226,
              148,
              144,
              32,
              226,
              149,
              142,
              32,
              226,
              148,
              143,
              226,
              148,
              133,
              226,
              148,
              133,
              226,
              148,
              147,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              141,
              32,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              226,
              149,
              177,
              32,
              226,
              149,
              178,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              226,
              148,
              131,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              130,
              32,
              226,
              149,
              189,
              32,
              226,
              148,
              130,
              226,
              148,
              131,
              32,
              32,
              226,
              150,
              145,
              226,
              150,
              145,
              226,
              150,
              146,
              226,
              150,
              146,
              226,
              150,
              147,
              226,
              150,
              147,
              226,
              150,
              136,
              226,
              150,
              136,
              32,
              226,
              148,
              138,
              32,
              32,
              226,
              148,
              134,
              32,
              226,
              149,
              142,
              32,
              226,
              149,
              143,
              32,
              32,
              226,
              148,
              135,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              149,
              165,
              226,
              148,
              128,
              226,
              148,
              152,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              164,
              226,
              149,
              144,
              226,
              149,
              157,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              152,
              226,
              149,
              144,
              226,
              149,
              170,
              226,
              149,
              144,
              226,
              149,
              155,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              153,
              226,
              148,
              128,
              226,
              149,
              128,
              226,
              148,
              128,
              226,
              149,
              156,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              148,
              152,
              226,
              148,
              131,
              32,
              32,
              226,
              150,
              145,
              226,
              150,
              145,
              226,
              150,
              146,
              226,
              150,
              146,
              226,
              150,
              147,
              226,
              150,
              147,
              226,
              150,
              136,
              226,
              150,
              136,
              32,
              226,
              148,
              138,
              32,
              32,
              226,
              148,
              134,
              32,
              226,
              149,
              142,
              32,
              226,
              149,
              143,
              32,
              32,
              226,
              148,
              135,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              143,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              169,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              157,
              32,
              32,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              152,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              226,
              148,
              151,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              187,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              155,
              32,
              32,
              226,
              150,
              151,
              226,
              150,
              132,
              226,
              150,
              150,
              226,
              150,
              155,
              226,
              150,
              128,
              226,
              150,
              156,
              32,
              32,
              32,
              226,
              148,
              148,
              226,
              149,
              140,
              226,
              149,
              140,
              226,
              148,
              152,
              32,
              226,
              149,
              142,
              32,
              226,
              148,
              151,
              226,
              149,
              141,
              226,
              149,
              141,
              226,
              148,
              155,
              32,
              226,
              148,
              139,
              32,
              32,
              226,
              150,
              129,
              226,
              150,
              130,
              226,
              150,
              131,
              226,
              150,
              132,
              226,
              150,
              133,
              226,
              150,
              134,
              226,
              150,
              135,
              226,
              150,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              157,
              226,
              150,
              128,
              226,
              150,
              152,
              226,
              150,
              153,
              226,
              150,
              132,
              226,
              150,
              159,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              47,
              112,
              114,
              101,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              47,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              47,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32
            ]
          },
          "cookie": [],
          "responseTime": 175,
          "responseSize": 15630
        },
        "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has charset in content-type header",
            "skipped": false
          },
          {
            "assertion": "response has chunked transfer encoding header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "af01fc18-c89f-4d6a-bb30-63796f822910",
          "length": 35,
          "cycles": 3,
          "position": 19,
          "iteration": 1,
          "httpRequestId": "d3c64067-a8be-49cf-97b4-e5a1ce3bcd73"
        },
        "item": {
          "id": "d461228b-6484-4aa6-8de7-b940895741a0",
          "name": "GZip Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "gzip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('gzipped', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'gzip')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*gzip.*/);",
                  "});"
                ],
                "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "gzip"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3ec964b1-1128-441c-bb6f-3f556227bcff",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AJp_c-UPisCOTEO2Nu8s3kW9hPC3DBlsV.PrR%2BvnsKz4YqftWdyOqpf8rpLq7pN51Bqh%2FV6mVmob0",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "609859bd-0e0d-4aba-8334-d12a1063c562",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:20 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "384"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "ETag",
              "value": "W/\"180-kPDl+/Mg3wyHbAOlGouS8D3r/TU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AmYK4Zwo9-7sEyqmie3QCxrBRu3vFU9hG.5HpkTzT%2Fp8lfzLkXosW%2BogqArZpGy3KI0kpfPmeF7G0; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              103,
              122,
              105,
              112,
              112,
              101,
              100,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              56,
              45,
              50,
              100,
              99,
              54,
              49,
              57,
              99,
              98,
              48,
              57,
              57,
              99,
              57,
              98,
              51,
              57,
              48,
              97,
              98,
              50,
              48,
              56,
              100,
              97,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              51,
              101,
              99,
              57,
              54,
              52,
              98,
              49,
              45,
              49,
              49,
              50,
              56,
              45,
              52,
              52,
              49,
              99,
              45,
              98,
              98,
              54,
              102,
              45,
              51,
              102,
              53,
              53,
              54,
              50,
              50,
              55,
              98,
              99,
              102,
              102,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              74,
              112,
              95,
              99,
              45,
              85,
              80,
              105,
              115,
              67,
              79,
              84,
              69,
              79,
              50,
              78,
              117,
              56,
              115,
              51,
              107,
              87,
              57,
              104,
              80,
              67,
              51,
              68,
              66,
              108,
              115,
              86,
              46,
              80,
              114,
              82,
              37,
              50,
              66,
              118,
              110,
              115,
              75,
              122,
              52,
              89,
              113,
              102,
              116,
              87,
              100,
              121,
              79,
              113,
              112,
              102,
              56,
              114,
              112,
              76,
              113,
              55,
              112,
              78,
              53,
              49,
              66,
              113,
              104,
              37,
              50,
              70,
              86,
              54,
              109,
              86,
              109,
              111,
              98,
              48,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              32,
              34,
              71,
              69,
              84,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 115,
          "responseSize": 538
        },
        "id": "d461228b-6484-4aa6-8de7-b940895741a0",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "response headers should indicate valid content encoding",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response headers should indicate valid content encoding",
              "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
              "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:20)"
            }
          },
          {
            "assertion": "requesting http client should accept compressed response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c82ab89f-8328-491c-aec2-b11b10c966c0",
          "length": 35,
          "cycles": 3,
          "position": 20,
          "iteration": 1,
          "httpRequestId": "bace239f-a41d-4a5f-9c93-b73ca4697c5c"
        },
        "item": {
          "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
          "name": "Deflate Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "deflate"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('deflated', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'deflate')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*deflate.*/);",
                  "});"
                ],
                "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "deflate"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8dba8a64-fed6-49e6-b0f4-b6e0f396bc94",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AmYK4Zwo9-7sEyqmie3QCxrBRu3vFU9hG.5HpkTzT%2Fp8lfzLkXosW%2BogqArZpGy3KI0kpfPmeF7G0",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "fee1a7d0-65f7-4dda-a5b9-3b58b0d1afba",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:20 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "367"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Encoding",
              "value": "deflate"
            },
            {
              "key": "ETag",
              "value": "W/\"16f-7d7/vzt3B+aIuHA5o4XPktu4OE4\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Atr7Txl85TLArZ3txUXqxqcDjCvIQV3pH.5Q%2F99cLLu%2BqSOjtG9Ait2r9JOlpRFF1nPSJYOuObvks; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              100,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              56,
              45,
              53,
              49,
              53,
              52,
              98,
              55,
              102,
              51,
              53,
              48,
              51,
              99,
              56,
              55,
              57,
              55,
              54,
              54,
              56,
              51,
              98,
              51,
              98,
              55,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              56,
              100,
              98,
              97,
              56,
              97,
              54,
              52,
              45,
              102,
              101,
              100,
              54,
              45,
              52,
              57,
              101,
              54,
              45,
              98,
              48,
              102,
              52,
              45,
              98,
              54,
              101,
              48,
              102,
              51,
              57,
              54,
              98,
              99,
              57,
              52,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              109,
              89,
              75,
              52,
              90,
              119,
              111,
              57,
              45,
              55,
              115,
              69,
              121,
              113,
              109,
              105,
              101,
              51,
              81,
              67,
              120,
              114,
              66,
              82,
              117,
              51,
              118,
              70,
              85,
              57,
              104,
              71,
              46,
              53,
              72,
              112,
              107,
              84,
              122,
              84,
              37,
              50,
              70,
              112,
              56,
              108,
              102,
              122,
              76,
              107,
              88,
              111,
              115,
              87,
              37,
              50,
              66,
              111,
              103,
              113,
              65,
              114,
              90,
              112,
              71,
              121,
              51,
              75,
              73,
              48,
              107,
              112,
              102,
              80,
              109,
              101,
              70,
              55,
              71,
              48,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              32,
              34,
              71,
              69,
              84,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 122,
          "responseSize": 539
        },
        "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "response headers should indicate valid content encoding",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response headers should indicate valid content encoding",
              "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
              "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:21)"
            }
          },
          {
            "assertion": "requesting http client should accept compressed response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "aee485f3-bfab-4a3c-9558-aae42b5e97e2",
          "length": 35,
          "cycles": 3,
          "position": 21,
          "iteration": 1,
          "httpRequestId": "e2c84f33-ed32-4c8e-9482-df3cea7a3156"
        },
        "item": {
          "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
          "name": "IP address in JSON format",
          "request": {
            "description": {
              "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "ip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('ip');",
                  "});",
                  "",
                  "pm.test(\"response must return a valid ip address\", function () {",
                  "    pm.expect(pm.response.json().ip).to",
                  "        // a really gnarly regular expression to ensure that ip address is in correct format",
                  "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                  "});"
                ],
                "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "ip"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7c91005e-794d-41d8-9fe3-5c55d8b035ca",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Atr7Txl85TLArZ3txUXqxqcDjCvIQV3pH.5Q%2F99cLLu%2BqSOjtG9Ait2r9JOlpRFF1nPSJYOuObvks",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "eaa659b4-ca20-4612-a092-823518b76836",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:21 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "21"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"15-VtCIkyiPCnAcTFquxN3mUHAfo0Q\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AUFgx5oy7ib4abUxseDavTNelMQqpnDA8.bkxiNSer4NETtB8fb6fGg9qxSEGZ1oZgyxcwtLLS1MQ; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              112,
              34,
              58,
              34,
              57,
              48,
              46,
              53,
              48,
              46,
              55,
              55,
              46,
              49,
              51,
              56,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 121,
          "responseSize": 21
        },
        "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "response must return a valid ip address",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "39fb3e91-6db5-4588-a6b6-94c6e35723ed",
          "length": 35,
          "cycles": 3,
          "position": 22,
          "iteration": 1,
          "httpRequestId": "a77206c9-7bdf-400a-83f0-3bad60b83501"
        },
        "item": {
          "id": "a5d4d6d5-bef8-420b-9fbf-e21b8a1e09b1",
          "name": "Current UTC time",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "now"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html"
              },
              "id": "ca211094-b349-4c98-a830-f222b29f8a2e",
              "name": "time as text",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "now"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "49"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:12 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
                }
              ],
              "body": "Wed, 11 Jan 2017 10:27:12 GMT",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73453a52-4137-4f3e-90d6-3984ab6ae36b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response time matches server response 'date' header\", function () {",
                  "    pm.expect(pm.response.text()).to.eql(pm.response.headers.get('date'))",
                  "});"
                ],
                "_lastExecutionId": "f7a8df2d-a923-489f-8590-121c5884959a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "now"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "77fb7319-8337-449b-96e7-0da10b227a63",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AUFgx5oy7ib4abUxseDavTNelMQqpnDA8.bkxiNSer4NETtB8fb6fGg9qxSEGZ1oZgyxcwtLLS1MQ",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "3822191f-ff6b-404a-be56-61f78eb9b986",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:21 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-dJSRXNrnMLyQQI+30okN/MMey0U\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ATr1qnftumiO51F37v07Nqg1IzFwJu_7d.8ftxXsuQ8AcQpwRb1hD6Fns4sw69OccYBpiOFsIAf%2BE; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              87,
              101,
              100,
              44,
              32,
              48,
              55,
              32,
              65,
              112,
              114,
              32,
              50,
              48,
              50,
              49,
              32,
              49,
              49,
              58,
              51,
              53,
              58,
              50,
              49,
              32,
              71,
              77,
              84
            ]
          },
          "cookie": [],
          "responseTime": 112,
          "responseSize": 29
        },
        "id": "a5d4d6d5-bef8-420b-9fbf-e21b8a1e09b1",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response time matches server response 'date' header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c8940c58-868d-473f-be10-0b2812c3cfd3",
          "length": 35,
          "cycles": 3,
          "position": 23,
          "iteration": 1,
          "httpRequestId": "e30cc035-8615-49e7-83f5-38fba5a332a5"
        },
        "item": {
          "id": "c8d50185-29c4-4f53-9575-c392b4fde8a3",
          "name": "Timestamp validity",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "valid"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6c2c373b-cc8b-4ef5-a76c-c6f0e6fb7d74",
              "name": "Valid Timestamp",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "valid"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": "2016-10-10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:33 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI; Path=/; HttpOnly"
                }
              ],
              "body": "{\"valid\":true}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI"
                }
              ]
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c21cba1a-1042-4723-b43d-63680913a75b",
              "name": "Invalid Timestamp",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "valid"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": "2016-10-10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "15"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:53 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"f-/i9mO/upK91ZtL0BkKFGtw\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI; Path=/; HttpOnly"
                }
              ],
              "body": "{\"valid\":false}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9da491d-4d99-4573-bdac-bcc292514a2f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query time is valid\", function () {",
                  "    pm.response.to.have.jsonBody('valid', true);",
                  "});"
                ],
                "_lastExecutionId": "a32a0c04-31b5-47f2-9b08-cf91e1736bb5"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "valid"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4cf6f656-68d1-4858-a0f5-21d4fdbbcd28",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ATr1qnftumiO51F37v07Nqg1IzFwJu_7d.8ftxXsuQ8AcQpwRb1hD6Fns4sw69OccYBpiOFsIAf%2BE",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "43230080-e383-4099-9748-5a6aeed3a724",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:21 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"e-3MDSGou3nIOvlBZElUyTiBbaRZY\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AN5yMEEDPlW8qb87EdTagAUV4-L4VKs5K.AXSB8EZEaMV%2BtVzP6TtoySiscTowBwhzwmqUcFrJWuU; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              118,
              97,
              108,
              105,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 127,
          "responseSize": 14
        },
        "id": "c8d50185-29c4-4f53-9575-c392b4fde8a3",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say whether request query time is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f4c0970e-2743-4eed-9010-3eac3b1eb1a8",
          "length": 35,
          "cycles": 3,
          "position": 24,
          "iteration": 1,
          "httpRequestId": "5a81dc4b-1d60-4ef8-beb4-9e056a905b3f"
        },
        "item": {
          "id": "212b68da-fdf7-4975-a19c-6f74e9e808a2",
          "name": "Format timestamp",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "format"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "format",
                  "value": "mm"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "76cec32e-facc-4bac-a014-298db8e01c85",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query time is valid\", function () {",
                  "    pm.response.to.have.jsonBody('format', '20');",
                  "});"
                ],
                "_lastExecutionId": "f4ad9d0e-2682-4be9-b8b2-4ea00c20503e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "format"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "format",
                "value": "mm"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "80a33421-7744-46db-9d08-51cebb684fc1",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AN5yMEEDPlW8qb87EdTagAUV4-L4VKs5K.AXSB8EZEaMV%2BtVzP6TtoySiscTowBwhzwmqUcFrJWuU",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "9168ba38-6bec-4074-9d20-152244188336",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:21 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"f-oSXEKZdRgFcBy3nxz+EFgc2p5wo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AGozMHFtLfbFB_xhhuaZSLiHZdTiSTFRI.slk5kX7U12K8Iip8Sp43kh4ovn%2BB9g8g4%2FFBr3XgX9Q; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              114,
              109,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 109,
          "responseSize": 15
        },
        "id": "212b68da-fdf7-4975-a19c-6f74e9e808a2",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say whether request query time is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "457a6f05-77ba-4e64-bc44-e2c45cee76f4",
          "length": 35,
          "cycles": 3,
          "position": 25,
          "iteration": 1,
          "httpRequestId": "fdb65274-6495-4a0e-945c-f2898d848850"
        },
        "item": {
          "id": "f83ababe-7141-4fd7-ad43-0800523e3133",
          "name": "Extract timestamp unit",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "unit"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "unit",
                  "value": "day"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aeef2e27-c75f-4d9c-a45a-44f66e72e74f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query unit is valid\", function () {",
                  "    pm.response.to.have.jsonBody('unit', 1);",
                  "});"
                ],
                "_lastExecutionId": "b2d1ab98-a6ed-48e0-ac6a-85e6d645303d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "unit"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "unit",
                "value": "day"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "07ad5edf-1ae9-4e13-bf32-15ee3858cb61",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AGozMHFtLfbFB_xhhuaZSLiHZdTiSTFRI.slk5kX7U12K8Iip8Sp43kh4ovn%2BB9g8g4%2FFBr3XgX9Q",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "aca62919-8a18-4700-a7e3-8b363e045d86",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:21 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "10"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"a-Tq86/bt7ViOhfxXgqKCTL6sompk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              117,
              110,
              105,
              116,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 120,
          "responseSize": 10
        },
        "id": "f83ababe-7141-4fd7-ad43-0800523e3133",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say whether request query unit is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f0bb3b5d-470a-444b-9aaa-f3ed939415a6",
          "length": 35,
          "cycles": 3,
          "position": 26,
          "iteration": 1,
          "httpRequestId": "8a49e166-fc23-47d7-ace8-fe0b0bfa1099"
        },
        "item": {
          "id": "9704752a-bdc9-4cf3-95f5-41f8d640556b",
          "name": "Time addition",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "add"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "years",
                  "value": "100"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c273fbfd-6b01-4d9d-af5b-2a15775203cf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the added years\", function () {",
                  "    pm.response.to.have.jsonBody('sum', 'Sat Oct 10 2116 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "243679b7-9064-4a32-96fa-79b47411e320"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "add"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "years",
                "value": "100"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "344a9f88-ec38-4e5b-8b3f-826a645ab582",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AGozMHFtLfbFB_xhhuaZSLiHZdTiSTFRI.slk5kX7U12K8Iip8Sp43kh4ovn%2BB9g8g4%2FFBr3XgX9Q",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "b9036287-b5d5-4eec-b449-a128cf8723e4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:22 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "43"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"2b-NI+s6dhyoOC4+MmZW5sCBgzsnMw\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AcZ2dWJ_6s6cWABy9iZdL__4nbUG73hkB.R8hNiTbprTzsv2LmLBlsqC5ui2K%2BGeX8e4bfJq6DqJI; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              109,
              34,
              58,
              34,
              83,
              97,
              116,
              32,
              79,
              99,
              116,
              32,
              49,
              48,
              32,
              50,
              49,
              49,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 120,
          "responseSize": 43
        },
        "id": "9704752a-bdc9-4cf3-95f5-41f8d640556b",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the added years",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "47c9e661-6fbd-438b-a714-49fba93b46c7",
          "length": 35,
          "cycles": 3,
          "position": 27,
          "iteration": 1,
          "httpRequestId": "c11ff7ce-b680-4726-8751-0d5e5eda98a7"
        },
        "item": {
          "id": "95a5016d-a032-41d2-8808-b7e1676f9831",
          "name": "Time subtraction",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "subtract"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "years",
                  "value": "50"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f16c1cc3-5a11-4939-85c2-86d6566b9547",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the subtracted years\", function () {",
                  "    pm.response.to.have.jsonBody('difference', 'Mon Oct 10 1966 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "70b6f3bf-f0fc-404d-a5df-90e99bb6921b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "subtract"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "years",
                "value": "50"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "25107294-487e-446b-83ba-e6d5cdabe44c",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AcZ2dWJ_6s6cWABy9iZdL__4nbUG73hkB.R8hNiTbprTzsv2LmLBlsqC5ui2K%2BGeX8e4bfJq6DqJI",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "66e95713-2ec6-48e0-b498-9d378d26a052",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:22 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "50"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"32-PND5PkDaCj18RICDpWcSi9vkakY\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AbdOMW1siptWLGq5MFJ4zBBwUTRCxDJFT.ckXpl9eRy6qbuVotd38HzrLbi0c83yo0YAJT5I4optk; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              34,
              58,
              34,
              77,
              111,
              110,
              32,
              79,
              99,
              116,
              32,
              49,
              48,
              32,
              49,
              57,
              54,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 108,
          "responseSize": 50
        },
        "id": "95a5016d-a032-41d2-8808-b7e1676f9831",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the subtracted years",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "27b8edeb-7779-4475-909c-523ece7b21c9",
          "length": 35,
          "cycles": 3,
          "position": 28,
          "iteration": 1,
          "httpRequestId": "0488b931-e7f2-4da6-88ad-5bb9c68a41de"
        },
        "item": {
          "id": "7028b100-a994-4204-bcc7-cd9f69366299",
          "name": "Start of time",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "start"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "unit",
                  "value": "month"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7972aa90-336e-47ac-a922-c8d8588d858e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the beginning of month\", function () {",
                  "    pm.response.to.have.jsonBody('start', 'Sat Oct 01 2016 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "c5330198-ebf3-4b45-959f-3e87f4907669"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "start"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "unit",
                "value": "month"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4fbd2866-9d74-4077-a574-53ecf0f79593",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AbdOMW1siptWLGq5MFJ4zBBwUTRCxDJFT.ckXpl9eRy6qbuVotd38HzrLbi0c83yo0YAJT5I4optk",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "b132cd8a-9585-427a-a0a7-c8cecf439df4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:22 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "45"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"2d-+DRNEGBPVvAa16PUC5AjHCOmq/0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AKC2imIiDvCK2RHWBuMP2FX0wJNp5qSU1.YiCRX7GTCCa8MTvK7Oy2XBoYnxl2luGS6zxkFqNS1qs; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              83,
              97,
              116,
              32,
              79,
              99,
              116,
              32,
              48,
              49,
              32,
              50,
              48,
              49,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 111,
          "responseSize": 45
        },
        "id": "7028b100-a994-4204-bcc7-cd9f69366299",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the beginning of month",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a75180f9-3871-4028-a14a-6eab555eddc0",
          "length": 35,
          "cycles": 3,
          "position": 29,
          "iteration": 1,
          "httpRequestId": "e731db00-180f-4339-aee7-d18fe6a0c6fe"
        },
        "item": {
          "id": "90f71a58-4559-405f-b6f8-40ee051cf6dd",
          "name": "Object representation",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "object"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "055a57c1-fc26-43fb-ac02-0524487d1b7a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the date components\", function () {",
                  "    pm.expect(pm.response.json()).to.eql({",
                  "        \"years\": 2016,",
                  "        \"months\": 9,",
                  "        \"date\": 10,",
                  "        ",
                  "        \"hours\": 0,",
                  "        \"minutes\": 0,",
                  "        \"seconds\": 0,",
                  "        \"milliseconds\": 0",
                  "    });",
                  "});"
                ],
                "_lastExecutionId": "e83a9a44-d35b-475e-ad2f-8535ea667752"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "object"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1bdff91c-8255-46e7-abe3-2ee225723806",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AKC2imIiDvCK2RHWBuMP2FX0wJNp5qSU1.YiCRX7GTCCa8MTvK7Oy2XBoYnxl2luGS6zxkFqNS1qs",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "3c0c274a-1cc9-4a48-8bf2-7291cfaae663",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:22 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "86"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"56-sbJq4ZMpg65IM+Xxb5GSE9GGvQc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AtB6g6JEhLMqOyo8hfPuolfK33POY_7Ab.fUhwjmX9rY%2FCzDgOhwMaix7qTPZgSJlDookxwcvUWAY; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              121,
              101,
              97,
              114,
              115,
              34,
              58,
              50,
              48,
              49,
              54,
              44,
              34,
              109,
              111,
              110,
              116,
              104,
              115,
              34,
              58,
              57,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              104,
              111,
              117,
              114,
              115,
              34,
              58,
              48,
              44,
              34,
              109,
              105,
              110,
              117,
              116,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              115,
              101,
              99,
              111,
              110,
              100,
              115,
              34,
              58,
              48,
              44,
              34,
              109,
              105,
              108,
              108,
              105,
              115,
              101,
              99,
              111,
              110,
              100,
              115,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 117,
          "responseSize": 86
        },
        "id": "90f71a58-4559-405f-b6f8-40ee051cf6dd",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the date components",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "de496463-1d67-49f6-a210-c1b0dd822825",
          "length": 35,
          "cycles": 3,
          "position": 30,
          "iteration": 1,
          "httpRequestId": "87457c76-f36b-44f3-9929-9e9ef93aaded"
        },
        "item": {
          "id": "1a17bac8-0451-4c5c-86b4-c2ecfdda9734",
          "name": "Before comparisons",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "before"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "target",
                  "value": "2017-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2917b24-d2a3-4927-bb2b-22e6181d3933",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is before target\", function () {",
                  "    pm.response.to.have.jsonBody('before', true);",
                  "});"
                ],
                "_lastExecutionId": "5f9e34ad-2309-4527-bade-144103846aff"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "before"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "target",
                "value": "2017-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "88c81bd0-ad6c-4fa3-b64a-8fda94bef00b",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AtB6g6JEhLMqOyo8hfPuolfK33POY_7Ab.fUhwjmX9rY%2FCzDgOhwMaix7qTPZgSJlDookxwcvUWAY",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "6ebe246d-a6c8-43b3-949f-cb12aaa5fded",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:22 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"f-pYji1tDlxSR6vlOQLH4azAZGkpo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AUlX9j4ZW8UCPPa_PAWEK3Jr6VHEKo8wY.bN7V741YwZRBChZBXM9TDGh6y0oEGM5i7G7u57mAnt8; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              98,
              101,
              102,
              111,
              114,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 125,
          "responseSize": 15
        },
        "id": "1a17bac8-0451-4c5c-86b4-c2ecfdda9734",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is before target",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d48b8459-9ce5-4e4e-886c-a25178328131",
          "length": 35,
          "cycles": 3,
          "position": 31,
          "iteration": 1,
          "httpRequestId": "04ed8fa3-4c8f-43ed-8db0-b586ac37ef37"
        },
        "item": {
          "id": "5a54c7e6-3ee8-405d-9e31-bc43e60b86bb",
          "name": "After comparisons",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "after"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "target",
                  "value": "2017-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5549751f-5ef1-42fa-8847-f9bc6e2b434f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is not after target\", function () {",
                  "    pm.response.to.have.jsonBody('after', false);",
                  "});"
                ],
                "_lastExecutionId": "ab81a676-0e2c-4d54-9f80-f5ea8552b49b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "after"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "target",
                "value": "2017-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4bb34747-9886-43c9-90de-60d726e972f7",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AUlX9j4ZW8UCPPa_PAWEK3Jr6VHEKo8wY.bN7V741YwZRBChZBXM9TDGh6y0oEGM5i7G7u57mAnt8",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "7a7f4345-73fb-4559-95ce-dd56947c407d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"f-1yo7D9f7qelpng2aZyy3Vk9UAA8\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AncMyLJOBhtdlI6LNvehQqAHmWNduCX19.SnQi1HbdwwDyl95MKC4mcA8XE1iUc4IopDWpwAd4p%2BA; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              102,
              116,
              101,
              114,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 125,
          "responseSize": 15
        },
        "id": "5a54c7e6-3ee8-405d-9e31-bc43e60b86bb",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is not after target",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ffce9cb9-dba0-4a4a-92a3-9e9ac0940db6",
          "length": 35,
          "cycles": 3,
          "position": 32,
          "iteration": 1,
          "httpRequestId": "d8ddf3bb-5f8d-45db-b603-fa9b12428a39"
        },
        "item": {
          "id": "0356ee05-cf82-490d-b6ec-1b62df3bff47",
          "name": "Between timestamps",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "between"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "start",
                  "value": "2017-10-10"
                },
                {
                  "key": "end",
                  "value": "2019-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5106a113-8ee9-47f1-b69c-eea0fffe8f2b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is not between start and end\", function () {",
                  "    pm.response.to.have.jsonBody('between', false);",
                  "});"
                ],
                "_lastExecutionId": "66c301fc-937b-4d9f-bc76-c1d0ee83b9fa"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "between"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "start",
                "value": "2017-10-10"
              },
              {
                "key": "end",
                "value": "2019-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0e4d8d12-1622-481b-966d-c7b3f2b8bf7d",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AncMyLJOBhtdlI6LNvehQqAHmWNduCX19.SnQi1HbdwwDyl95MKC4mcA8XE1iUc4IopDWpwAd4p%2BA",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "134971c6-2dde-4c2a-9087-34c38ec87d1e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "17"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"11-Q5jSDN8J9UWiS3bMKjaPflikNDU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ASH_2AJmtGCj32OAhP6iwWige28fUcZT2.3wLtyCP9A4Ph5eJPGKbvWZSbIcvQGwzXbglLKLp7CGo; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              98,
              101,
              116,
              119,
              101,
              101,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 117,
          "responseSize": 17
        },
        "id": "0356ee05-cf82-490d-b6ec-1b62df3bff47",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is not between start and end",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "da0957df-1bb6-44ae-8e8a-5171b1ad4f38",
          "length": 35,
          "cycles": 3,
          "position": 33,
          "iteration": 1,
          "httpRequestId": "22bcd411-f6fa-4cc2-844e-a8302e5034dd"
        },
        "item": {
          "id": "e4ff274f-e54a-4793-b54a-0dd7011f17b3",
          "name": "Leap year check",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "leap"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "99d38ceb-e45e-45f6-a41c-5501e2397b1a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is within leap year\", function () {",
                  "    pm.response.to.have.jsonBody('leap', true);",
                  "});"
                ],
                "_lastExecutionId": "5f7a2205-a3b7-4876-a883-93000b2be151"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "leap"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f5603082-434e-4e2c-9f1f-a323620664f0",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ASH_2AJmtGCj32OAhP6iwWige28fUcZT2.3wLtyCP9A4Ph5eJPGKbvWZSbIcvQGwzXbglLKLp7CGo",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "80a07bec-4cb7-4c08-943c-96da6f22b7f6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:23 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "13"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"d-/cHbrs54NBQWs+BmYLn36yaGw/0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AKbIRReHvtsnkLY4BLgY8-ub5bZ1yyLsL.aLybq20MKCCZDQTmVqJn62aBx1j7WGL%2FDypIchrHqE0; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              108,
              101,
              97,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 112,
          "responseSize": 13
        },
        "id": "e4ff274f-e54a-4793-b54a-0dd7011f17b3",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is within leap year",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "34b1a78b-f337-440c-b7c6-03af0d88a6e4",
          "length": 35,
          "cycles": 3,
          "position": 34,
          "iteration": 1,
          "httpRequestId": "ffddd114-03ff-4a40-a1e7-ea76f62e23b0"
        },
        "item": {
          "id": "715da1e6-8db6-448b-b9c9-b09e68c0f355",
          "name": "DigestAuth Request",
          "request": {
            "description": {
              "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "digest-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d839093-6eb1-4377-81f9-cf60d5a4e9d2",
                "type": "text/javascript",
                "exec": [
                  "tests[\"response code is 401\"] = responseCode.code === 401;",
                  "tests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));",
                  "",
                  "var authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),",
                  "    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,",
                  "    realmEnd = authenticateHeader.indexOf('\"',realmStart),",
                  "    realm = authenticateHeader.slice(realmStart,realmEnd),",
                  "    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,",
                  "    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),",
                  "    nonce = authenticateHeader.slice(nonceStart,nonceEnd);",
                  "    ",
                  "postman.setGlobalVariable('echo_digest_realm', realm);",
                  "postman.setGlobalVariable('echo_digest_nonce', nonce);"
                ],
                "_lastExecutionId": "f2a73ac2-a573-40ca-88a8-196f9bbc2a38"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "digest-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8486f336-4bdc-4f29-933e-e9a1a29b4219",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AKbIRReHvtsnkLY4BLgY8-ub5bZ1yyLsL.aLybq20MKCCZDQTmVqJn62aBx1j7WGL%2FDypIchrHqE0",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "387b901f-a464-4722-a049-f78e556dc408",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:23 GMT"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "WWW-Authenticate",
              "value": "Digest realm=\"Users\", nonce=\"Xa9y8yaXgNHvJL03miWkUzHgnZXkzgsO\", qop=\"auth\""
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AvCN0bYIjhYqxslKPjRPOxJjVR7ro7Dh_.6jeoVuaMTz9UvMGz6FYy7Y%2BX036JbZFmzBe0XqcFj28; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 110,
          "responseSize": 12
        },
        "id": "715da1e6-8db6-448b-b9c9-b09e68c0f355",
        "assertions": [
          {
            "assertion": "response code is 401",
            "skipped": false
          },
          {
            "assertion": "response has WWW-Authenticate header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "86c605b1-e5f2-4cde-9b55-8410035318f2",
          "length": 35,
          "cycles": 3,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "108c3f2a-8420-4d84-8efc-571d3917a4f5"
        },
        "item": {
          "id": "fd22acbd-cb82-49c2-82de-f688345b179f",
          "name": "GET Request",
          "request": {
            "description": {
              "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "get"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a138aa63-f066-4c9d-9675-b6cffc01c10a",
              "name": "GET Request Woops",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "get"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "foo1",
                      "value": "bar1"
                    },
                    {
                      "key": "foo2",
                      "value": "bar2"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "key": "Date",
                  "value": "Tue, 11 Jun 2019 10:43:13 GMT"
                },
                {
                  "key": "ETag",
                  "value": "W/\"161-aLhNcsGArlgLSKbxPqfBW3viHPI\""
                },
                {
                  "key": "Server",
                  "value": "nginx"
                },
                {
                  "key": "set-cookie",
                  "value": "sails.sid=s%3AGz-wblZgXE8FCDq7aJpx_tUgZUcG3Nsw.LdNEN8L0C7nGWkvGLwvdw6R2s6Syjr%2FzkvyevA8qR0c; Path=/; HttpOnly"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "Content-Length",
                  "value": "249"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "body": "{\n    \"args\": {\n        \"foo1\": \"bar1\",\n        \"foo2\": \"bar2\"\n    },\n    \"headers\": {\n        \"x-forwarded-proto\": \"https\",\n        \"host\": \"postman-echo.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate\",\n        \"cache-control\": \"no-cache\",\n        \"postman-token\": \"5c27cd7d-6b16-4e5a-a0ef-191c9a3a275f\",\n        \"user-agent\": \"PostmanRuntime/7.6.1\",\n        \"x-forwarded-port\": \"443\"\n    },\n    \"url\": \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e9eff07-1580-48cb-993d-e9a68150f888",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with request queries\", function () {",
                  "    pm.response.to.have.jsonBody('args.foo1', 'bar1')",
                  "        .and.have.jsonBody('args.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "5065259d-a475-4ffe-8414-de55cf5710c3"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "get"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d54e682b-fafd-445c-bd2c-40e0661c80a5",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AvCN0bYIjhYqxslKPjRPOxJjVR7ro7Dh_.6jeoVuaMTz9UvMGz6FYy7Y%2BX036JbZFmzBe0XqcFj28",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "84d31255-5216-4778-b155-41c93d5ee3ed",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:24 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "524"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"20c-zUTL8vgmlJikUwUhyoOkSUxldZY\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A2LWlWNUnUmF8IzyvmPDwif5Uaa4MkPxq.5MAOV4vIIQ4ajQ2eSguqGSZN%2FLS%2Fb9SOAvxWwe0%2FjFs; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              99,
              45,
              49,
              101,
              97,
              99,
              98,
              48,
              97,
              57,
              54,
              49,
              53,
              102,
              99,
              49,
              101,
              56,
              48,
              56,
              48,
              52,
              57,
              55,
              50,
              53,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              100,
              53,
              52,
              101,
              54,
              56,
              50,
              98,
              45,
              102,
              97,
              102,
              100,
              45,
              52,
              52,
              53,
              99,
              45,
              98,
              100,
              50,
              99,
              45,
              52,
              48,
              101,
              48,
              54,
              54,
              49,
              99,
              56,
              48,
              97,
              53,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              118,
              67,
              78,
              48,
              98,
              89,
              73,
              106,
              104,
              89,
              113,
              120,
              115,
              108,
              75,
              80,
              106,
              82,
              80,
              79,
              120,
              74,
              106,
              86,
              82,
              55,
              114,
              111,
              55,
              68,
              104,
              95,
              46,
              54,
              106,
              101,
              111,
              86,
              117,
              97,
              77,
              84,
              122,
              57,
              85,
              118,
              77,
              71,
              122,
              54,
              70,
              89,
              121,
              55,
              89,
              37,
              50,
              66,
              88,
              48,
              51,
              54,
              74,
              98,
              90,
              70,
              109,
              122,
              66,
              101,
              48,
              88,
              113,
              99,
              70,
              106,
              50,
              56,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              103,
              101,
              116,
              63,
              102,
              111,
              111,
              49,
              61,
              98,
              97,
              114,
              49,
              38,
              102,
              111,
              111,
              50,
              61,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 129,
          "responseSize": 524
        },
        "id": "fd22acbd-cb82-49c2-82de-f688345b179f",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with request queries",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a6e43b94-f53d-40be-a42b-5410695c7b11",
          "length": 35,
          "cycles": 3,
          "position": 1,
          "iteration": 2,
          "httpRequestId": "bb2c7394-b705-4cdc-865d-e1ec1b76bbb5"
        },
        "item": {
          "id": "eafd3e2e-2568-4847-a900-3d9e3b5fd395",
          "name": "POST Raw Text",
          "request": {
            "description": {
              "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "post"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "338be7b5-bc6b-42b3-b7f0-cb760d9b0648",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with request body\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "8c098e16-c6f8-4881-b939-81e419371545"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "post"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0a07f939-e2af-44c8-880c-ecf2c412f54f",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A2LWlWNUnUmF8IzyvmPDwif5Uaa4MkPxq.5MAOV4vIIQ4ajQ2eSguqGSZN%2FLS%2Fb9SOAvxWwe0%2FjFs",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "253e268a-e841-455f-9d6e-72d8d872d5c0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:24 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "633"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"279-m60oEkv/78fhLzwdCP4vuHnyLRo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AbwDe69eyTJ9tK7CYIoEhQYaP_GhvHmOr.wAtUBSfKPJjV5tgRrMYaZ2Bt41iaAuGUOSjzgNXQUPQ; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              99,
              45,
              55,
              52,
              51,
              51,
              100,
              55,
              101,
              101,
              52,
              100,
              57,
              51,
              48,
              53,
              101,
              49,
              51,
              54,
              100,
              100,
              101,
              50,
              52,
              57,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              48,
              97,
              48,
              55,
              102,
              57,
              51,
              57,
              45,
              101,
              50,
              97,
              102,
              45,
              52,
              52,
              99,
              56,
              45,
              56,
              56,
              48,
              99,
              45,
              101,
              99,
              102,
              50,
              99,
              52,
              49,
              50,
              102,
              53,
              52,
              102,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              50,
              76,
              87,
              108,
              87,
              78,
              85,
              110,
              85,
              109,
              70,
              56,
              73,
              122,
              121,
              118,
              109,
              80,
              68,
              119,
              105,
              102,
              53,
              85,
              97,
              97,
              52,
              77,
              107,
              80,
              120,
              113,
              46,
              53,
              77,
              65,
              79,
              86,
              52,
              118,
              73,
              73,
              81,
              52,
              97,
              106,
              81,
              50,
              101,
              83,
              103,
              117,
              113,
              71,
              83,
              90,
              78,
              37,
              50,
              70,
              76,
              83,
              37,
              50,
              70,
              98,
              57,
              83,
              79,
              65,
              118,
              120,
              87,
              119,
              101,
              48,
              37,
              50,
              70,
              106,
              70,
              115,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 132,
          "responseSize": 633
        },
        "id": "eafd3e2e-2568-4847-a900-3d9e3b5fd395",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with request body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b7a97a3c-d428-432e-95fc-83700724a327",
          "length": 35,
          "cycles": 3,
          "position": 2,
          "iteration": 2,
          "httpRequestId": "393431fe-ae7a-46f8-b22f-3c7d3628e634"
        },
        "item": {
          "id": "0c497979-1113-4c8a-9374-76b5c6c645e2",
          "name": "POST Form Data",
          "request": {
            "description": {
              "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "post"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0c85547c-6dcf-49e7-9ddf-2c76649633dd",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('form.foo1', 'bar1')",
                  "        .and.have.jsonBody('form.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "e68d56c2-7137-446d-a661-f70d629e89e9"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "post"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7af3953b-0e70-480a-828e-5b1283e6a823",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 19,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AbwDe69eyTJ9tK7CYIoEhQYaP_GhvHmOr.wAtUBSfKPJjV5tgRrMYaZ2Bt41iaAuGUOSjzgNXQUPQ",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ]
          }
        },
        "response": {
          "id": "01d0ac08-5097-4a44-bbb8-fadf905b79cf",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:24 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "644"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"284-LswE2u7lRd8Pd3lRzK14IZOaegY\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AcHeKQbxgDArRPr_3rNXPWi_SXRAnXT7i.8OjvKJZs7KDTVeM1CkgSDt8gB%2B5GR4hk98uF%2BlOVJJw; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              99,
              45,
              49,
              49,
              55,
              55,
              56,
              52,
              99,
              101,
              53,
              101,
              101,
              100,
              55,
              52,
              97,
              97,
              51,
              51,
              51,
              48,
              102,
              55,
              97,
              98,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              49,
              57,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              55,
              97,
              102,
              51,
              57,
              53,
              51,
              98,
              45,
              48,
              101,
              55,
              48,
              45,
              52,
              56,
              48,
              97,
              45,
              56,
              50,
              56,
              101,
              45,
              53,
              98,
              49,
              50,
              56,
              51,
              101,
              54,
              97,
              56,
              50,
              51,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              120,
              45,
              119,
              119,
              119,
              45,
              102,
              111,
              114,
              109,
              45,
              117,
              114,
              108,
              101,
              110,
              99,
              111,
              100,
              101,
              100,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              98,
              119,
              68,
              101,
              54,
              57,
              101,
              121,
              84,
              74,
              57,
              116,
              75,
              55,
              67,
              89,
              73,
              111,
              69,
              104,
              81,
              89,
              97,
              80,
              95,
              71,
              104,
              118,
              72,
              109,
              79,
              114,
              46,
              119,
              65,
              116,
              85,
              66,
              83,
              102,
              75,
              80,
              74,
              106,
              86,
              53,
              116,
              103,
              82,
              114,
              77,
              89,
              97,
              90,
              50,
              66,
              116,
              52,
              49,
              105,
              97,
              65,
              117,
              71,
              85,
              79,
              83,
              106,
              122,
              103,
              78,
              88,
              81,
              85,
              80,
              81,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 110,
          "responseSize": 644
        },
        "id": "0c497979-1113-4c8a-9374-76b5c6c645e2",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f7621205-275c-4d5f-811e-c6e645331cdb",
          "length": 35,
          "cycles": 3,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "e7d29d98-7573-4428-a1c1-93ce63e58bbf"
        },
        "item": {
          "id": "5a239488-6a6a-470c-b7ff-eaa84a7ffe58",
          "name": "PUT Request",
          "request": {
            "description": {
              "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "put"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e5a1c629-4531-4a25-8f2d-c57e8b85c1a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "ef7e8413-11f6-4f00-970a-53b37c68e30b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "put"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cafaf736-ff88-475e-88fa-ddb3ad6c6a47",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AcHeKQbxgDArRPr_3rNXPWi_SXRAnXT7i.8OjvKJZs7KDTVeM1CkgSDt8gB%2B5GR4hk98uF%2BlOVJJw",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "ecaae458-1b69-474f-8848-5d5b5f5732a4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:24 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "630"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"276-n3KxkRS7IWN2TzH6RM9Lnft46es\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              99,
              45,
              52,
              100,
              100,
              55,
              101,
              98,
              102,
              49,
              52,
              100,
              48,
              51,
              50,
              52,
              99,
              98,
              51,
              56,
              99,
              100,
              98,
              97,
              48,
              98,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              99,
              97,
              102,
              97,
              102,
              55,
              51,
              54,
              45,
              102,
              102,
              56,
              56,
              45,
              52,
              55,
              53,
              101,
              45,
              56,
              56,
              102,
              97,
              45,
              100,
              100,
              98,
              51,
              97,
              100,
              54,
              99,
              54,
              97,
              52,
              55,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              99,
              72,
              101,
              75,
              81,
              98,
              120,
              103,
              68,
              65,
              114,
              82,
              80,
              114,
              95,
              51,
              114,
              78,
              88,
              80,
              87,
              105,
              95,
              83,
              88,
              82,
              65,
              110,
              88,
              84,
              55,
              105,
              46,
              56,
              79,
              106,
              118,
              75,
              74,
              90,
              115,
              55,
              75,
              68,
              84,
              86,
              101,
              77,
              49,
              67,
              107,
              103,
              83,
              68,
              116,
              56,
              103,
              66,
              37,
              50,
              66,
              53,
              71,
              82,
              52,
              104,
              107,
              57,
              56,
              117,
              70,
              37,
              50,
              66,
              108,
              79,
              86,
              74,
              74,
              119,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              117,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 111,
          "responseSize": 630
        },
        "id": "5a239488-6a6a-470c-b7ff-eaa84a7ffe58",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "406cabfd-ae40-4dce-af35-c9ce9bdf09f2",
          "length": 35,
          "cycles": 3,
          "position": 4,
          "iteration": 2,
          "httpRequestId": "4b3ae9b7-707e-40ca-9fa5-e8d84a273fed"
        },
        "item": {
          "id": "3b8f1e32-56c6-41b5-9981-7d99b09cd709",
          "name": "PATCH Request",
          "request": {
            "description": {
              "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "patch"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "63e159bf-ca02-43f6-a8d3-af615b4144bf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "c1d7ecbc-a426-42cb-993c-d84a41771f7d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "patch"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d9b9ce0a-f7cc-4f74-89b3-df938c8671fd",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AcHeKQbxgDArRPr_3rNXPWi_SXRAnXT7i.8OjvKJZs7KDTVeM1CkgSDt8gB%2B5GR4hk98uF%2BlOVJJw",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "89315699-b780-440e-a991-6780ac1d83ca",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:24 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "632"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"278-AeUEo7miDE0EzHxkPvE40QFEVWA\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              99,
              45,
              53,
              55,
              49,
              51,
              53,
              102,
              53,
              49,
              53,
              99,
              51,
              53,
              56,
              54,
              49,
              57,
              52,
              51,
              52,
              55,
              50,
              53,
              100,
              50,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              100,
              57,
              98,
              57,
              99,
              101,
              48,
              97,
              45,
              102,
              55,
              99,
              99,
              45,
              52,
              102,
              55,
              52,
              45,
              56,
              57,
              98,
              51,
              45,
              100,
              102,
              57,
              51,
              56,
              99,
              56,
              54,
              55,
              49,
              102,
              100,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              99,
              72,
              101,
              75,
              81,
              98,
              120,
              103,
              68,
              65,
              114,
              82,
              80,
              114,
              95,
              51,
              114,
              78,
              88,
              80,
              87,
              105,
              95,
              83,
              88,
              82,
              65,
              110,
              88,
              84,
              55,
              105,
              46,
              56,
              79,
              106,
              118,
              75,
              74,
              90,
              115,
              55,
              75,
              68,
              84,
              86,
              101,
              77,
              49,
              67,
              107,
              103,
              83,
              68,
              116,
              56,
              103,
              66,
              37,
              50,
              66,
              53,
              71,
              82,
              52,
              104,
              107,
              57,
              56,
              117,
              70,
              37,
              50,
              66,
              108,
              79,
              86,
              74,
              74,
              119,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              97,
              116,
              99,
              104,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 110,
          "responseSize": 632
        },
        "id": "3b8f1e32-56c6-41b5-9981-7d99b09cd709",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0f8e1206-eeb4-4f24-b057-7a76830bab37",
          "length": 35,
          "cycles": 3,
          "position": 5,
          "iteration": 2,
          "httpRequestId": "e59edfab-441d-4200-af81-7d64a7a94f65"
        },
        "item": {
          "id": "04547aaf-db3d-4c72-b993-c35e86a03c49",
          "name": "DELETE Request",
          "request": {
            "description": {
              "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "delete"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f85abfd-9d73-45cc-8433-9af7749fc762",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "e524f0fe-c2b8-4732-a4fe-432df5177234"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "delete"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "825d62fd-6a19-47a6-887f-1fe7c80426f7",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 58,
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AcHeKQbxgDArRPr_3rNXPWi_SXRAnXT7i.8OjvKJZs7KDTVeM1CkgSDt8gB%2B5GR4hk98uF%2BlOVJJw",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "89e71c7a-bdc6-4f1b-b6dd-0c58b23ef9f3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:25 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "633"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"279-JpnqiPQ3mbfjwxt3T3IjCkxpe2M\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              100,
              45,
              52,
              57,
              56,
              56,
              50,
              101,
              51,
              50,
              48,
              101,
              98,
              100,
              99,
              102,
              51,
              50,
              48,
              57,
              99,
              54,
              48,
              97,
              52,
              51,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              56,
              50,
              53,
              100,
              54,
              50,
              102,
              100,
              45,
              54,
              97,
              49,
              57,
              45,
              52,
              55,
              97,
              54,
              45,
              56,
              56,
              55,
              102,
              45,
              49,
              102,
              101,
              55,
              99,
              56,
              48,
              52,
              50,
              54,
              102,
              55,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              99,
              72,
              101,
              75,
              81,
              98,
              120,
              103,
              68,
              65,
              114,
              82,
              80,
              114,
              95,
              51,
              114,
              78,
              88,
              80,
              87,
              105,
              95,
              83,
              88,
              82,
              65,
              110,
              88,
              84,
              55,
              105,
              46,
              56,
              79,
              106,
              118,
              75,
              74,
              90,
              115,
              55,
              75,
              68,
              84,
              86,
              101,
              77,
              49,
              67,
              107,
              103,
              83,
              68,
              116,
              56,
              103,
              66,
              37,
              50,
              66,
              53,
              71,
              82,
              52,
              104,
              107,
              57,
              56,
              117,
              70,
              37,
              50,
              66,
              108,
              79,
              86,
              74,
              74,
              119,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              100,
              101,
              108,
              101,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 118,
          "responseSize": 633
        },
        "id": "04547aaf-db3d-4c72-b993-c35e86a03c49",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json with form data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ee1bd407-7bc5-4496-bbad-076c0218887f",
          "length": 35,
          "cycles": 3,
          "position": 6,
          "iteration": 2,
          "httpRequestId": "e467cfb8-3db9-465a-b010-36e05b5f61d6"
        },
        "item": {
          "id": "29eb65cd-9865-48f1-bc09-e523e0c04014",
          "name": "Request Headers",
          "request": {
            "description": {
              "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "my-sample-header",
                "value": "Lorem ipsum dolor sit amet"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ebe7ef85-c80e-460e-aa50-c3b03457180d",
              "name": "my-sample-header",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "my-sample-header",
                    "value": "Lorem ipsum dolor sit amet"
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "342"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\n    \"headers\": {\n        \"host\": \"echo.getpostman.com\",\n        \"accept\": \"*/*\",\n        \"accept-encoding\": \"gzip, deflate, sdch\",\n        \"accept-language\": \"en-US,en;q=0.8\",\n        \"cache-control\": \"no-cache\",\n        \"my-sample-header\": \"Lorem ipsum dolor sit amet\",\n        \"postman-token\": \"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\n        \"x-forwarded-port\": \"443\",\n        \"x-forwarded-proto\": \"https\"\n    }\n}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0068cecc-ad18-4015-bdae-28ac4a194f1c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// we check to ensire that the headers we sent as request is returned as part of",
                  "// the response body. if you change the request headers, make sure to add them",
                  "// to the tests here",
                  "pm.test(\"sample request header should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                  "});"
                ],
                "_lastExecutionId": "00795d41-8dc1-46b6-aeae-b96f5dd11d31"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "my-sample-header",
              "value": "Lorem ipsum dolor sit amet"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c3bf0f5e-1dd9-443b-9383-2dcc627968e4",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AcHeKQbxgDArRPr_3rNXPWi_SXRAnXT7i.8OjvKJZs7KDTVeM1CkgSDt8gB%2B5GR4hk98uF%2BlOVJJw",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "36b84445-9fe6-4123-9d2d-3f16b59b74be",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:25 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "480"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1e0-KmrwfxW6jzXbqZPYat5uKEAdLQs\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A0bAmk4ibV4a6qE7y9zBxF8sbrVB5ep1T.iYG9rH%2BGRu%2Be1txa%2BWTPU69yzdcg0qVVvy8sONTpYGg; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              100,
              45,
              50,
              56,
              100,
              56,
              49,
              101,
              53,
              98,
              54,
              99,
              101,
              57,
              49,
              49,
              48,
              54,
              55,
              100,
              102,
              56,
              57,
              49,
              102,
              102,
              34,
              44,
              34,
              109,
              121,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              99,
              51,
              98,
              102,
              48,
              102,
              53,
              101,
              45,
              49,
              100,
              100,
              57,
              45,
              52,
              52,
              51,
              98,
              45,
              57,
              51,
              56,
              51,
              45,
              50,
              100,
              99,
              99,
              54,
              50,
              55,
              57,
              54,
              56,
              101,
              52,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              99,
              72,
              101,
              75,
              81,
              98,
              120,
              103,
              68,
              65,
              114,
              82,
              80,
              114,
              95,
              51,
              114,
              78,
              88,
              80,
              87,
              105,
              95,
              83,
              88,
              82,
              65,
              110,
              88,
              84,
              55,
              105,
              46,
              56,
              79,
              106,
              118,
              75,
              74,
              90,
              115,
              55,
              75,
              68,
              84,
              86,
              101,
              77,
              49,
              67,
              107,
              103,
              83,
              68,
              116,
              56,
              103,
              66,
              37,
              50,
              66,
              53,
              71,
              82,
              52,
              104,
              107,
              57,
              56,
              117,
              70,
              37,
              50,
              66,
              108,
              79,
              86,
              74,
              74,
              119,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 106,
          "responseSize": 480
        },
        "id": "29eb65cd-9865-48f1-bc09-e523e0c04014",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "sample request header should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "37719cb2-3043-40b5-968d-95e2d9d9d46c",
          "length": 35,
          "cycles": 3,
          "position": 7,
          "iteration": 2,
          "httpRequestId": "584593a4-54e7-4049-8469-ff33d706e194"
        },
        "item": {
          "id": "81325070-3889-4142-80bb-150f3b3d6984",
          "name": "Response Headers",
          "request": {
            "description": {
              "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "response-headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html"
              },
              "id": "432437d0-2906-4a43-9b64-c4790d5acc08",
              "name": "Response headers",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "response-headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "Content-Type",
                      "value": "text/html"
                    },
                    {
                      "key": "test",
                      "value": "response_headers"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "71"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "test",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "test",
                  "value": "response_headers"
                }
              ],
              "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "946fadce-0d6a-43ea-9978-e729f9c462aa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has the headers sent as part of request query\", function () {",
                  "    pm.response.to.have.header('foo1', 'bar1')",
                  "        .and.have.header('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test(\"sample request param should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                  "        .and.have.jsonBody('foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "ab79e159-81de-4dde-a345-9d7be8cfb6a2"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "response-headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "67b41f1c-f7c4-4cab-b022-ac6032de18ad",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A0bAmk4ibV4a6qE7y9zBxF8sbrVB5ep1T.iYG9rH%2BGRu%2Be1txa%2BWTPU69yzdcg0qVVvy8sONTpYGg",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "1e4bf3e8-3a4f-4dda-a909-a612d7d76611",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:25 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "foo1",
              "value": "bar1"
            },
            {
              "key": "foo2",
              "value": "bar2"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-PgOLWVqd2mMvcpNzTF0Cfy4hftg\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A0cUsW9nXNQN0Tpbxxxy3z-D8qoiC8tEx.jtzBTfHLqHrB0n5Zz6uDVRjW2KVWMTArXJVlQUaosUo; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 109,
          "responseSize": 29
        },
        "id": "81325070-3889-4142-80bb-150f3b3d6984",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has the headers sent as part of request query",
            "skipped": false
          },
          {
            "assertion": "sample request param should be returned in response body",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7fda9903-59ee-4fec-ad9f-4966cbc07fb2",
          "length": 35,
          "cycles": 3,
          "position": 8,
          "iteration": 2,
          "httpRequestId": "4fa4e7d5-eb0d-48a1-901d-01802b9d13a8"
        },
        "item": {
          "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
          "name": "Basic Auth",
          "request": {
            "description": {
              "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "basic-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                },
                {
                  "type": "string",
                  "value": "password",
                  "key": "password"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "showPassword"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "c3b6d719-8b10-45a2-a5ca-a0f6f2a7935c",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "basic-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "showPassword"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "42"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"authenticated\":true}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37d88aec-07c2-4ca1-be59-75ed726c4b9a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying 'authenticated'\", function () {",
                  "    pm.response.to.have.jsonBody('authenticated', true);",
                  "});"
                ],
                "_lastExecutionId": "b19df1c7-feb0-4f74-8b22-5c269184ca12"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "basic-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic cG9zdG1hbjpwYXNzd29yZA==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8add1649-c34e-4f7e-ba0e-1c50e22d3da7",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A0cUsW9nXNQN0Tpbxxxy3z-D8qoiC8tEx.jtzBTfHLqHrB0n5Zz6uDVRjW2KVWMTArXJVlQUaosUo",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              },
              {
                "type": "string",
                "value": "password",
                "key": "password"
              },
              {
                "type": "any",
                "key": "saveHelperData"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "showPassword"
              }
            ]
          }
        },
        "response": {
          "id": "3cd6d528-5abf-46b9-81d2-b267d383d6e9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:25 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "22"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"16-sJz8uwjdDv0wvm7//BYdNw8vMbU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AQQ3-f6bn2KqICY8h4YhIhpB5whXA4d6_.kgR6UQ6ZUuU4uUMSktSHkNWdHrmLnC2tfeGXNFT0n8w; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 108,
          "responseSize": 22
        },
        "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json saying 'authenticated'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f9d3d77e-8db8-47d5-8bd4-a6d4ef9e5701",
          "length": 35,
          "cycles": 3,
          "position": 9,
          "iteration": 2,
          "httpRequestId": "16f824a5-96bb-4b2f-ade6-f22e4ada75e6"
        },
        "item": {
          "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
          "name": "DigestAuth Success",
          "request": {
            "description": {
              "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "digest-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "digest",
              "digest": [
                {
                  "type": "string",
                  "value": "MD5",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                },
                {
                  "type": "string",
                  "value": "{{echo_digest_realm}}",
                  "key": "realm"
                },
                {
                  "type": "string",
                  "value": "password",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "{{echo_digest_nonce}}",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonceCount"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "clientNonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "opaque"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "qop"
                },
                {
                  "type": "any",
                  "key": "disableRetryRequest"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "bc874d05-7a57-49c4-90d8-80cfe34506e4",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "digest-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "digest",
                  "digest": [
                    {
                      "type": "string",
                      "value": "MD5",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_realm}}",
                      "key": "realm"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_nonce}}",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonceCount"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "clientNonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "opaque"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "qop"
                    },
                    {
                      "type": "any",
                      "key": "disableRetryRequest"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "42"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"authenticated\":true}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3035607-07e4-4a5d-a5e3-592c48b7460f",
                "type": "text/javascript",
                "exec": [
                  "tests[\"response code is 200\"] = responseCode.code === 200;",
                  "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                ],
                "_lastExecutionId": "745e5c52-f581-4a85-b30f-3199c3065730"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "digest-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"Xa9y8yaXgNHvJL03miWkUzHgnZXkzgsO\", uri=\"/digest-auth\", algorithm=\"MD5\", response=\"d0012339d512e9170350bc4f98b2a325\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f4c59b91-7140-4550-8073-1e1f4f9426a7",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AQQ3-f6bn2KqICY8h4YhIhpB5whXA4d6_.kgR6UQ6ZUuU4uUMSktSHkNWdHrmLnC2tfeGXNFT0n8w",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "digest",
            "digest": [
              {
                "type": "string",
                "value": "MD5",
                "key": "algorithm"
              },
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              },
              {
                "type": "string",
                "value": "Users",
                "key": "realm"
              },
              {
                "type": "string",
                "value": "password",
                "key": "password"
              },
              {
                "type": "string",
                "value": "Xa9y8yaXgNHvJL03miWkUzHgnZXkzgsO",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonceCount"
              },
              {
                "type": "string",
                "value": "",
                "key": "clientNonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "opaque"
              },
              {
                "type": "string",
                "value": "",
                "key": "qop"
              },
              {
                "type": "any",
                "key": "disableRetryRequest"
              }
            ]
          }
        },
        "response": {
          "id": "76cc339b-1b62-4dbf-874f-80caf34f4daa",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:25 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "22"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"16-sJz8uwjdDv0wvm7//BYdNw8vMbU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AiIp1fWhFCbwhxXx7YqF15fppiMSNqlhv.HdIqhBsrgBw1Sn8ztIWl6%2FsR%2BtWEZO%2BOt1VwKzt3ilU; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 116,
          "responseSize": 22
        },
        "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
        "assertions": [
          {
            "assertion": "response code is 200",
            "skipped": false
          },
          {
            "assertion": "body contains authenticated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8f24c1c3-65be-480e-b790-5cf7e5a59fce",
          "length": 35,
          "cycles": 3,
          "position": 10,
          "iteration": 2,
          "httpRequestId": "9679ad6e-1a30-42ff-a0ba-5313bc973d37"
        },
        "item": {
          "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
          "name": "Hawk Auth",
          "request": {
            "description": {
              "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "auth",
                "hawk"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "hawk",
              "hawk": [
                {
                  "type": "string",
                  "value": "dh37fgj492je",
                  "key": "authId"
                },
                {
                  "type": "string",
                  "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                  "key": "authKey"
                },
                {
                  "type": "string",
                  "value": "sha256",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "user"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "string",
                  "value": "RZKGNz",
                  "key": "nonce"
                },
                {
                  "type": "any",
                  "key": "extraData"
                },
                {
                  "type": "any",
                  "key": "appId"
                },
                {
                  "type": "any",
                  "key": "delegation"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "26a84d63-c2e7-420a-8582-76d40716f355",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Server-Authorization",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server-Authorization",
                  "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "auth",
              "hawk"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Hawk id=\"dh37fgj492je\", ts=\"1617795326\", nonce=\"RZKGNz\", mac=\"TjuyiYrnru2fnXJ9C43X1oCocPreFwC7xCgY+QZdbPU=\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2946844c-091a-474e-9a32-3b4b0c3056f8",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AiIp1fWhFCbwhxXx7YqF15fppiMSNqlhv.HdIqhBsrgBw1Sn8ztIWl6%2FsR%2BtWEZO%2BOt1VwKzt3ilU",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "hawk",
            "hawk": [
              {
                "type": "string",
                "value": "dh37fgj492je",
                "key": "authId"
              },
              {
                "type": "string",
                "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                "key": "authKey"
              },
              {
                "type": "string",
                "value": "sha256",
                "key": "algorithm"
              },
              {
                "type": "string",
                "value": "",
                "key": "user"
              },
              {
                "type": "any",
                "key": "saveHelperData"
              },
              {
                "type": "string",
                "value": "RZKGNz",
                "key": "nonce"
              },
              {
                "type": "any",
                "key": "extraData"
              },
              {
                "type": "any",
                "key": "appId"
              },
              {
                "type": "any",
                "key": "delegation"
              },
              {
                "type": "string",
                "value": "1617795326",
                "key": "timestamp",
                "system": true
              }
            ]
          }
        },
        "response": {
          "id": "d227018f-6871-4af6-ba03-8bb93d43c074",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:26 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "44"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"2c-UZ5QLCWp1r9bxkKdVTupq1/XxUI\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ANjh9BYcJ3AuAp7p_rSsY6znQ4ILXVhSB.mp6Uv%2BUvVcKpzQ83d4VAlA%2B%2FFzKpvSkBELYULvzCnY8; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              72,
              97,
              119,
              107,
              32,
              65,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 111,
          "responseSize": 44
        },
        "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json saying passed 'status'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response body has json saying passed 'status'",
              "message": "expected { Object (message) } in response to contain property 'status'",
              "stack": "AssertionError: expected { Object (message) } in response to contain property 'status'\n   at Object.eval sandbox-script.js:2:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "27fd3779-d09d-4bb3-a212-fb05ac4a9d1a",
          "length": 35,
          "cycles": 3,
          "position": 11,
          "iteration": 2,
          "httpRequestId": "625fdf66-7119-442d-a66a-d4d72eb1b6eb"
        },
        "item": {
          "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
          "name": "OAuth1.0 (verify signature)",
          "request": {
            "description": {
              "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "oauth1"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth1",
              "oauth1": [
                {
                  "type": "string",
                  "value": "RKCGzna7bv9YD57c",
                  "key": "consumerKey"
                },
                {
                  "type": "string",
                  "value": "D+EdQ-gs$-%@2Nu7",
                  "key": "consumerSecret"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "token"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "tokenSecret"
                },
                {
                  "type": "string",
                  "value": "HMAC-SHA1",
                  "key": "signatureMethod"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "version"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "realm"
                },
                {
                  "type": "boolean",
                  "value": true,
                  "key": "addParamsToHeader"
                },
                {
                  "type": "any",
                  "key": "autoAddParam"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "addEmptyParamsToSign"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "48fbdb6f-cbaa-46d7-8c32-aae8f916f8c8",
              "name": "200",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "95"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.8.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "c12747fd-818e-4858-9ffc-7e2e50f2fe19",
              "name": "401",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                  }
                ],
                "method": "GET"
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "536"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.8.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50c80c4b-7093-40f7-ad3c-35d1d713720b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "885be686-e857-4781-b6d5-a8bdb7facc60"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "oauth1"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1617795326\",oauth_nonce=\"FMa3VMTKUeS\",oauth_signature=\"YDohz1c9Mq%2B546pV5BOIjGiZ0YE%3D\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f1402efd-68bd-4cfd-8eaa-2b12301bc7bd",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ANjh9BYcJ3AuAp7p_rSsY6znQ4ILXVhSB.mp6Uv%2BUvVcKpzQ83d4VAlA%2B%2FFzKpvSkBELYULvzCnY8",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth1",
            "oauth1": [
              {
                "type": "string",
                "value": "RKCGzna7bv9YD57c",
                "key": "consumerKey"
              },
              {
                "type": "string",
                "value": "D+EdQ-gs$-%@2Nu7",
                "key": "consumerSecret"
              },
              {
                "type": "string",
                "value": "",
                "key": "token"
              },
              {
                "type": "string",
                "value": "",
                "key": "tokenSecret"
              },
              {
                "type": "string",
                "value": "HMAC-SHA1",
                "key": "signatureMethod"
              },
              {
                "type": "string",
                "value": "",
                "key": "timestamp"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "version"
              },
              {
                "type": "string",
                "value": "",
                "key": "realm"
              },
              {
                "type": "boolean",
                "value": true,
                "key": "addParamsToHeader"
              },
              {
                "type": "any",
                "key": "autoAddParam"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "addEmptyParamsToSign"
              }
            ]
          }
        },
        "response": {
          "id": "eb48a31f-627d-4b3e-b38b-7a3839fb6609",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:26 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "78"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-dXPS7nEYaa6r6PVjN9RjHjrHaLU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ACzdLOAC_iXYOXHxbmKy77ZbAdK5ht6Xa.iAMqzTkbbEnN%2BJ8eF9DdS5g4Zn1MyzUNgSD%2BmmYMUY4; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              112,
              97,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              65,
              117,
              116,
              104,
              45,
              49,
              46,
              48,
              97,
              32,
              115,
              105,
              103,
              110,
              97,
              116,
              117,
              114,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              119,
              97,
              115,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 135,
          "responseSize": 78
        },
        "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response body has json saying passed 'status'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fd1d32d0-2129-4101-8a9d-fff7ae9ca4e0",
          "length": 35,
          "cycles": 3,
          "position": 12,
          "iteration": 2,
          "httpRequestId": "57f9d8f3-e0f0-4c1e-9e93-251b4462107a"
        },
        "item": {
          "id": "ed229219-7d93-495a-8fd3-72c6e7e4d2e2",
          "name": "Set Cookies",
          "request": {
            "description": {
              "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies",
                "set"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "8af401c7-7d97-4341-8963-2fa780ae4923",
              "name": "Cookies",
              "originalRequest": {
                "description": {
                  "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "cookies",
                    "set"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "foo1",
                      "value": "bar1"
                    },
                    {
                      "key": "foo2",
                      "value": "bar2"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "51"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:15:28 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo1\":\"bar\",\"foo2\":\"bar\"}}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f729199-e60a-4a84-8f09-340383e2afc7",
                "type": "text/javascript",
                "exec": [
                  "pm.test('response should be 200 or 302', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                  "});",
                  "",
                  "// response code could be either a 200 or a redirection based on the settings of ",
                  "// the http client. hence we need to handle both cases",
                  "pm.test('response body should be valid', function () {",
                  "    if (pm.response.code === 200) {",
                  "        pm.response.to.have.jsonBody('cookies.foo1', 'bar1')",
                  "            .and.have.jsonBody('cookies.foo2', 'bar2');",
                  "    }",
                  "    else {",
                  "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "5cca95b5-a749-48bd-87ac-3b23c2841e64"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies",
              "set"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8f11dd53-50e3-4272-99dd-c94ad0918413",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AO6KC-HuXFIerIR7pGCBIauhMJOeb9_0B.xp5hyCQ%2FgzHq%2BACYQc32n8QdCvPmj5cNlbpAo2qdKsk; foo1=bar1; foo2=bar2",
              "system": true
            },
            {
              "key": "Referer",
              "value": "https://postman-echo.com/cookies/set?foo1=bar1&foo2=bar2",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "84877797-d20b-4798-93ef-984741666ca8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:26 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "41"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"29-JRHqGq7F5tGozH71XMqVk/pLueo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Ar5xEFpYpIOXCtzOQsdxc_83P2a7wILEZ.vm21R2jfSIAofeeG3%2FNCixehD5HM3MF%2B3BbqLGO7W6g; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 210,
          "responseSize": 41
        },
        "id": "ed229219-7d93-495a-8fd3-72c6e7e4d2e2",
        "assertions": [
          {
            "assertion": "response should be 200 or 302",
            "skipped": false
          },
          {
            "assertion": "the \"foo1\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "the \"foo2\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "response body should be valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3e274984-0bba-49e7-9458-0c40692ffeaa",
          "length": 35,
          "cycles": 3,
          "position": 13,
          "iteration": 2,
          "httpRequestId": "5420b735-2c58-4ae3-abeb-0fea5adedd10"
        },
        "item": {
          "id": "65831a5e-9e45-4205-99ca-549d74afd7ff",
          "name": "Get Cookies",
          "request": {
            "description": {
              "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "b604a750-d41a-4e9b-a2eb-c29a7c77f9dc",
              "name": "Cookies",
              "originalRequest": {
                "description": {
                  "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "cookies"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "46"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:16:29 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a7103205-62a8-463d-8459-4c6a089321cc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test('response body should be valid', function () {",
                  "    pm.response.to.have.jsonBody('cookies.foo1', 'bar1');",
                  "    pm.response.to.have.jsonBody('cookies.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "283749bb-bed4-4718-979a-2d7009078278"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1a7c9d06-afa6-4259-a2e1-c740adceee6f",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Ar5xEFpYpIOXCtzOQsdxc_83P2a7wILEZ.vm21R2jfSIAofeeG3%2FNCixehD5HM3MF%2B3BbqLGO7W6g; foo1=bar1; foo2=bar2",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c8dc770b-838a-4e1c-87ba-f963f210b9f9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:26 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "41"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"29-JRHqGq7F5tGozH71XMqVk/pLueo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ABLJgyVUF4C4Q-3vicqMyV_SqtpttL5gu.jX5SBttCZOphkdUa1bDyhiMQlCpZp4Cq9hMw1XUi9CU; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 108,
          "responseSize": 41
        },
        "id": "65831a5e-9e45-4205-99ca-549d74afd7ff",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "the \"foo1\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "the \"foo2\" cookie has correct value",
            "skipped": false
          },
          {
            "assertion": "response body should be valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d34cf5f3-274d-497b-9331-1dcb00730ca1",
          "length": 35,
          "cycles": 3,
          "position": 14,
          "iteration": 2,
          "httpRequestId": "7f4c0002-58d5-45a4-9fa1-7e0a21e16a75"
        },
        "item": {
          "id": "3c2c59a6-b190-4e5f-becc-c653eff28667",
          "name": "Delete Cookies",
          "request": {
            "description": {
              "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies",
                "delete"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": null
                },
                {
                  "key": "foo2",
                  "value": null
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "f253d260-4e1e-434a-82e4-f621dcea09b8",
              "name": "Cookies Response",
              "originalRequest": {
                "description": {
                  "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "cookies",
                    "delete"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "foo1",
                      "value": null
                    },
                    {
                      "key": "foo2",
                      "value": null
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "46"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:16:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6b980339-4ce1-4c43-8271-4e089dbe365d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('response should be 200 or 302', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie should not be present', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie should not be present', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo2');",
                  "});",
                  "",
                  "// response code could be either a 200 or a redirection based on the settings of ",
                  "// the http client. hence we need to handle both cases",
                  "pm.test('response body should be valid', function () {",
                  "    if (pm.response.code === 200) {",
                  "        pm.response.to.not.have.jsonBody('cookies.foo1');",
                  "        pm.response.to.not.have.jsonBody('cookies.foo2');",
                  "    }",
                  "    else {",
                  "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "b477297f-eb65-4c9a-9e7c-5b5840f4977a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies",
              "delete"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": null
              },
              {
                "key": "foo2",
                "value": null
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3b40f116-9960-4586-a98d-8f4ebe314120",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A7FzZbFnjAHA-lXqALftXqQlZjuHVtDhN.I8h7ttVgcClmwkUqi63eXhw32g%2F5nsvVDQ%2BXfxuzZS8",
              "system": true
            },
            {
              "key": "Referer",
              "value": "https://postman-echo.com/cookies/delete?foo1&foo2",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "beaac4f6-db34-4857-a693-7487af50bb63",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:27 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"e-HwHgMXOuquwNiBd0Mx9LHc/Rmfk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AgDdlCn7EfXK9s9w5wzYUkV3LlWcIISO4.%2FsZKNt3dwKsJ988SqCUjJOKYE51GOydHvcR%2FLd9sPLQ; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 212,
          "responseSize": 14
        },
        "id": "3c2c59a6-b190-4e5f-becc-c653eff28667",
        "assertions": [
          {
            "assertion": "response should be 200 or 302",
            "skipped": false
          },
          {
            "assertion": "the \"foo1\" cookie should not be present",
            "skipped": false
          },
          {
            "assertion": "the \"foo2\" cookie should not be present",
            "skipped": false
          },
          {
            "assertion": "response body should be valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5c94e639-8177-44f7-815e-cf01e44b1fe4",
          "length": 35,
          "cycles": 3,
          "position": 15,
          "iteration": 2,
          "httpRequestId": "4e695bb2-9522-477f-968b-5e2b7c5b5afd"
        },
        "item": {
          "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
          "name": "Response Status Code",
          "request": {
            "description": {
              "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "status",
                "200"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
              "name": "200",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"e-1056260003\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"status\":200}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": "2016-04-15T11:14:58.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": "2016-04-15T11:14:58.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                },
                {
                  "name": "_ga",
                  "expires": "2018-03-31T11:16:21.000Z",
                  "domain": ".echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "GA1.3.1703443399.1459422978"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('status');",
                  "});",
                  "",
                  "// additional sanity tests",
                  "pm.test(\"status in response body must match the one in request\", function () {",
                  "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                  "});"
                ],
                "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "status",
              "200"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0905e446-a7b5-4c44-bd48-aa2524e4d140",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AgDdlCn7EfXK9s9w5wzYUkV3LlWcIISO4.%2FsZKNt3dwKsJ988SqCUjJOKYE51GOydHvcR%2FLd9sPLQ",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "230e47a5-cc2d-4db9-afcc-a9ec989ff877",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:27 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"e-QlsUp1vTYvBgYHrHCBYe2n/q268\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AqDquJdKNe_plWzdDMKSu_8iv9IEIx0n4.Ei96JuqBzB5JL1FZfTiZj%2FQkxnclzAkZFAvt0QV2KvY; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 109,
          "responseSize": 14
        },
        "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "status in response body must match the one in request",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3981c54d-24fd-4ec2-9286-c1976034f5f1",
          "length": 35,
          "cycles": 3,
          "position": 16,
          "iteration": 2,
          "httpRequestId": "8e4282e8-3427-4830-a239-376964b37ebe"
        },
        "item": {
          "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
          "name": "Streamed Response",
          "request": {
            "description": {
              "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "stream",
                "5"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has chunked transfer encoding header\", function () {",
                  "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                  "});"
                ],
                "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "stream",
              "5"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "55aa6c5f-3eca-417d-adfd-97b215ee043f",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AqDquJdKNe_plWzdDMKSu_8iv9IEIx0n4.Ei96JuqBzB5JL1FZfTiZj%2FQkxnclzAkZFAvt0QV2KvY",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "6ab7b5bd-6d50-416e-a18a-f3e005b4fa70",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:27 GMT"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AxZMxFK5FlY00YM_eDN-NxTh4K0jz2-7V.1BXGGeMHuj4QmYS1pZa81p5tGWkJOuNCNT0aeaqFpSo; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              102,
              45,
              53,
              48,
              54,
              55,
              50,
              50,
              100,
              53,
              52,
              49,
              102,
              101,
              51,
              102,
              56,
              48,
              51,
              102,
              53,
              54,
              102,
              49,
              100,
              50,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              53,
              97,
              97,
              54,
              99,
              53,
              102,
              45,
              51,
              101,
              99,
              97,
              45,
              52,
              49,
              55,
              100,
              45,
              97,
              100,
              102,
              100,
              45,
              57,
              55,
              98,
              50,
              49,
              53,
              101,
              101,
              48,
              52,
              51,
              102,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              68,
              113,
              117,
              74,
              100,
              75,
              78,
              101,
              95,
              112,
              108,
              87,
              122,
              100,
              68,
              77,
              75,
              83,
              117,
              95,
              56,
              105,
              118,
              57,
              73,
              69,
              73,
              120,
              48,
              110,
              52,
              46,
              69,
              105,
              57,
              54,
              74,
              117,
              113,
              66,
              122,
              66,
              53,
              74,
              76,
              49,
              70,
              90,
              102,
              84,
              105,
              90,
              106,
              37,
              50,
              70,
              81,
              107,
              120,
              110,
              99,
              108,
              122,
              65,
              107,
              90,
              70,
              65,
              118,
              116,
              48,
              81,
              86,
              50,
              75,
              118,
              89,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              102,
              45,
              53,
              48,
              54,
              55,
              50,
              50,
              100,
              53,
              52,
              49,
              102,
              101,
              51,
              102,
              56,
              48,
              51,
              102,
              53,
              54,
              102,
              49,
              100,
              50,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              53,
              97,
              97,
              54,
              99,
              53,
              102,
              45,
              51,
              101,
              99,
              97,
              45,
              52,
              49,
              55,
              100,
              45,
              97,
              100,
              102,
              100,
              45,
              57,
              55,
              98,
              50,
              49,
              53,
              101,
              101,
              48,
              52,
              51,
              102,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              68,
              113,
              117,
              74,
              100,
              75,
              78,
              101,
              95,
              112,
              108,
              87,
              122,
              100,
              68,
              77,
              75,
              83,
              117,
              95,
              56,
              105,
              118,
              57,
              73,
              69,
              73,
              120,
              48,
              110,
              52,
              46,
              69,
              105,
              57,
              54,
              74,
              117,
              113,
              66,
              122,
              66,
              53,
              74,
              76,
              49,
              70,
              90,
              102,
              84,
              105,
              90,
              106,
              37,
              50,
              70,
              81,
              107,
              120,
              110,
              99,
              108,
              122,
              65,
              107,
              90,
              70,
              65,
              118,
              116,
              48,
              81,
              86,
              50,
              75,
              118,
              89,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              102,
              45,
              53,
              48,
              54,
              55,
              50,
              50,
              100,
              53,
              52,
              49,
              102,
              101,
              51,
              102,
              56,
              48,
              51,
              102,
              53,
              54,
              102,
              49,
              100,
              50,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              53,
              97,
              97,
              54,
              99,
              53,
              102,
              45,
              51,
              101,
              99,
              97,
              45,
              52,
              49,
              55,
              100,
              45,
              97,
              100,
              102,
              100,
              45,
              57,
              55,
              98,
              50,
              49,
              53,
              101,
              101,
              48,
              52,
              51,
              102,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              68,
              113,
              117,
              74,
              100,
              75,
              78,
              101,
              95,
              112,
              108,
              87,
              122,
              100,
              68,
              77,
              75,
              83,
              117,
              95,
              56,
              105,
              118,
              57,
              73,
              69,
              73,
              120,
              48,
              110,
              52,
              46,
              69,
              105,
              57,
              54,
              74,
              117,
              113,
              66,
              122,
              66,
              53,
              74,
              76,
              49,
              70,
              90,
              102,
              84,
              105,
              90,
              106,
              37,
              50,
              70,
              81,
              107,
              120,
              110,
              99,
              108,
              122,
              65,
              107,
              90,
              70,
              65,
              118,
              116,
              48,
              81,
              86,
              50,
              75,
              118,
              89,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              102,
              45,
              53,
              48,
              54,
              55,
              50,
              50,
              100,
              53,
              52,
              49,
              102,
              101,
              51,
              102,
              56,
              48,
              51,
              102,
              53,
              54,
              102,
              49,
              100,
              50,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              53,
              97,
              97,
              54,
              99,
              53,
              102,
              45,
              51,
              101,
              99,
              97,
              45,
              52,
              49,
              55,
              100,
              45,
              97,
              100,
              102,
              100,
              45,
              57,
              55,
              98,
              50,
              49,
              53,
              101,
              101,
              48,
              52,
              51,
              102,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              68,
              113,
              117,
              74,
              100,
              75,
              78,
              101,
              95,
              112,
              108,
              87,
              122,
              100,
              68,
              77,
              75,
              83,
              117,
              95,
              56,
              105,
              118,
              57,
              73,
              69,
              73,
              120,
              48,
              110,
              52,
              46,
              69,
              105,
              57,
              54,
              74,
              117,
              113,
              66,
              122,
              66,
              53,
              74,
              76,
              49,
              70,
              90,
              102,
              84,
              105,
              90,
              106,
              37,
              50,
              70,
              81,
              107,
              120,
              110,
              99,
              108,
              122,
              65,
              107,
              90,
              70,
              65,
              118,
              116,
              48,
              81,
              86,
              50,
              75,
              118,
              89,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              56,
              102,
              102,
              45,
              53,
              48,
              54,
              55,
              50,
              50,
              100,
              53,
              52,
              49,
              102,
              101,
              51,
              102,
              56,
              48,
              51,
              102,
              53,
              54,
              102,
              49,
              100,
              50,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              53,
              97,
              97,
              54,
              99,
              53,
              102,
              45,
              51,
              101,
              99,
              97,
              45,
              52,
              49,
              55,
              100,
              45,
              97,
              100,
              102,
              100,
              45,
              57,
              55,
              98,
              50,
              49,
              53,
              101,
              101,
              48,
              52,
              51,
              102,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              113,
              68,
              113,
              117,
              74,
              100,
              75,
              78,
              101,
              95,
              112,
              108,
              87,
              122,
              100,
              68,
              77,
              75,
              83,
              117,
              95,
              56,
              105,
              118,
              57,
              73,
              69,
              73,
              120,
              48,
              110,
              52,
              46,
              69,
              105,
              57,
              54,
              74,
              117,
              113,
              66,
              122,
              66,
              53,
              74,
              76,
              49,
              70,
              90,
              102,
              84,
              105,
              90,
              106,
              37,
              50,
              70,
              81,
              107,
              120,
              110,
              99,
              108,
              122,
              65,
              107,
              90,
              70,
              65,
              118,
              116,
              48,
              81,
              86,
              50,
              75,
              118,
              89,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 121,
          "responseSize": 2870
        },
        "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has chunked transfer encoding header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3c218331-85b5-4658-aa8a-76767f53e9c0",
          "length": 35,
          "cycles": 3,
          "position": 17,
          "iteration": 2,
          "httpRequestId": "4984989b-e15a-45c2-8624-b767cca46cac"
        },
        "item": {
          "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
          "name": "Delay Response",
          "request": {
            "description": {
              "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "delay",
                "2"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "25994048-5137-4d58-92af-855aff7c6234",
              "name": "success-response",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "3"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "13"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"delay\":\"3\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                "type": "text/javascript",
                "exec": [
                  "var _ = require('lodash');",
                  "",
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('delay');",
                  "});",
                  "",
                  "// additional sanity tests",
                  "pm.test(\"request must have a valid delay\", function () {",
                  "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                  "});",
                  "pm.test(\"response should take more time than the delay specified\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                  "});"
                ],
                "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "delay",
              "2"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "01549058-0578-4ac4-92e8-40bed93f8037",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AxZMxFK5FlY00YM_eDN-NxTh4K0jz2-7V.1BXGGeMHuj4QmYS1pZa81p5tGWkJOuNCNT0aeaqFpSo",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "5ea0fdeb-7ae6-4522-b2a1-e3a57216a39a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:29 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "13"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"d-vb8pS8uHJYunqF73qADGxcv0Je8\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AQV98R8UCCgiXeMTjATD82eOLv--18hh2.QxnzKe9g8rm5TZ0D5g97U5Yo6cpmfdEjRLLJS38PYQA; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              108,
              97,
              121,
              34,
              58,
              34,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2125,
          "responseSize": 13
        },
        "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "request must have a valid delay",
            "skipped": false
          },
          {
            "assertion": "response should take more time than the delay specified",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cc4e5fad-49a2-4d53-bb3f-54c5cf45ad95",
          "length": 35,
          "cycles": 3,
          "position": 18,
          "iteration": 2,
          "httpRequestId": "9a69a08c-28ba-475a-ae2f-fb0281f6f164"
        },
        "item": {
          "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
          "name": "Get UTF8 Encoded Response",
          "request": {
            "description": {
              "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "encoding",
                "utf8"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has charset in content-type header\", function () {",
                  "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                  "});",
                  "",
                  "pm.test(\"response has chunked transfer encoding header\", function () {",
                  "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                  "});"
                ],
                "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "encoding",
              "utf8"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "23606aee-26f6-4ed7-84f2-655f063e87fc",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AQV98R8UCCgiXeMTjATD82eOLv--18hh2.QxnzKe9g8rm5TZ0D5g97U5Yo6cpmfdEjRLLJS38PYQA",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "5b09013d-934b-4e71-b8c4-1959ba49d45a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"3d0e-bb1Z6nxw+98ped7xrePAFKVeCtU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ApGYKYZs5KTPbewAk3rB05h5euMmA2Gp7.Fj4iT%2BrCFOOmT%2FBT8KnlbiVQCk52nqDeEdgRVusLtcc; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              10,
              32,
              32,
              32,
              32,
              60,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              104,
              49,
              62,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              68,
              101,
              109,
              111,
              60,
              47,
              104,
              49,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              112,
              62,
              84,
              97,
              107,
              101,
              110,
              32,
              102,
              114,
              111,
              109,
              32,
              60,
              97,
              32,
              104,
              114,
              101,
              102,
              61,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              117,
              99,
              115,
              47,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              115,
              47,
              85,
              84,
              70,
              45,
              56,
              45,
              100,
              101,
              109,
              111,
              46,
              116,
              120,
              116,
              34,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              117,
              99,
              115,
              47,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              115,
              47,
              85,
              84,
              70,
              45,
              56,
              45,
              100,
              101,
              109,
              111,
              46,
              116,
              120,
              116,
              60,
              47,
              97,
              62,
              60,
              47,
              112,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              112,
              114,
              101,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              84,
              70,
              45,
              56,
              32,
              101,
              110,
              99,
              111,
              100,
              101,
              100,
              32,
              115,
              97,
              109,
              112,
              108,
              101,
              32,
              112,
              108,
              97,
              105,
              110,
              45,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              77,
              97,
              114,
              107,
              117,
              115,
              32,
              75,
              117,
              104,
              110,
              32,
              91,
              203,
              136,
              109,
              97,
              202,
              179,
              107,
              202,
              138,
              115,
              32,
              107,
              117,
              203,
              144,
              110,
              93,
              32,
              60,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              62,
              32,
              226,
              128,
              148,
              32,
              50,
              48,
              48,
              50,
              45,
              48,
              55,
              45,
              50,
              53,
              10,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              101,
              32,
              65,
              83,
              67,
              73,
              73,
              32,
              99,
              111,
              109,
              112,
              97,
              116,
              105,
              98,
              108,
              101,
              32,
              85,
              84,
              70,
              45,
              56,
              32,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              108,
              97,
              105,
              110,
              45,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              105,
              115,
              32,
              100,
              101,
              102,
              105,
              110,
              101,
              100,
              32,
              105,
              110,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              73,
              83,
              79,
              32,
              49,
              48,
              54,
              52,
              54,
              45,
              49,
              44,
              32,
              97,
              110,
              100,
              32,
              82,
              70,
              67,
              32,
              50,
              50,
              55,
              57,
              46,
              10,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              115,
              105,
              110,
              103,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              47,
              85,
              84,
              70,
              45,
              56,
              44,
              32,
              121,
              111,
              117,
              32,
              99,
              97,
              110,
              32,
              119,
              114,
              105,
              116,
              101,
              32,
              105,
              110,
              32,
              101,
              109,
              97,
              105,
              108,
              115,
              32,
              97,
              110,
              100,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              99,
              111,
              100,
              101,
              32,
              116,
              104,
              105,
              110,
              103,
              115,
              32,
              115,
              117,
              99,
              104,
              32,
              97,
              115,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              77,
              97,
              116,
              104,
              101,
              109,
              97,
              116,
              105,
              99,
              115,
              32,
              97,
              110,
              100,
              32,
              115,
              99,
              105,
              101,
              110,
              99,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              174,
              32,
              69,
              226,
              139,
              133,
              100,
              97,
              32,
              61,
              32,
              81,
              44,
              32,
              32,
              110,
              32,
              226,
              134,
              146,
              32,
              226,
              136,
              158,
              44,
              32,
              226,
              136,
              145,
              32,
              102,
              40,
              105,
              41,
              32,
              61,
              32,
              226,
              136,
              143,
              32,
              103,
              40,
              105,
              41,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              167,
              226,
              142,
              161,
              226,
              142,
              155,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              142,
              158,
              226,
              142,
              164,
              226,
              142,
              171,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              148,
              130,
              97,
              194,
              178,
              43,
              98,
              194,
              179,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              128,
              120,
              226,
              136,
              136,
              226,
              132,
              157,
              58,
              32,
              226,
              140,
              136,
              120,
              226,
              140,
              137,
              32,
              61,
              32,
              226,
              136,
              146,
              226,
              140,
              138,
              226,
              136,
              146,
              120,
              226,
              140,
              139,
              44,
              32,
              206,
              177,
              32,
              226,
              136,
              167,
              32,
              194,
              172,
              206,
              178,
              32,
              61,
              32,
              194,
              172,
              40,
              194,
              172,
              206,
              177,
              32,
              226,
              136,
              168,
              32,
              206,
              178,
              41,
              44,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              148,
              130,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              142,
              183,
              32,
              99,
              226,
              130,
              136,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              132,
              149,
              32,
              226,
              138,
              134,
              32,
              226,
              132,
              149,
              226,
              130,
              128,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              164,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              154,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              157,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              130,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              168,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              172,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              136,
              158,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              138,
              165,
              32,
              60,
              32,
              97,
              32,
              226,
              137,
              160,
              32,
              98,
              32,
              226,
              137,
              161,
              32,
              99,
              32,
              226,
              137,
              164,
              32,
              100,
              32,
              226,
              137,
              170,
              32,
              226,
              138,
              164,
              32,
              226,
              135,
              146,
              32,
              40,
              226,
              159,
              166,
              65,
              226,
              159,
              167,
              32,
              226,
              135,
              148,
              32,
              226,
              159,
              170,
              66,
              226,
              159,
              171,
              41,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              142,
              178,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              142,
              179,
              97,
              226,
              129,
              177,
              45,
              98,
              226,
              129,
              177,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              50,
              72,
              226,
              130,
              130,
              32,
              43,
              32,
              79,
              226,
              130,
              130,
              32,
              226,
              135,
              140,
              32,
              50,
              72,
              226,
              130,
              130,
              79,
              44,
              32,
              82,
              32,
              61,
              32,
              52,
              46,
              55,
              32,
              107,
              206,
              169,
              44,
              32,
              226,
              140,
              128,
              32,
              50,
              48,
              48,
              32,
              109,
              109,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              169,
              226,
              142,
              163,
              226,
              142,
              157,
              105,
              61,
              49,
              32,
              32,
              32,
              32,
              226,
              142,
              160,
              226,
              142,
              166,
              226,
              142,
              173,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              76,
              105,
              110,
              103,
              117,
              105,
              115,
              116,
              105,
              99,
              115,
              32,
              97,
              110,
              100,
              32,
              100,
              105,
              99,
              116,
              105,
              111,
              110,
              97,
              114,
              105,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              195,
              176,
              105,
              32,
              196,
              177,
              110,
              116,
              201,
              153,
              203,
              136,
              110,
              195,
              166,
              202,
              131,
              201,
              153,
              110,
              201,
              153,
              108,
              32,
              102,
              201,
              153,
              203,
              136,
              110,
              201,
              155,
              116,
              196,
              177,
              107,
              32,
              201,
              153,
              115,
              111,
              202,
              138,
              115,
              105,
              203,
              136,
              101,
              196,
              177,
              202,
              131,
              110,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              89,
              32,
              91,
              203,
              136,
              202,
              143,
              112,
              115,
              105,
              108,
              201,
              148,
              110,
              93,
              44,
              32,
              89,
              101,
              110,
              32,
              91,
              106,
              201,
              155,
              110,
              93,
              44,
              32,
              89,
              111,
              103,
              97,
              32,
              91,
              203,
              136,
              106,
              111,
              203,
              144,
              103,
              201,
              145,
              93,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              65,
              80,
              76,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              40,
              86,
              226,
              141,
              179,
              86,
              41,
              61,
              226,
              141,
              179,
              226,
              141,
              180,
              86,
              41,
              47,
              86,
              226,
              134,
              144,
              44,
              86,
              32,
              32,
              32,
              32,
              226,
              140,
              183,
              226,
              134,
              144,
              226,
              141,
              179,
              226,
              134,
              146,
              226,
              141,
              180,
              226,
              136,
              134,
              226,
              136,
              135,
              226,
              138,
              131,
              226,
              128,
              190,
              226,
              141,
              142,
              226,
              141,
              149,
              226,
              140,
              136,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              78,
              105,
              99,
              101,
              114,
              32,
              116,
              121,
              112,
              111,
              103,
              114,
              97,
              112,
              104,
              121,
              32,
              105,
              110,
              32,
              112,
              108,
              97,
              105,
              110,
              32,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              151,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              152,
              115,
              105,
              110,
              103,
              108,
              101,
              226,
              128,
              153,
              32,
              97,
              110,
              100,
              32,
              226,
              128,
              156,
              100,
              111,
              117,
              98,
              108,
              101,
              226,
              128,
              157,
              32,
              113,
              117,
              111,
              116,
              101,
              115,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              67,
              117,
              114,
              108,
              121,
              32,
              97,
              112,
              111,
              115,
              116,
              114,
              111,
              112,
              104,
              101,
              115,
              58,
              32,
              226,
              128,
              156,
              87,
              101,
              226,
              128,
              153,
              118,
              101,
              32,
              98,
              101,
              101,
              110,
              32,
              104,
              101,
              114,
              101,
              226,
              128,
              157,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              76,
              97,
              116,
              105,
              110,
              45,
              49,
              32,
              97,
              112,
              111,
              115,
              116,
              114,
              111,
              112,
              104,
              101,
              32,
              97,
              110,
              100,
              32,
              97,
              99,
              99,
              101,
              110,
              116,
              115,
              58,
              32,
              39,
              194,
              180,
              96,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              154,
              100,
              101,
              117,
              116,
              115,
              99,
              104,
              101,
              226,
              128,
              152,
              32,
              226,
              128,
              158,
              65,
              110,
              102,
              195,
              188,
              104,
              114,
              117,
              110,
              103,
              115,
              122,
              101,
              105,
              99,
              104,
              101,
              110,
              226,
              128,
              156,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              160,
              44,
              32,
              226,
              128,
              161,
              44,
              32,
              226,
              128,
              176,
              44,
              32,
              226,
              128,
              162,
              44,
              32,
              51,
              226,
              128,
              147,
              52,
              44,
              32,
              226,
              128,
              148,
              44,
              32,
              226,
              136,
              146,
              53,
              47,
              43,
              53,
              44,
              32,
              226,
              132,
              162,
              44,
              32,
              226,
              128,
              166,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              65,
              83,
              67,
              73,
              73,
              32,
              115,
              97,
              102,
              101,
              116,
              121,
              32,
              116,
              101,
              115,
              116,
              58,
              32,
              49,
              108,
              73,
              124,
              44,
              32,
              48,
              79,
              68,
              44,
              32,
              56,
              66,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              116,
              104,
              101,
              32,
              101,
              117,
              114,
              111,
              32,
              115,
              121,
              109,
              98,
              111,
              108,
              58,
              32,
              226,
              148,
              130,
              32,
              49,
              52,
              46,
              57,
              53,
              32,
              226,
              130,
              172,
              32,
              226,
              148,
              130,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              157,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              67,
              111,
              109,
              98,
              105,
              110,
              105,
              110,
              103,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              83,
              84,
              65,
              82,
              71,
              206,
              155,
              204,
              138,
              84,
              69,
              32,
              83,
              71,
              45,
              49,
              44,
              32,
              97,
              32,
              61,
              32,
              118,
              204,
              135,
              32,
              61,
              32,
              114,
              204,
              136,
              44,
              32,
              97,
              226,
              131,
              145,
              32,
              226,
              138,
              165,
              32,
              98,
              226,
              131,
              145,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              114,
              101,
              101,
              107,
              32,
              40,
              105,
              110,
              32,
              80,
              111,
              108,
              121,
              116,
              111,
              110,
              105,
              99,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              101,
              32,
              71,
              114,
              101,
              101,
              107,
              32,
              97,
              110,
              116,
              104,
              101,
              109,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              163,
              225,
              189,
              178,
              32,
              206,
              179,
              206,
              189,
              207,
              137,
              207,
              129,
              225,
              189,
              183,
              206,
              182,
              207,
              137,
              32,
              225,
              188,
              128,
              207,
              128,
              225,
              189,
              184,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              206,
              186,
              225,
              189,
              185,
              207,
              136,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              32,
              207,
              131,
              207,
              128,
              206,
              177,
              206,
              184,
              206,
              185,
              206,
              191,
              225,
              191,
              166,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              207,
              132,
              207,
              129,
              206,
              191,
              206,
              188,
              206,
              181,
              207,
              129,
              225,
              189,
              181,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              131,
              225,
              189,
              178,
              32,
              206,
              179,
              206,
              189,
              207,
              137,
              207,
              129,
              225,
              189,
              183,
              206,
              182,
              207,
              137,
              32,
              225,
              188,
              128,
              207,
              128,
              225,
              189,
              184,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              132,
              207,
              136,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              206,
              191,
              225,
              189,
              186,
              32,
              206,
              188,
              225,
              189,
              178,
              32,
              206,
              178,
              225,
              189,
              183,
              206,
              177,
              32,
              206,
              188,
              206,
              181,
              207,
              132,
              207,
              129,
              225,
              189,
              177,
              206,
              181,
              206,
              185,
              32,
              207,
              132,
              225,
              189,
              180,
              32,
              206,
              179,
              225,
              191,
              134,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              190,
              191,
              206,
              145,
              207,
              128,
              225,
              190,
              191,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              186,
              225,
              189,
              185,
              206,
              186,
              206,
              186,
              206,
              177,
              206,
              187,
              206,
              177,
              32,
              206,
              178,
              206,
              179,
              206,
              177,
              206,
              187,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              191,
              182,
              206,
              189,
              32,
              225,
              191,
              190,
              206,
              149,
              206,
              187,
              206,
              187,
              225,
              189,
              181,
              206,
              189,
              207,
              137,
              206,
              189,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              225,
              188,
              177,
              206,
              181,
              207,
              129,
              225,
              189,
              177,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              131,
              225,
              189,
              176,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              191,
              182,
              207,
              132,
              206,
              177,
              32,
              225,
              188,
              128,
              206,
              189,
              206,
              180,
              207,
              129,
              206,
              181,
              206,
              185,
              207,
              137,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              135,
              206,
              177,
              225,
              191,
              150,
              207,
              129,
              206,
              181,
              44,
              32,
              225,
              189,
              166,
              32,
              207,
              135,
              206,
              177,
              225,
              191,
              150,
              207,
              129,
              206,
              181,
              44,
              32,
              225,
              190,
              191,
              206,
              149,
              206,
              187,
              206,
              181,
              207,
              133,
              206,
              184,
              206,
              181,
              207,
              129,
              206,
              185,
              225,
              189,
              177,
              33,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              115,
              112,
              101,
              101,
              99,
              104,
              32,
              111,
              102,
              32,
              68,
              101,
              109,
              111,
              115,
              116,
              104,
              101,
              110,
              101,
              115,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              52,
              116,
              104,
              32,
              99,
              101,
              110,
              116,
              117,
              114,
              121,
              32,
              66,
              67,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              159,
              225,
              189,
              144,
              207,
              135,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              177,
              225,
              189,
              144,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              128,
              206,
              177,
              207,
              129,
              225,
              189,
              183,
              207,
              131,
              207,
              132,
              206,
              177,
              207,
              132,
              206,
              177,
              225,
              189,
              183,
              32,
              206,
              188,
              206,
              191,
              206,
              185,
              32,
              206,
              179,
              206,
              185,
              206,
              179,
              206,
              189,
              225,
              189,
              189,
              207,
              131,
              206,
              186,
              206,
              181,
              206,
              185,
              206,
              189,
              44,
              32,
              225,
              189,
              166,
              32,
              225,
              188,
              132,
              206,
              189,
              206,
              180,
              207,
              129,
              206,
              181,
              207,
              130,
              32,
              225,
              190,
              191,
              206,
              145,
              206,
              184,
              206,
              183,
              206,
              189,
              206,
              177,
              225,
              191,
              150,
              206,
              191,
              206,
              185,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              177,
              206,
              189,
              32,
              207,
              132,
              225,
              190,
              191,
              32,
              206,
              181,
              225,
              188,
              176,
              207,
              130,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              177,
              206,
              179,
              206,
              188,
              206,
              177,
              207,
              132,
              206,
              177,
              32,
              225,
              188,
              128,
              207,
              128,
              206,
              191,
              206,
              178,
              206,
              187,
              225,
              189,
              179,
              207,
              136,
              207,
              137,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              177,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              184,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              207,
              133,
              207,
              130,
              32,
              206,
              191,
              225,
              189,
              147,
              207,
              130,
              32,
              225,
              188,
              128,
              206,
              186,
              206,
              191,
              225,
              189,
              187,
              207,
              137,
              206,
              135,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              32,
              206,
              188,
              225,
              189,
              178,
              206,
              189,
              32,
              206,
              179,
              225,
              189,
              176,
              207,
              129,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              207,
              133,
              207,
              130,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              166,
              225,
              189,
              183,
              206,
              187,
              206,
              185,
              207,
              128,
              207,
              128,
              206,
              191,
              206,
              189,
              32,
              225,
              189,
              129,
              207,
              129,
              225,
              191,
              182,
              32,
              206,
              179,
              206,
              185,
              206,
              179,
              206,
              189,
              206,
              191,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              191,
              207,
              133,
              207,
              130,
              44,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              180,
              225,
              189,
              178,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              177,
              206,
              179,
              206,
              188,
              206,
              177,
              207,
              132,
              225,
              190,
              191,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              181,
              225,
              188,
              176,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              207,
              132,
              206,
              191,
              32,
              207,
              128,
              207,
              129,
              206,
              191,
              225,
              189,
              181,
              206,
              186,
              206,
              191,
              206,
              189,
              207,
              132,
              206,
              177,
              44,
              32,
              32,
              225,
              189,
              165,
              207,
              131,
              206,
              184,
              225,
              190,
              191,
              32,
              225,
              189,
              133,
              207,
              128,
              207,
              137,
              207,
              130,
              32,
              206,
              188,
              225,
              189,
              180,
              32,
              207,
              128,
              206,
              181,
              206,
              185,
              207,
              131,
              225,
              189,
              185,
              206,
              188,
              206,
              181,
              206,
              184,
              225,
              190,
              191,
              32,
              206,
              177,
              225,
              189,
              144,
              207,
              132,
              206,
              191,
              225,
              189,
              182,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              207,
              129,
              206,
              191,
              206,
              189,
              32,
              206,
              186,
              206,
              177,
              206,
              186,
              225,
              191,
              182,
              207,
              130,
              32,
              207,
              131,
              206,
              186,
              225,
              189,
              179,
              207,
              136,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              180,
              225,
              189,
              179,
              206,
              191,
              206,
              189,
              46,
              32,
              206,
              191,
              225,
              189,
              144,
              206,
              180,
              225,
              189,
              179,
              206,
              189,
              32,
              206,
              191,
              225,
              189,
              150,
              206,
              189,
              32,
              225,
              188,
              132,
              206,
              187,
              206,
              187,
              206,
              191,
              32,
              206,
              188,
              206,
              191,
              206,
              185,
              32,
              206,
              180,
              206,
              191,
              206,
              186,
              206,
              191,
              225,
              191,
              166,
              207,
              131,
              206,
              185,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              191,
              225,
              188,
              177,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              132,
              206,
              191,
              206,
              185,
              206,
              177,
              225,
              191,
              166,
              207,
              132,
              206,
              177,
              32,
              206,
              187,
              225,
              189,
              179,
              206,
              179,
              206,
              191,
              206,
              189,
              207,
              132,
              206,
              181,
              207,
              130,
              32,
              225,
              188,
              162,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              145,
              207,
              128,
              225,
              189,
              185,
              206,
              184,
              206,
              181,
              207,
              131,
              206,
              185,
              206,
              189,
              44,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              225,
              188,
              167,
              207,
              130,
              32,
              206,
              178,
              206,
              191,
              207,
              133,
              206,
              187,
              206,
              181,
              225,
              189,
              187,
              206,
              181,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              191,
              225,
              189,
              144,
              207,
              135,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              206,
              191,
              225,
              189,
              150,
              207,
              131,
              206,
              177,
              206,
              189,
              32,
              207,
              128,
              206,
              177,
              207,
              129,
              206,
              185,
              207,
              131,
              207,
              132,
              225,
              189,
              177,
              206,
              189,
              207,
              132,
              206,
              181,
              207,
              130,
              32,
              225,
              189,
              145,
              206,
              188,
              225,
              191,
              150,
              206,
              189,
              32,
              225,
              188,
              129,
              206,
              188,
              206,
              177,
              207,
              129,
              207,
              132,
              225,
              189,
              177,
              206,
              189,
              206,
              181,
              206,
              185,
              206,
              189,
              46,
              32,
              225,
              188,
              144,
              206,
              179,
              225,
              189,
              188,
              32,
              206,
              180,
              225,
              189,
              179,
              44,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              185,
              32,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              206,
              191,
              207,
              132,
              225,
              190,
              191,
              32,
              225,
              188,
              144,
              206,
              190,
              225,
              191,
              134,
              206,
              189,
              32,
              207,
              132,
              225,
              191,
              135,
              32,
              207,
              128,
              225,
              189,
              185,
              206,
              187,
              206,
              181,
              206,
              185,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              177,
              225,
              189,
              145,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              32,
              225,
              188,
              148,
              207,
              135,
              206,
              181,
              206,
              185,
              206,
              189,
              32,
              225,
              188,
              128,
              207,
              131,
              207,
              134,
              206,
              177,
              206,
              187,
              225,
              191,
              182,
              207,
              130,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              206,
              166,
              225,
              189,
              183,
              206,
              187,
              206,
              185,
              207,
              128,
              207,
              128,
              206,
              191,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              206,
              188,
              225,
              189,
              177,
              206,
              187,
              225,
              190,
              191,
              32,
              225,
              188,
              128,
              206,
              186,
              207,
              129,
              206,
              185,
              206,
              178,
              225,
              191,
              182,
              207,
              130,
              32,
              206,
              191,
              225,
              188,
              182,
              206,
              180,
              206,
              177,
              206,
              135,
              32,
              225,
              188,
              144,
              207,
              128,
              225,
              190,
              191,
              32,
              225,
              188,
              144,
              206,
              188,
              206,
              191,
              225,
              191,
              166,
              32,
              206,
              179,
              225,
              189,
              177,
              207,
              129,
              44,
              32,
              206,
              191,
              225,
              189,
              144,
              32,
              207,
              128,
              225,
              189,
              177,
              206,
              187,
              206,
              177,
              206,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              179,
              225,
              189,
              179,
              206,
              179,
              206,
              191,
              206,
              189,
              206,
              181,
              206,
              189,
              32,
              207,
              132,
              206,
              177,
              225,
              191,
              166,
              207,
              132,
              225,
              190,
              191,
              32,
              225,
              188,
              128,
              206,
              188,
              207,
              134,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              207,
              129,
              206,
              177,
              206,
              135,
              32,
              206,
              189,
              225,
              191,
              166,
              206,
              189,
              32,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              207,
              132,
              206,
              191,
              206,
              185,
              32,
              207,
              128,
              225,
              189,
              179,
              207,
              128,
              206,
              181,
              206,
              185,
              207,
              131,
              206,
              188,
              206,
              177,
              206,
              185,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              206,
              184,
              225,
              190,
              191,
              32,
              225,
              188,
              177,
              206,
              186,
              206,
              177,
              206,
              189,
              225,
              189,
              184,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              207,
              129,
              206,
              191,
              206,
              187,
              206,
              177,
              206,
              178,
              206,
              181,
              225,
              191,
              150,
              206,
              189,
              32,
              225,
              188,
              161,
              206,
              188,
              225,
              191,
              150,
              206,
              189,
              32,
              206,
              181,
              225,
              188,
              182,
              206,
              189,
              206,
              177,
              206,
              185,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              189,
              207,
              132,
              206,
              183,
              206,
              189,
              44,
              32,
              225,
              189,
              133,
              207,
              128,
              207,
              137,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              32,
              207,
              131,
              207,
              133,
              206,
              188,
              206,
              188,
              225,
              189,
              177,
              207,
              135,
              206,
              191,
              207,
              133,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              131,
              225,
              189,
              189,
              207,
              131,
              206,
              191,
              206,
              188,
              206,
              181,
              206,
              189,
              46,
              32,
              225,
              188,
              144,
              225,
              189,
              176,
              206,
              189,
              32,
              206,
              179,
              225,
              189,
              176,
              207,
              129,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              207,
              132,
              206,
              191,
              32,
              206,
              178,
              206,
              181,
              206,
              178,
              206,
              177,
              225,
              189,
              183,
              207,
              137,
              207,
              130,
              32,
              225,
              189,
              145,
              207,
              128,
              225,
              189,
              177,
              207,
              129,
              206,
              190,
              225,
              191,
              131,
              44,
              32,
              207,
              132,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              189,
              183,
              206,
              189,
              206,
              177,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              181,
              207,
              132,
              206,
              177,
              225,
              189,
              183,
              32,
              207,
              132,
              206,
              185,
              207,
              130,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              225,
              189,
              131,
              206,
              189,
              32,
              207,
              132,
              207,
              129,
              225,
              189,
              185,
              207,
              128,
              206,
              191,
              206,
              189,
              32,
              225,
              188,
              144,
              206,
              190,
              225,
              189,
              179,
              207,
              131,
              207,
              132,
              206,
              177,
              206,
              185,
              32,
              207,
              131,
              206,
              186,
              206,
              191,
              207,
              128,
              206,
              181,
              225,
              191,
              150,
              206,
              189,
              206,
              135,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              182,
              206,
              189,
              32,
              206,
              180,
              225,
              189,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              188,
              128,
              207,
              129,
              207,
              135,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              128,
              207,
              129,
              206,
              184,
              225,
              191,
              182,
              207,
              130,
              32,
              225,
              189,
              145,
              207,
              128,
              206,
              191,
              206,
              184,
              225,
              189,
              179,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              32,
              206,
              188,
              225,
              189,
              177,
              207,
              132,
              206,
              177,
              206,
              185,
              206,
              191,
              206,
              189,
              32,
              225,
              188,
              161,
              206,
              179,
              206,
              191,
              225,
              191,
              166,
              206,
              188,
              206,
              177,
              206,
              185,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              181,
              206,
              187,
              206,
              181,
              207,
              133,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              32,
              225,
              189,
              129,
              206,
              189,
              207,
              132,
              206,
              185,
              206,
              189,
              206,
              191,
              225,
              191,
              166,
              206,
              189,
              32,
              207,
              128,
              206,
              191,
              206,
              185,
              206,
              181,
              225,
              191,
              150,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              206,
              189,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              148,
              206,
              183,
              206,
              188,
              206,
              191,
              207,
              131,
              206,
              184,
              225,
              189,
              179,
              206,
              189,
              206,
              191,
              207,
              133,
              207,
              130,
              44,
              32,
              206,
              147,
              225,
              191,
              189,
              32,
              225,
              190,
              191,
              206,
              159,
              206,
              187,
              207,
              133,
              206,
              189,
              206,
              184,
              206,
              185,
              206,
              177,
              206,
              186,
              225,
              189,
              184,
              207,
              130,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              101,
              111,
              114,
              103,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              99,
              111,
              110,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              32,
              105,
              110,
              118,
              105,
              116,
              97,
              116,
              105,
              111,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              146,
              225,
              131,
              151,
              225,
              131,
              174,
              225,
              131,
              157,
              225,
              131,
              149,
              225,
              131,
              151,
              32,
              225,
              131,
              144,
              225,
              131,
              174,
              225,
              131,
              154,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              148,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              151,
              32,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              146,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              144,
              225,
              131,
              151,
              225,
              131,
              148,
              32,
              225,
              131,
              161,
              225,
              131,
              144,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              144,
              225,
              131,
              168,
              225,
              131,
              157,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              157,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              164,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              150,
              225,
              131,
              148,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              172,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              225,
              131,
              147,
              44,
              32,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              170,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              32,
              49,
              48,
              45,
              49,
              50,
              32,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              162,
              225,
              131,
              161,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              165,
              46,
              32,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              32,
              225,
              131,
              146,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              156,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              168,
              225,
              131,
              152,
              46,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              164,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              225,
              131,
              168,
              225,
              131,
              148,
              225,
              131,
              176,
              225,
              131,
              153,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              32,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              144,
              225,
              131,
              147,
              32,
              225,
              131,
              155,
              225,
              131,
              161,
              225,
              131,
              157,
              225,
              131,
              164,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              157,
              225,
              131,
              161,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              148,
              225,
              131,
              165,
              225,
              131,
              161,
              225,
              131,
              158,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              32,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              148,
              225,
              131,
              151,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              146,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              32,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              146,
              225,
              131,
              157,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              170,
              225,
              131,
              144,
              225,
              131,
              144,
              32,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              162,
              225,
              131,
              152,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              156,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              150,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              154,
              225,
              131,
              157,
              225,
              131,
              153,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              150,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              44,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              157,
              225,
              131,
              167,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              157,
              225,
              131,
              158,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              163,
              225,
              131,
              154,
              32,
              225,
              131,
              161,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              225,
              131,
              144,
              44,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              157,
              225,
              131,
              167,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              152,
              225,
              131,
              151,
              32,
              225,
              131,
              158,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              146,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              32,
              225,
              131,
              168,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              164,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              165,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              163,
              225,
              131,
              168,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              144,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              155,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              157,
              225,
              131,
              149,
              225,
              131,
              144,
              225,
              131,
              156,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              155,
              225,
              131,
              158,
              225,
              131,
              152,
              225,
              131,
              163,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              163,
              225,
              131,
              154,
              32,
              225,
              131,
              161,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              82,
              117,
              115,
              115,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              99,
              111,
              110,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              32,
              105,
              110,
              118,
              105,
              116,
              97,
              116,
              105,
              111,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              151,
              208,
              176,
              209,
              128,
              208,
              181,
              208,
              179,
              208,
              184,
              209,
              129,
              209,
              130,
              209,
              128,
              208,
              184,
              209,
              128,
              209,
              131,
              208,
              185,
              209,
              130,
              208,
              181,
              209,
              129,
              209,
              140,
              32,
              209,
              129,
              208,
              181,
              208,
              185,
              209,
              135,
              208,
              176,
              209,
              129,
              32,
              208,
              189,
              208,
              176,
              32,
              208,
              148,
              208,
              181,
              209,
              129,
              209,
              143,
              209,
              130,
              209,
              131,
              209,
              142,
              32,
              208,
              156,
              208,
              181,
              208,
              182,
              208,
              180,
              209,
              131,
              208,
              189,
              208,
              176,
              209,
              128,
              208,
              190,
              208,
              180,
              208,
              189,
              209,
              131,
              209,
              142,
              32,
              208,
              154,
              208,
              190,
              208,
              189,
              209,
              132,
              208,
              181,
              209,
              128,
              208,
              181,
              208,
              189,
              209,
              134,
              208,
              184,
              209,
              142,
              32,
              208,
              191,
              208,
              190,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              208,
              186,
              208,
              190,
              209,
              130,
              208,
              190,
              209,
              128,
              208,
              176,
              209,
              143,
              32,
              209,
              129,
              208,
              190,
              209,
              129,
              209,
              130,
              208,
              190,
              208,
              184,
              209,
              130,
              209,
              129,
              209,
              143,
              32,
              49,
              48,
              45,
              49,
              50,
              32,
              208,
              188,
              208,
              176,
              209,
              128,
              209,
              130,
              208,
              176,
              32,
              49,
              57,
              57,
              55,
              32,
              208,
              179,
              208,
              190,
              208,
              180,
              208,
              176,
              32,
              208,
              178,
              32,
              208,
              156,
              208,
              176,
              208,
              185,
              208,
              189,
              209,
              134,
              208,
              181,
              32,
              208,
              178,
              32,
              208,
              147,
              208,
              181,
              209,
              128,
              208,
              188,
              208,
              176,
              208,
              189,
              208,
              184,
              208,
              184,
              46,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              154,
              208,
              190,
              208,
              189,
              209,
              132,
              208,
              181,
              209,
              128,
              208,
              181,
              208,
              189,
              209,
              134,
              208,
              184,
              209,
              143,
              32,
              209,
              129,
              208,
              190,
              208,
              177,
              208,
              181,
              209,
              128,
              208,
              181,
              209,
              130,
              32,
              209,
              136,
              208,
              184,
              209,
              128,
              208,
              190,
              208,
              186,
              208,
              184,
              208,
              185,
              32,
              208,
              186,
              209,
              128,
              209,
              131,
              208,
              179,
              32,
              209,
              141,
              208,
              186,
              209,
              129,
              208,
              191,
              208,
              181,
              209,
              128,
              209,
              130,
              208,
              190,
              208,
              178,
              32,
              208,
              191,
              208,
              190,
              32,
              32,
              208,
              178,
              208,
              190,
              208,
              191,
              209,
              128,
              208,
              190,
              209,
              129,
              208,
              176,
              208,
              188,
              32,
              208,
              179,
              208,
              187,
              208,
              190,
              208,
              177,
              208,
              176,
              208,
              187,
              209,
              140,
              208,
              189,
              208,
              190,
              208,
              179,
              208,
              190,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              152,
              208,
              189,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              208,
              181,
              209,
              130,
              208,
              176,
              32,
              208,
              184,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              208,
              187,
              208,
              190,
              208,
              186,
              208,
              176,
              208,
              187,
              208,
              184,
              208,
              183,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              184,
              32,
              208,
              184,
              32,
              208,
              184,
              208,
              189,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              190,
              208,
              189,
              208,
              176,
              208,
              187,
              208,
              184,
              208,
              183,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              184,
              44,
              32,
              208,
              178,
              208,
              190,
              208,
              191,
              208,
              187,
              208,
              190,
              209,
              137,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              142,
              32,
              208,
              184,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              191,
              209,
              128,
              208,
              184,
              208,
              188,
              208,
              181,
              208,
              189,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              142,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              208,
              178,
              32,
              209,
              128,
              208,
              176,
              208,
              183,
              208,
              187,
              208,
              184,
              209,
              135,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              208,
              190,
              208,
              191,
              208,
              181,
              209,
              128,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              190,
              208,
              189,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              209,
              129,
              208,
              184,
              209,
              129,
              209,
              130,
              208,
              181,
              208,
              188,
              208,
              176,
              209,
              133,
              32,
              208,
              184,
              32,
              208,
              191,
              209,
              128,
              208,
              190,
              208,
              179,
              209,
              128,
              208,
              176,
              208,
              188,
              208,
              188,
              208,
              189,
              209,
              139,
              209,
              133,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              191,
              209,
              128,
              208,
              184,
              208,
              187,
              208,
              190,
              208,
              182,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              143,
              209,
              133,
              44,
              32,
              209,
              136,
              209,
              128,
              208,
              184,
              209,
              132,
              209,
              130,
              208,
              176,
              209,
              133,
              44,
              32,
              208,
              178,
              208,
              181,
              209,
              128,
              209,
              129,
              209,
              130,
              208,
              186,
              208,
              181,
              32,
              208,
              184,
              32,
              208,
              188,
              208,
              189,
              208,
              190,
              208,
              179,
              208,
              190,
              209,
              143,
              208,
              183,
              209,
              139,
              209,
              135,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              208,
              186,
              208,
              190,
              208,
              188,
              208,
              191,
              209,
              140,
              209,
              142,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              209,
              129,
              208,
              184,
              209,
              129,
              209,
              130,
              208,
              181,
              208,
              188,
              208,
              176,
              209,
              133,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              97,
              105,
              32,
              40,
              85,
              67,
              83,
              32,
              76,
              101,
              118,
              101,
              108,
              32,
              50,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              69,
              120,
              99,
              101,
              114,
              112,
              116,
              32,
              102,
              114,
              111,
              109,
              32,
              97,
              32,
              112,
              111,
              101,
              116,
              114,
              121,
              32,
              111,
              110,
              32,
              84,
              104,
              101,
              32,
              82,
              111,
              109,
              97,
              110,
              99,
              101,
              32,
              111,
              102,
              32,
              84,
              104,
              101,
              32,
              84,
              104,
              114,
              101,
              101,
              32,
              75,
              105,
              110,
              103,
              100,
              111,
              109,
              115,
              32,
              40,
              97,
              32,
              67,
              104,
              105,
              110,
              101,
              115,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              99,
              108,
              97,
              115,
              115,
              105,
              99,
              32,
              39,
              83,
              97,
              110,
              32,
              71,
              117,
              97,
              39,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              91,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              124,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              93,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              143,
              32,
              224,
              185,
              129,
              224,
              184,
              156,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              184,
              148,
              224,
              184,
              180,
              224,
              184,
              153,
              224,
              184,
              174,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              170,
              224,
              184,
              183,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              184,
              161,
              224,
              185,
              130,
              224,
              184,
              151,
              224,
              184,
              163,
              224,
              184,
              161,
              224,
              185,
              129,
              224,
              184,
              170,
              224,
              184,
              153,
              224,
              184,
              170,
              224,
              184,
              177,
              224,
              184,
              135,
              224,
              185,
              128,
              224,
              184,
              167,
              224,
              184,
              138,
              32,
              32,
              224,
              184,
              158,
              224,
              184,
              163,
              224,
              184,
              176,
              224,
              184,
              155,
              224,
              184,
              129,
              224,
              185,
              128,
              224,
              184,
              129,
              224,
              184,
              168,
              224,
              184,
              129,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              154,
              224,
              184,
              185,
              224,
              185,
              138,
              224,
              184,
              129,
              224,
              184,
              185,
              224,
              185,
              137,
              224,
              184,
              130,
              224,
              184,
              182,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              185,
              131,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              185,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              170,
              224,
              184,
              180,
              224,
              184,
              154,
              224,
              184,
              170,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              129,
              224,
              184,
              169,
              224,
              184,
              177,
              224,
              184,
              149,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              162,
              224,
              185,
              140,
              224,
              184,
              129,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              184,
              153,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              185,
              129,
              224,
              184,
              165,
              224,
              184,
              150,
              224,
              184,
              177,
              224,
              184,
              148,
              224,
              185,
              132,
              224,
              184,
              155,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              170,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              132,
              224,
              185,
              140,
              224,
              185,
              132,
              224,
              184,
              139,
              224,
              184,
              163,
              224,
              185,
              137,
              224,
              185,
              130,
              224,
              184,
              135,
              224,
              185,
              136,
              224,
              185,
              128,
              224,
              184,
              130,
              224,
              184,
              165,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              154,
              224,
              184,
              178,
              224,
              184,
              155,
              224,
              184,
              177,
              224,
              184,
              141,
              224,
              184,
              141,
              224,
              184,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              151,
              224,
              184,
              163,
              224,
              184,
              135,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              150,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              130,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              151,
              224,
              184,
              181,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              151,
              224,
              184,
              181,
              224,
              185,
              136,
              224,
              184,
              158,
              224,
              184,
              182,
              224,
              185,
              136,
              224,
              184,
              135,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              154,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              136,
              224,
              184,
              182,
              224,
              184,
              135,
              224,
              184,
              167,
              224,
              184,
              180,
              224,
              184,
              155,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              149,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              184,
              129,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              184,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              130,
              224,
              184,
              174,
              224,
              184,
              136,
              224,
              184,
              180,
              224,
              185,
              139,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              163,
              224,
              184,
              181,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              151,
              224,
              184,
              177,
              224,
              184,
              158,
              224,
              184,
              151,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              167,
              224,
              184,
              171,
              224,
              184,
              177,
              224,
              184,
              167,
              224,
              185,
              128,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              161,
              224,
              184,
              178,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              184,
              162,
              224,
              184,
              136,
              224,
              184,
              176,
              224,
              184,
              134,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              161,
              224,
              184,
              148,
              224,
              184,
              138,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              167,
              224,
              184,
              149,
              224,
              184,
              177,
              224,
              184,
              167,
              224,
              184,
              170,
              224,
              184,
              179,
              224,
              184,
              132,
              224,
              184,
              177,
              224,
              184,
              141,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              128,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              153,
              224,
              184,
              130,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              185,
              132,
              224,
              184,
              170,
              224,
              185,
              132,
              224,
              184,
              165,
              224,
              185,
              136,
              224,
              185,
              128,
              224,
              184,
              170,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              136,
              224,
              184,
              178,
              224,
              184,
              129,
              224,
              185,
              128,
              224,
              184,
              132,
              224,
              184,
              171,
              224,
              184,
              178,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              163,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              184,
              155,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              130,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              165,
              224,
              184,
              162,
              224,
              184,
              173,
              224,
              184,
              178,
              224,
              184,
              170,
              224,
              184,
              177,
              224,
              184,
              141,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              157,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              162,
              224,
              184,
              173,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              184,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              184,
              162,
              224,
              184,
              184,
              224,
              185,
              129,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              185,
              131,
              224,
              184,
              171,
              224,
              185,
              137,
              224,
              185,
              129,
              224,
              184,
              149,
              224,
              184,
              129,
              224,
              184,
              129,
              224,
              184,
              177,
              224,
              184,
              153,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              131,
              224,
              184,
              138,
              224,
              185,
              137,
              224,
              184,
              170,
              224,
              184,
              178,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              153,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              183,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              185,
              131,
              224,
              184,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              158,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              165,
              224,
              184,
              180,
              224,
              184,
              137,
              224,
              184,
              184,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              184,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              181,
              224,
              184,
              129,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              129,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              185,
              128,
              224,
              184,
              171,
              224,
              184,
              149,
              224,
              184,
              184,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              138,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              158,
              224,
              184,
              168,
              224,
              184,
              136,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              135,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              184,
              178,
              224,
              184,
              159,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              163,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              185,
              132,
              224,
              184,
              171,
              224,
              185,
              137,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              149,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              163,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              178,
              224,
              184,
              134,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              159,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              136,
              224,
              184,
              153,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              163,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              162,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              164,
              224,
              185,
              133,
              224,
              184,
              171,
              224,
              184,
              178,
              224,
              185,
              131,
              224,
              184,
              132,
              224,
              184,
              163,
              224,
              184,
              132,
              224,
              185,
              137,
              224,
              184,
              179,
              224,
              184,
              138,
              224,
              184,
              185,
              224,
              184,
              129,
              224,
              184,
              185,
              224,
              185,
              137,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              163,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              135,
              224,
              184,
              129,
              224,
              185,
              140,
              32,
              224,
              184,
              175,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              84,
              104,
              101,
              32,
              97,
              98,
              111,
              118,
              101,
              32,
              105,
              115,
              32,
              97,
              32,
              116,
              119,
              111,
              45,
              99,
              111,
              108,
              117,
              109,
              110,
              32,
              116,
              101,
              120,
              116,
              46,
              32,
              73,
              102,
              32,
              99,
              111,
              109,
              98,
              105,
              110,
              105,
              110,
              103,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              115,
              32,
              97,
              114,
              101,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              100,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              108,
              121,
              44,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              110,
              101,
              115,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              111,
              110,
              100,
              32,
              99,
              111,
              108,
              117,
              109,
              110,
              32,
              115,
              104,
              111,
              117,
              108,
              100,
              32,
              98,
              101,
              32,
              97,
              108,
              105,
              103,
              110,
              101,
              100,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              124,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              32,
              97,
              98,
              111,
              118,
              101,
              46,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              69,
              116,
              104,
              105,
              111,
              112,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              80,
              114,
              111,
              118,
              101,
              114,
              98,
              115,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              65,
              109,
              104,
              97,
              114,
              105,
              99,
              32,
              108,
              97,
              110,
              103,
              117,
              97,
              103,
              101,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              176,
              225,
              136,
              155,
              225,
              139,
              173,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              179,
              225,
              136,
              168,
              225,
              136,
              181,
              32,
              225,
              138,
              149,
              225,
              140,
              137,
              225,
              136,
              165,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              138,
              168,
              225,
              136,
              176,
              225,
              136,
              181,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              165,
              225,
              136,
              139,
              32,
              225,
              138,
              171,
              225,
              136,
              136,
              225,
              138,
              157,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              225,
              138,
              160,
              225,
              137,
              163,
              225,
              137,
              180,
              32,
              225,
              137,
              160,
              225,
              137,
              134,
              225,
              136,
              152,
              225,
              140,
              160,
              225,
              138,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              140,
              140,
              225,
              140,
              165,
              32,
              225,
              139,
              171,
              225,
              136,
              136,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              137,
              129,
              225,
              136,
              157,
              225,
              140,
              165,
              225,
              138,
              147,
              32,
              225,
              138,
              144,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              176,
              225,
              136,
              128,
              32,
              225,
              137,
              160,
              225,
              136,
              149,
              225,
              136,
              141,
              225,
              136,
              153,
              32,
              225,
              137,
              133,
              225,
              137,
              164,
              32,
              225,
              137,
              163,
              225,
              139,
              173,
              225,
              140,
              160,
              225,
              140,
              163,
              32,
              225,
              138,
              149,
              225,
              140,
              163,
              225,
              137,
              181,
              32,
              225,
              137,
              160,
              225,
              140,
              136,
              225,
              139,
              176,
              225,
              136,
              136,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              138,
              160,
              225,
              141,
              141,
              32,
              225,
              139,
              136,
              225,
              136,
              136,
              225,
              136,
              157,
              225,
              137,
              179,
              32,
              225,
              137,
              160,
              225,
              137,
              133,
              225,
              137,
              164,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              179,
              225,
              136,
              189,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              140,
              165,
              32,
              225,
              137,
              160,
              225,
              137,
              160,
              225,
              136,
              139,
              32,
              225,
              139,
              179,
              225,
              139,
              139,
              32,
              225,
              137,
              176,
              225,
              136,
              152,
              225,
              137,
              179,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              178,
              225,
              137,
              176,
              225,
              136,
              168,
              225,
              140,
              137,
              225,
              136,
              153,
              32,
              225,
              139,
              173,
              225,
              139,
              176,
              225,
              136,
              168,
              225,
              140,
              141,
              225,
              136,
              153,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              128,
              225,
              136,
              181,
              32,
              225,
              137,
              160,
              225,
              137,
              128,
              225,
              136,
              181,
              225,
              141,
              165,
              32,
              225,
              139,
              149,
              225,
              138,
              149,
              225,
              137,
              129,
              225,
              136,
              139,
              225,
              136,
              141,
              32,
              225,
              137,
              160,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              136,
              169,
              32,
              225,
              139,
              173,
              225,
              136,
              132,
              225,
              139,
              179,
              225,
              136,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              181,
              225,
              136,
              173,
              32,
              225,
              137,
              162,
              225,
              139,
              171,
              225,
              137,
              165,
              225,
              136,
              173,
              32,
              225,
              138,
              160,
              225,
              138,
              149,
              225,
              137,
              160,
              225,
              136,
              179,
              32,
              225,
              139,
              171,
              225,
              136,
              181,
              225,
              136,
              173,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              176,
              225,
              139,
              141,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              140,
              133,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              32,
              225,
              140,
              137,
              225,
              136,
              168,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              176,
              225,
              139,
              179,
              225,
              139,
              176,
              225,
              136,
              173,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              139,
              156,
              225,
              136,
              173,
              32,
              225,
              139,
              168,
              225,
              138,
              168,
              225,
              141,
              136,
              225,
              137,
              176,
              225,
              139,
              141,
              225,
              138,
              149,
              32,
              225,
              140,
              137,
              225,
              136,
              174,
              225,
              136,
              174,
              32,
              225,
              136,
              179,
              225,
              139,
              173,
              225,
              139,
              152,
              225,
              140,
              139,
              225,
              139,
              141,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              139,
              181,
              225,
              136,
              173,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              140,
              142,
              225,
              136,
              168,
              225,
              137,
              164,
              225,
              137,
              181,
              32,
              225,
              136,
              140,
              225,
              137,
              163,
              225,
              141,
              165,
              32,
              225,
              137,
              162,
              225,
              139,
              171,
              225,
              139,
              169,
              225,
              137,
              181,
              32,
              225,
              139,
              173,
              225,
              136,
              181,
              225,
              137,
              133,
              32,
              225,
              137,
              163,
              225,
              139,
              171,
              225,
              139,
              169,
              225,
              137,
              181,
              32,
              225,
              139,
              171,
              225,
              140,
              160,
              225,
              136,
              141,
              225,
              137,
              133,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              165,
              225,
              136,
              171,
              32,
              225,
              138,
              168,
              225,
              136,
              152,
              225,
              141,
              141,
              225,
              137,
              179,
              225,
              137,
              181,
              32,
              225,
              136,
              141,
              225,
              140,
              132,
              225,
              138,
              149,
              32,
              225,
              136,
              139,
              225,
              141,
              139,
              225,
              137,
              179,
              225,
              137,
              181,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              147,
              225,
              137,
              163,
              225,
              139,
              173,
              32,
              225,
              136,
              155,
              225,
              139,
              176,
              225,
              136,
              170,
              225,
              139,
              171,
              32,
              225,
              139,
              168,
              225,
              136,
              136,
              225,
              139,
              141,
              225,
              141,
              165,
              32,
              225,
              140,
              141,
              225,
              138,
              149,
              225,
              139,
              181,
              32,
              225,
              139,
              173,
              225,
              139,
              158,
              32,
              225,
              139,
              173,
              225,
              139,
              158,
              225,
              136,
              171,
              225,
              136,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              138,
              165,
              225,
              136,
              181,
              225,
              136,
              139,
              225,
              136,
              157,
              32,
              225,
              138,
              160,
              225,
              140,
              136,
              225,
              136,
              169,
              32,
              225,
              136,
              152,
              225,
              138,
              171,
              32,
              225,
              139,
              168,
              225,
              138,
              160,
              225,
              136,
              158,
              225,
              136,
              171,
              32,
              225,
              138,
              160,
              225,
              140,
              136,
              225,
              136,
              169,
              32,
              225,
              139,
              139,
              225,
              136,
              173,
              225,
              138,
              171,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              176,
              225,
              138,
              149,
              225,
              140,
              139,
              225,
              136,
              142,
              32,
              225,
              137,
              162,
              225,
              137,
              176,
              225,
              141,
              137,
              32,
              225,
              137,
              176,
              225,
              136,
              152,
              225,
              136,
              141,
              225,
              136,
              182,
              32,
              225,
              137,
              163,
              225,
              141,
              137,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              136,
              225,
              139,
              179,
              225,
              140,
              133,
              225,
              136,
              133,
              32,
              225,
              136,
              155,
              225,
              136,
              173,
              32,
              225,
              137,
              162,
              225,
              136,
              134,
              225,
              138,
              149,
              32,
              225,
              140,
              168,
              225,
              136,
              173,
              225,
              136,
              181,
              225,
              136,
              133,
              32,
              225,
              138,
              160,
              225,
              137,
              181,
              225,
              136,
              139,
              225,
              136,
              176,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              136,
              173,
              225,
              136,
              133,
              225,
              138,
              149,
              32,
              225,
              137,
              160,
              225,
              141,
              141,
              225,
              136,
              171,
              225,
              136,
              189,
              225,
              136,
              133,
              32,
              225,
              136,
              141,
              225,
              138,
              173,
              32,
              225,
              139,
              152,
              225,
              136,
              173,
              225,
              140,
              139,
              225,
              141,
              162,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              82,
              117,
              110,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              154,
              187,
              225,
              155,
              150,
              32,
              225,
              154,
              179,
              225,
              154,
              185,
              225,
              154,
              171,
              225,
              154,
              166,
              32,
              225,
              154,
              166,
              225,
              154,
              171,
              225,
              155,
              143,
              32,
              225,
              154,
              187,
              225,
              155,
              150,
              32,
              225,
              155,
              146,
              225,
              154,
              162,
              225,
              155,
              158,
              225,
              155,
              150,
              32,
              225,
              154,
              169,
              225,
              154,
              190,
              32,
              225,
              154,
              166,
              225,
              154,
              171,
              225,
              155,
              151,
              32,
              225,
              155,
              154,
              225,
              154,
              170,
              225,
              154,
              190,
              225,
              155,
              158,
              225,
              155,
              150,
              32,
              225,
              154,
              190,
              225,
              154,
              169,
              225,
              154,
              177,
              225,
              154,
              166,
              225,
              154,
              185,
              225,
              155,
              150,
              225,
              154,
              170,
              225,
              154,
              177,
              225,
              155,
              158,
              225,
              154,
              162,
              225,
              155,
              151,
              32,
              225,
              154,
              185,
              225,
              155,
              129,
              225,
              154,
              166,
              32,
              225,
              154,
              166,
              225,
              154,
              170,
              32,
              225,
              154,
              185,
              225,
              155,
              150,
              225,
              155,
              165,
              225,
              154,
              171,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              79,
              108,
              100,
              32,
              69,
              110,
              103,
              108,
              105,
              115,
              104,
              44,
              32,
              119,
              104,
              105,
              99,
              104,
              32,
              116,
              114,
              97,
              110,
              115,
              99,
              114,
              105,
              98,
              101,
              100,
              32,
              105,
              110,
              116,
              111,
              32,
              76,
              97,
              116,
              105,
              110,
              32,
              114,
              101,
              97,
              100,
              115,
              32,
              39,
              72,
              101,
              32,
              99,
              119,
              97,
              101,
              116,
              104,
              32,
              116,
              104,
              97,
              116,
              32,
              104,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              98,
              117,
              100,
              101,
              32,
              116,
              104,
              97,
              101,
              109,
              32,
              108,
              97,
              110,
              100,
              101,
              32,
              110,
              111,
              114,
              116,
              104,
              119,
              101,
              97,
              114,
              100,
              117,
              109,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              97,
              32,
              87,
              101,
              115,
              116,
              115,
              97,
              101,
              46,
              39,
              32,
              97,
              110,
              100,
              32,
              109,
              101,
              97,
              110,
              115,
              32,
              39,
              72,
              101,
              32,
              115,
              97,
              105,
              100,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              116,
              104,
              97,
              116,
              32,
              104,
              101,
              32,
              108,
              105,
              118,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              110,
              111,
              114,
              116,
              104,
              101,
              114,
              110,
              32,
              108,
              97,
              110,
              100,
              32,
              110,
              101,
              97,
              114,
              32,
              116,
              104,
              101,
              32,
              87,
              101,
              115,
              116,
              101,
              114,
              110,
              32,
              83,
              101,
              97,
              46,
              39,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              66,
              114,
              97,
              105,
              108,
              108,
              101,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              140,
              226,
              160,
              129,
              226,
              160,
              167,
              226,
              160,
              145,
              32,
              226,
              160,
              188,
              226,
              160,
              129,
              226,
              160,
              146,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              161,
              163,
              226,
              160,
              149,
              226,
              160,
              140,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              146,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              131,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              148,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              185,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              157,
              226,
              160,
              149,
              32,
              226,
              160,
              153,
              226,
              160,
              179,
              226,
              160,
              131,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              177,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              145,
              226,
              160,
              167,
              226,
              160,
              187,
              32,
              226,
              160,
              129,
              226,
              160,
              131,
              226,
              160,
              179,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              138,
              226,
              160,
              140,
              226,
              160,
              187,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              131,
              226,
              160,
              165,
              226,
              160,
              151,
              226,
              160,
              138,
              226,
              160,
              129,
              226,
              160,
              135,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              155,
              226,
              160,
              157,
              226,
              160,
              171,
              32,
              226,
              160,
              131,
              226,
              160,
              185,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              187,
              226,
              160,
              155,
              226,
              160,
              185,
              226,
              160,
              141,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              187,
              226,
              160,
              133,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              165,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              187,
              226,
              160,
              158,
              226,
              160,
              129,
              226,
              160,
              133,
              226,
              160,
              187,
              226,
              160,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              161,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              139,
              32,
              226,
              160,
              141,
              226,
              160,
              179,
              226,
              160,
              151,
              226,
              160,
              157,
              226,
              160,
              187,
              226,
              160,
              178,
              32,
              226,
              161,
              142,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              155,
              226,
              160,
              145,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              155,
              226,
              160,
              157,
              226,
              160,
              171,
              32,
              226,
              160,
              138,
              226,
              160,
              158,
              226,
              160,
              178,
              32,
              226,
              161,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              142,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              141,
              226,
              160,
              145,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              155,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              153,
              32,
              226,
              160,
              165,
              226,
              160,
              143,
              226,
              160,
              149,
              226,
              160,
              157,
              32,
              226,
              160,
              176,
              226,
              161,
              161,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              130,
              32,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              185,
              226,
              160,
              185,
              226,
              160,
              148,
              226,
              160,
              155,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              161,
              226,
              160,
              149,
              226,
              160,
              142,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              143,
              226,
              160,
              165,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              149,
              226,
              160,
              135,
              226,
              160,
              153,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              148,
              226,
              160,
              153,
              226,
              160,
              150,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              176,
              226,
              160,
              158,
              32,
              226,
              160,
              141,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              157,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              142,
              226,
              160,
              129,
              226,
              160,
              185,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              133,
              226,
              160,
              157,
              226,
              160,
              170,
              226,
              160,
              130,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              170,
              226,
              160,
              157,
              32,
              226,
              160,
              133,
              226,
              160,
              157,
              226,
              160,
              170,
              226,
              160,
              135,
              226,
              160,
              171,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              130,
              32,
              226,
              160,
              177,
              226,
              160,
              129,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              143,
              226,
              160,
              156,
              226,
              160,
              158,
              226,
              160,
              138,
              226,
              160,
              138,
              226,
              160,
              165,
              226,
              160,
              135,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              185,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              131,
              226,
              160,
              179,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              163,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              167,
              226,
              160,
              145,
              32,
              226,
              160,
              131,
              226,
              160,
              145,
              226,
              160,
              178,
              32,
              226,
              160,
              148,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              148,
              226,
              160,
              171,
              226,
              160,
              130,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              226,
              160,
              142,
              226,
              160,
              145,
              226,
              160,
              135,
              226,
              160,
              139,
              226,
              160,
              130,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              156,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              138,
              226,
              160,
              149,
              226,
              160,
              139,
              226,
              160,
              139,
              226,
              160,
              148,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              140,
              32,
              226,
              160,
              143,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              138,
              226,
              160,
              145,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              141,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              155,
              226,
              160,
              187,
              226,
              160,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              148,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              151,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              178,
              32,
              226,
              161,
              131,
              226,
              160,
              165,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              142,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              141,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              179,
              226,
              160,
              151,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              140,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              148,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              134,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              32,
              226,
              160,
              165,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              226,
              160,
              170,
              226,
              160,
              171,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              169,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              32,
              226,
              160,
              157,
              226,
              160,
              149,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              140,
              226,
              160,
              165,
              226,
              160,
              151,
              226,
              160,
              131,
              32,
              226,
              160,
              138,
              226,
              160,
              158,
              226,
              160,
              130,
              32,
              226,
              160,
              149,
              226,
              160,
              151,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              161,
              138,
              226,
              160,
              179,
              226,
              160,
              157,
              226,
              160,
              158,
              226,
              160,
              151,
              226,
              160,
              185,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              145,
              32,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              135,
              32,
              226,
              160,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              145,
              32,
              226,
              160,
              143,
              226,
              160,
              187,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              158,
              32,
              226,
              160,
              141,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              143,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              130,
              32,
              226,
              160,
              145,
              226,
              160,
              141,
              226,
              160,
              143,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              138,
              226,
              160,
              138,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              226,
              160,
              185,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              84,
              104,
              101,
              32,
              102,
              105,
              114,
              115,
              116,
              32,
              99,
              111,
              117,
              112,
              108,
              101,
              32,
              111,
              102,
              32,
              112,
              97,
              114,
              97,
              103,
              114,
              97,
              112,
              104,
              115,
              32,
              111,
              102,
              32,
              34,
              65,
              32,
              67,
              104,
              114,
              105,
              115,
              116,
              109,
              97,
              115,
              32,
              67,
              97,
              114,
              111,
              108,
              34,
              32,
              98,
              121,
              32,
              68,
              105,
              99,
              107,
              101,
              110,
              115,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              67,
              111,
              109,
              112,
              97,
              99,
              116,
              32,
              102,
              111,
              110,
              116,
              32,
              115,
              101,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              32,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              32,
              116,
              101,
              120,
              116,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              32,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              32,
              194,
              163,
              194,
              169,
              194,
              181,
              195,
              128,
              195,
              134,
              195,
              150,
              195,
              158,
              195,
              159,
              195,
              169,
              195,
              182,
              195,
              191,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              128,
              147,
              226,
              128,
              148,
              226,
              128,
              152,
              226,
              128,
              156,
              226,
              128,
              157,
              226,
              128,
              158,
              226,
              128,
              160,
              226,
              128,
              162,
              226,
              128,
              166,
              226,
              128,
              176,
              226,
              132,
              162,
              197,
              147,
              197,
              160,
              197,
              184,
              197,
              190,
              226,
              130,
              172,
              32,
              206,
              145,
              206,
              146,
              206,
              147,
              206,
              148,
              206,
              169,
              206,
              177,
              206,
              178,
              206,
              179,
              206,
              180,
              207,
              137,
              32,
              208,
              144,
              208,
              145,
              208,
              146,
              208,
              147,
              208,
              148,
              208,
              176,
              208,
              177,
              208,
              178,
              208,
              179,
              208,
              180,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              128,
              226,
              136,
              130,
              226,
              136,
              136,
              226,
              132,
              157,
              226,
              136,
              167,
              226,
              136,
              170,
              226,
              137,
              161,
              226,
              136,
              158,
              32,
              226,
              134,
              145,
              226,
              134,
              151,
              226,
              134,
              168,
              226,
              134,
              187,
              226,
              135,
              163,
              32,
              226,
              148,
              144,
              226,
              148,
              188,
              226,
              149,
              148,
              226,
              149,
              152,
              226,
              150,
              145,
              226,
              150,
              186,
              226,
              152,
              186,
              226,
              153,
              128,
              32,
              239,
              172,
              129,
              239,
              191,
              189,
              226,
              145,
              128,
              226,
              130,
              130,
              225,
              188,
              160,
              225,
              184,
              130,
              211,
              165,
              225,
              186,
              132,
              201,
              144,
              203,
              144,
              226,
              141,
              142,
              215,
              144,
              212,
              177,
              225,
              131,
              144,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              114,
              101,
              101,
              116,
              105,
              110,
              103,
              115,
              32,
              105,
              110,
              32,
              118,
              97,
              114,
              105,
              111,
              117,
              115,
              32,
              108,
              97,
              110,
              103,
              117,
              97,
              103,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              72,
              101,
              108,
              108,
              111,
              32,
              119,
              111,
              114,
              108,
              100,
              44,
              32,
              206,
              154,
              206,
              177,
              206,
              187,
              206,
              183,
              206,
              188,
              225,
              189,
              179,
              207,
              129,
              206,
              177,
              32,
              206,
              186,
              225,
              189,
              185,
              207,
              131,
              206,
              188,
              206,
              181,
              44,
              32,
              227,
              130,
              179,
              227,
              131,
              179,
              227,
              131,
              139,
              227,
              131,
              129,
              227,
              131,
              143,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              66,
              111,
              120,
              32,
              100,
              114,
              97,
              119,
              105,
              110,
              103,
              32,
              97,
              108,
              105,
              103,
              110,
              109,
              101,
              110,
              116,
              32,
              116,
              101,
              115,
              116,
              115,
              58,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              137,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              166,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              151,
              32,
              32,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              144,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              226,
              148,
              143,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              179,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              147,
              32,
              32,
              226,
              148,
              142,
              226,
              148,
              146,
              226,
              148,
              143,
              226,
              148,
              145,
              32,
              32,
              32,
              226,
              149,
              183,
              32,
              32,
              226,
              149,
              187,
              32,
              226,
              148,
              143,
              226,
              148,
              175,
              226,
              148,
              147,
              32,
              226,
              148,
              140,
              226,
              148,
              176,
              226,
              148,
              144,
              32,
              32,
              32,
              32,
              226,
              150,
              138,
              32,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              149,
              168,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              167,
              226,
              149,
              144,
              226,
              149,
              151,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              146,
              226,
              149,
              144,
              226,
              149,
              170,
              226,
              149,
              144,
              226,
              149,
              149,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              147,
              226,
              148,
              128,
              226,
              149,
              129,
              226,
              148,
              128,
              226,
              149,
              150,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              148,
              131,
              32,
              32,
              226,
              148,
              151,
              226,
              149,
              131,
              226,
              149,
              132,
              226,
              148,
              153,
              32,
              32,
              226,
              149,
              182,
              226,
              148,
              188,
              226,
              149,
              180,
              226,
              149,
              186,
              226,
              149,
              139,
              226,
              149,
              184,
              226,
              148,
              160,
              226,
              148,
              188,
              226,
              148,
              168,
              32,
              226,
              148,
              157,
              226,
              149,
              139,
              226,
              148,
              165,
              32,
              32,
              32,
              32,
              226,
              150,
              139,
              32,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              226,
              149,
              178,
              32,
              226,
              149,
              177,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              226,
              148,
              131,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              130,
              32,
              226,
              149,
              191,
              32,
              226,
              148,
              130,
              226,
              148,
              131,
              32,
              32,
              226,
              148,
              141,
              226,
              149,
              133,
              226,
              149,
              134,
              226,
              148,
              147,
              32,
              32,
              32,
              226,
              149,
              181,
              32,
              32,
              226,
              149,
              185,
              32,
              226,
              148,
              151,
              226,
              148,
              183,
              226,
              148,
              155,
              32,
              226,
              148,
              148,
              226,
              148,
              184,
              226,
              148,
              152,
              32,
              32,
              32,
              32,
              226,
              150,
              140,
              32,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              160,
              226,
              149,
              161,
              32,
              226,
              149,
              179,
              32,
              226,
              149,
              158,
              226,
              149,
              163,
              32,
              32,
              226,
              148,
              156,
              226,
              149,
              162,
              32,
              32,
              32,
              226,
              149,
              159,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              156,
              226,
              148,
              188,
              226,
              148,
              128,
              226,
              148,
              188,
              226,
              148,
              128,
              226,
              148,
              188,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              156,
              226,
              149,
              171,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              149,
              171,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              163,
              226,
              148,
              191,
              226,
              149,
              190,
              226,
              148,
              188,
              226,
              149,
              188,
              226,
              148,
              191,
              226,
              148,
              171,
              32,
              32,
              226,
              148,
              149,
              226,
              148,
              155,
              226,
              148,
              150,
              226,
              148,
              154,
              32,
              32,
              32,
              32,
              32,
              226,
              148,
              140,
              226,
              148,
              132,
              226,
              148,
              132,
              226,
              148,
              144,
              32,
              226,
              149,
              142,
              32,
              226,
              148,
              143,
              226,
              148,
              133,
              226,
              148,
              133,
              226,
              148,
              147,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              141,
              32,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              226,
              149,
              177,
              32,
              226,
              149,
              178,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              226,
              148,
              131,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              130,
              32,
              226,
              149,
              189,
              32,
              226,
              148,
              130,
              226,
              148,
              131,
              32,
              32,
              226,
              150,
              145,
              226,
              150,
              145,
              226,
              150,
              146,
              226,
              150,
              146,
              226,
              150,
              147,
              226,
              150,
              147,
              226,
              150,
              136,
              226,
              150,
              136,
              32,
              226,
              148,
              138,
              32,
              32,
              226,
              148,
              134,
              32,
              226,
              149,
              142,
              32,
              226,
              149,
              143,
              32,
              32,
              226,
              148,
              135,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              149,
              165,
              226,
              148,
              128,
              226,
              148,
              152,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              164,
              226,
              149,
              144,
              226,
              149,
              157,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              152,
              226,
              149,
              144,
              226,
              149,
              170,
              226,
              149,
              144,
              226,
              149,
              155,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              153,
              226,
              148,
              128,
              226,
              149,
              128,
              226,
              148,
              128,
              226,
              149,
              156,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              148,
              152,
              226,
              148,
              131,
              32,
              32,
              226,
              150,
              145,
              226,
              150,
              145,
              226,
              150,
              146,
              226,
              150,
              146,
              226,
              150,
              147,
              226,
              150,
              147,
              226,
              150,
              136,
              226,
              150,
              136,
              32,
              226,
              148,
              138,
              32,
              32,
              226,
              148,
              134,
              32,
              226,
              149,
              142,
              32,
              226,
              149,
              143,
              32,
              32,
              226,
              148,
              135,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              143,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              169,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              157,
              32,
              32,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              152,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              226,
              148,
              151,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              187,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              155,
              32,
              32,
              226,
              150,
              151,
              226,
              150,
              132,
              226,
              150,
              150,
              226,
              150,
              155,
              226,
              150,
              128,
              226,
              150,
              156,
              32,
              32,
              32,
              226,
              148,
              148,
              226,
              149,
              140,
              226,
              149,
              140,
              226,
              148,
              152,
              32,
              226,
              149,
              142,
              32,
              226,
              148,
              151,
              226,
              149,
              141,
              226,
              149,
              141,
              226,
              148,
              155,
              32,
              226,
              148,
              139,
              32,
              32,
              226,
              150,
              129,
              226,
              150,
              130,
              226,
              150,
              131,
              226,
              150,
              132,
              226,
              150,
              133,
              226,
              150,
              134,
              226,
              150,
              135,
              226,
              150,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              157,
              226,
              150,
              128,
              226,
              150,
              152,
              226,
              150,
              153,
              226,
              150,
              132,
              226,
              150,
              159,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              47,
              112,
              114,
              101,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              47,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              47,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32
            ]
          },
          "cookie": [],
          "responseTime": 199,
          "responseSize": 15630
        },
        "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has charset in content-type header",
            "skipped": false
          },
          {
            "assertion": "response has chunked transfer encoding header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6811bce9-62c8-4f88-94a5-a2dca6124a39",
          "length": 35,
          "cycles": 3,
          "position": 19,
          "iteration": 2,
          "httpRequestId": "cdb06c67-22ce-4619-9743-fef9ea258533"
        },
        "item": {
          "id": "d461228b-6484-4aa6-8de7-b940895741a0",
          "name": "GZip Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "gzip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('gzipped', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'gzip')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*gzip.*/);",
                  "});"
                ],
                "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "gzip"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "59f9dc7c-c770-460d-a2cd-f1443b1da3e0",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ApGYKYZs5KTPbewAk3rB05h5euMmA2Gp7.Fj4iT%2BrCFOOmT%2FBT8KnlbiVQCk52nqDeEdgRVusLtcc",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "038c7e44-d6d2-4597-afe4-1cab082f9c6d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "376"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "ETag",
              "value": "W/\"178-diYA6N9cY5yD6a4samrCLOvIwDo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AZHjzMru2uNXbhduglKdfmvtzMlzDgLDS.Qq%2FDxBFXO7PnMfQasghWltG%2BGCAjiytkkrBbGvz8naE; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              103,
              122,
              105,
              112,
              112,
              101,
              100,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              57,
              48,
              50,
              45,
              54,
              54,
              49,
              97,
              102,
              99,
              97,
              48,
              50,
              100,
              53,
              49,
              99,
              57,
              51,
              97,
              55,
              52,
              50,
              99,
              56,
              99,
              52,
              53,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              53,
              57,
              102,
              57,
              100,
              99,
              55,
              99,
              45,
              99,
              55,
              55,
              48,
              45,
              52,
              54,
              48,
              100,
              45,
              97,
              50,
              99,
              100,
              45,
              102,
              49,
              52,
              52,
              51,
              98,
              49,
              100,
              97,
              51,
              101,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              112,
              71,
              89,
              75,
              89,
              90,
              115,
              53,
              75,
              84,
              80,
              98,
              101,
              119,
              65,
              107,
              51,
              114,
              66,
              48,
              53,
              104,
              53,
              101,
              117,
              77,
              109,
              65,
              50,
              71,
              112,
              55,
              46,
              70,
              106,
              52,
              105,
              84,
              37,
              50,
              66,
              114,
              67,
              70,
              79,
              79,
              109,
              84,
              37,
              50,
              70,
              66,
              84,
              56,
              75,
              110,
              108,
              98,
              105,
              86,
              81,
              67,
              107,
              53,
              50,
              110,
              113,
              68,
              101,
              69,
              100,
              103,
              82,
              86,
              117,
              115,
              76,
              116,
              99,
              99,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              32,
              34,
              71,
              69,
              84,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 119,
          "responseSize": 538
        },
        "id": "d461228b-6484-4aa6-8de7-b940895741a0",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "response headers should indicate valid content encoding",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response headers should indicate valid content encoding",
              "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
              "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:20)"
            }
          },
          {
            "assertion": "requesting http client should accept compressed response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1cad06cd-3942-4dca-b3f4-048027eb4bf4",
          "length": 35,
          "cycles": 3,
          "position": 20,
          "iteration": 2,
          "httpRequestId": "4be9ad82-74c0-488b-a507-5ad6596257a0"
        },
        "item": {
          "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
          "name": "Deflate Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "deflate"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('deflated', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'deflate')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*deflate.*/);",
                  "});"
                ],
                "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "deflate"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9fc7d580-91ea-4f06-b6b9-35c4a65d7b71",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AZHjzMru2uNXbhduglKdfmvtzMlzDgLDS.Qq%2FDxBFXO7PnMfQasghWltG%2BGCAjiytkkrBbGvz8naE",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "416ed1b1-d9ff-453d-b54c-b148a7e665ef",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "371"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Content-Encoding",
              "value": "deflate"
            },
            {
              "key": "ETag",
              "value": "W/\"173-lDo4g5Haa+lMIc8Xs+6EQbpECts\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A5yJqtekI66NbLZiFjO7tTxmm6fitqMD0.5N09uyaP3ruiK49yFvO12L2EbbBwTHyav52X82c%2FoUg; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              100,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              97,
              109,
              122,
              110,
              45,
              116,
              114,
              97,
              99,
              101,
              45,
              105,
              100,
              34,
              58,
              32,
              34,
              82,
              111,
              111,
              116,
              61,
              49,
              45,
              54,
              48,
              54,
              100,
              57,
              57,
              48,
              50,
              45,
              52,
              53,
              102,
              100,
              97,
              51,
              99,
              101,
              49,
              100,
              54,
              51,
              49,
              97,
              51,
              97,
              48,
              48,
              97,
              97,
              49,
              51,
              57,
              52,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              50,
              54,
              46,
              49,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              99,
              104,
              101,
              45,
              99,
              111,
              110,
              116,
              114,
              111,
              108,
              34,
              58,
              32,
              34,
              110,
              111,
              45,
              99,
              97,
              99,
              104,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              32,
              34,
              57,
              102,
              99,
              55,
              100,
              53,
              56,
              48,
              45,
              57,
              49,
              101,
              97,
              45,
              52,
              102,
              48,
              54,
              45,
              98,
              54,
              98,
              57,
              45,
              51,
              53,
              99,
              52,
              97,
              54,
              53,
              100,
              55,
              98,
              55,
              49,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              44,
              32,
              98,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              90,
              72,
              106,
              122,
              77,
              114,
              117,
              50,
              117,
              78,
              88,
              98,
              104,
              100,
              117,
              103,
              108,
              75,
              100,
              102,
              109,
              118,
              116,
              122,
              77,
              108,
              122,
              68,
              103,
              76,
              68,
              83,
              46,
              81,
              113,
              37,
              50,
              70,
              68,
              120,
              66,
              70,
              88,
              79,
              55,
              80,
              110,
              77,
              102,
              81,
              97,
              115,
              103,
              104,
              87,
              108,
              116,
              71,
              37,
              50,
              66,
              71,
              67,
              65,
              106,
              105,
              121,
              116,
              107,
              107,
              114,
              66,
              98,
              71,
              118,
              122,
              56,
              110,
              97,
              69,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              32,
              34,
              71,
              69,
              84,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 113,
          "responseSize": 539
        },
        "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "response headers should indicate valid content encoding",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response headers should indicate valid content encoding",
              "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
              "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:21)"
            }
          },
          {
            "assertion": "requesting http client should accept compressed response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1dc2c316-3819-4f9d-8e6a-2861989da3b7",
          "length": 35,
          "cycles": 3,
          "position": 21,
          "iteration": 2,
          "httpRequestId": "e1121dc3-8a56-499c-a6fd-ebd862a48b98"
        },
        "item": {
          "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
          "name": "IP address in JSON format",
          "request": {
            "description": {
              "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "ip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('ip');",
                  "});",
                  "",
                  "pm.test(\"response must return a valid ip address\", function () {",
                  "    pm.expect(pm.response.json().ip).to",
                  "        // a really gnarly regular expression to ensure that ip address is in correct format",
                  "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                  "});"
                ],
                "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "ip"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "73a9f5f0-a8a8-428f-8a4f-b314ec64ea31",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A5yJqtekI66NbLZiFjO7tTxmm6fitqMD0.5N09uyaP3ruiK49yFvO12L2EbbBwTHyav52X82c%2FoUg",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "a5a52035-2931-4741-a162-7bed0ba05bc4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "21"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"15-VtCIkyiPCnAcTFquxN3mUHAfo0Q\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ANHOK2tktfiZUAfFya9xaZp3YLs9Z6n1o.NLo%2BNQnJvBzEN8ip3k%2FPekjTORsAVqH4fINvjIQEb7s; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              112,
              34,
              58,
              34,
              57,
              48,
              46,
              53,
              48,
              46,
              55,
              55,
              46,
              49,
              51,
              56,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 131,
          "responseSize": 21
        },
        "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response has valid json body",
            "skipped": false
          },
          {
            "assertion": "response must return a valid ip address",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a9a7b17c-14d8-473a-b8b3-750b26f7859f",
          "length": 35,
          "cycles": 3,
          "position": 22,
          "iteration": 2,
          "httpRequestId": "8a012995-91d0-4d4e-9bc4-9c6d301f61aa"
        },
        "item": {
          "id": "a5d4d6d5-bef8-420b-9fbf-e21b8a1e09b1",
          "name": "Current UTC time",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "now"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html"
              },
              "id": "ca211094-b349-4c98-a830-f222b29f8a2e",
              "name": "time as text",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "now"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "49"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:12 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
                }
              ],
              "body": "Wed, 11 Jan 2017 10:27:12 GMT",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73453a52-4137-4f3e-90d6-3984ab6ae36b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response time matches server response 'date' header\", function () {",
                  "    pm.expect(pm.response.text()).to.eql(pm.response.headers.get('date'))",
                  "});"
                ],
                "_lastExecutionId": "f7a8df2d-a923-489f-8590-121c5884959a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "now"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "06577c3c-2c1f-4e57-b231-f31b11ce975a",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ANHOK2tktfiZUAfFya9xaZp3YLs9Z6n1o.NLo%2BNQnJvBzEN8ip3k%2FPekjTORsAVqH4fINvjIQEb7s",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "8c48bcec-65e2-400b-9c85-1b1250cedd4a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:30 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "29"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-ySre0VzGCH963dkh+mNkLK7ti1U\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              87,
              101,
              100,
              44,
              32,
              48,
              55,
              32,
              65,
              112,
              114,
              32,
              50,
              48,
              50,
              49,
              32,
              49,
              49,
              58,
              51,
              53,
              58,
              51,
              48,
              32,
              71,
              77,
              84
            ]
          },
          "cookie": [],
          "responseTime": 126,
          "responseSize": 29
        },
        "id": "a5d4d6d5-bef8-420b-9fbf-e21b8a1e09b1",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response time matches server response 'date' header",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "757e5e4f-bf4a-49ef-936f-386a9fc7811c",
          "length": 35,
          "cycles": 3,
          "position": 23,
          "iteration": 2,
          "httpRequestId": "a49db504-2501-45c8-a3c6-120867e5f5d2"
        },
        "item": {
          "id": "c8d50185-29c4-4f53-9575-c392b4fde8a3",
          "name": "Timestamp validity",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "valid"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6c2c373b-cc8b-4ef5-a76c-c6f0e6fb7d74",
              "name": "Valid Timestamp",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "valid"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": "2016-10-10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:33 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI; Path=/; HttpOnly"
                }
              ],
              "body": "{\"valid\":true}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI"
                }
              ]
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c21cba1a-1042-4723-b43d-63680913a75b",
              "name": "Invalid Timestamp",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "valid"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": "2016-10-10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "15"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:53 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"f-/i9mO/upK91ZtL0BkKFGtw\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI; Path=/; HttpOnly"
                }
              ],
              "body": "{\"valid\":false}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": "2038-01-18T21:44:07.000Z",
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "value": "s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9da491d-4d99-4573-bdac-bcc292514a2f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query time is valid\", function () {",
                  "    pm.response.to.have.jsonBody('valid', true);",
                  "});"
                ],
                "_lastExecutionId": "a32a0c04-31b5-47f2-9b08-cf91e1736bb5"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "valid"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "06309de7-99fc-495d-abfc-4d923d7d535d",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ANHOK2tktfiZUAfFya9xaZp3YLs9Z6n1o.NLo%2BNQnJvBzEN8ip3k%2FPekjTORsAVqH4fINvjIQEb7s",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "55e79bba-bca2-4c3e-8764-a73847aa337d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:31 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"e-3MDSGou3nIOvlBZElUyTiBbaRZY\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              118,
              97,
              108,
              105,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 116,
          "responseSize": 14
        },
        "id": "c8d50185-29c4-4f53-9575-c392b4fde8a3",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say whether request query time is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "480eafcd-67af-4d2f-8502-140df6f7c63d",
          "length": 35,
          "cycles": 3,
          "position": 24,
          "iteration": 2,
          "httpRequestId": "7d3a5676-7670-4bd8-8998-e5c3feeb8ee5"
        },
        "item": {
          "id": "212b68da-fdf7-4975-a19c-6f74e9e808a2",
          "name": "Format timestamp",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "format"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "format",
                  "value": "mm"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "76cec32e-facc-4bac-a014-298db8e01c85",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query time is valid\", function () {",
                  "    pm.response.to.have.jsonBody('format', '20');",
                  "});"
                ],
                "_lastExecutionId": "f4ad9d0e-2682-4be9-b8b2-4ea00c20503e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "format"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "format",
                "value": "mm"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a9929f56-383b-450d-ae2b-b40ba0539a46",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3ANHOK2tktfiZUAfFya9xaZp3YLs9Z6n1o.NLo%2BNQnJvBzEN8ip3k%2FPekjTORsAVqH4fINvjIQEb7s",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "0441fe3d-7313-4ac2-b7c3-52323c49fc0d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:31 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"f-oSXEKZdRgFcBy3nxz+EFgc2p5wo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A-CrzYIlLirRFDQjxNaXfrVzHVTMFiExS.he7MOO08C0DcL8swAbaTqk06x5ttVTuYDObjtQa7KH4; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              114,
              109,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 115,
          "responseSize": 15
        },
        "id": "212b68da-fdf7-4975-a19c-6f74e9e808a2",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say whether request query time is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "422691d5-598e-454b-96c1-957766ac6996",
          "length": 35,
          "cycles": 3,
          "position": 25,
          "iteration": 2,
          "httpRequestId": "db11cbd7-0844-4677-9dd1-dd80d5b55968"
        },
        "item": {
          "id": "f83ababe-7141-4fd7-ad43-0800523e3133",
          "name": "Extract timestamp unit",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "unit"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "unit",
                  "value": "day"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aeef2e27-c75f-4d9c-a45a-44f66e72e74f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query unit is valid\", function () {",
                  "    pm.response.to.have.jsonBody('unit', 1);",
                  "});"
                ],
                "_lastExecutionId": "b2d1ab98-a6ed-48e0-ac6a-85e6d645303d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "unit"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "unit",
                "value": "day"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "70e2a652-6881-4313-9668-820363c76b83",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A-CrzYIlLirRFDQjxNaXfrVzHVTMFiExS.he7MOO08C0DcL8swAbaTqk06x5ttVTuYDObjtQa7KH4",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "8563b31a-039f-4238-8ed9-99572df48f7e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:31 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "10"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"a-Tq86/bt7ViOhfxXgqKCTL6sompk\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Av76dlUPDCLONYFdFjk0sC57L4S57lsdd.6tZ4U2ZgDG624udjkqaCL1LdG5pzqLolgnsibsNZMa4; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              117,
              110,
              105,
              116,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 118,
          "responseSize": 10
        },
        "id": "f83ababe-7141-4fd7-ad43-0800523e3133",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say whether request query unit is valid",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2d2283eb-1d53-4412-9fda-0323bfa427a9",
          "length": 35,
          "cycles": 3,
          "position": 26,
          "iteration": 2,
          "httpRequestId": "30bbca72-1277-41b2-8e22-07f5de52f417"
        },
        "item": {
          "id": "9704752a-bdc9-4cf3-95f5-41f8d640556b",
          "name": "Time addition",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "add"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "years",
                  "value": "100"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c273fbfd-6b01-4d9d-af5b-2a15775203cf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the added years\", function () {",
                  "    pm.response.to.have.jsonBody('sum', 'Sat Oct 10 2116 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "243679b7-9064-4a32-96fa-79b47411e320"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "add"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "years",
                "value": "100"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "85a51a45-80fc-4b29-9738-e532c2157fd6",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3Av76dlUPDCLONYFdFjk0sC57L4S57lsdd.6tZ4U2ZgDG624udjkqaCL1LdG5pzqLolgnsibsNZMa4",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c4af472f-de7b-4d88-9886-7c03c90ceb89",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:31 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "43"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"2b-NI+s6dhyoOC4+MmZW5sCBgzsnMw\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AhEfy2kC9E48fWG7EncvfNiQa5J_SNKpp.irplYoJ4SfsL%2FDxdfO0g5rSwPJTEn7SdT39LvS0K9FM; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              109,
              34,
              58,
              34,
              83,
              97,
              116,
              32,
              79,
              99,
              116,
              32,
              49,
              48,
              32,
              50,
              49,
              49,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 114,
          "responseSize": 43
        },
        "id": "9704752a-bdc9-4cf3-95f5-41f8d640556b",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the added years",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1ff50b73-bda6-4311-878d-b62c6dad2cad",
          "length": 35,
          "cycles": 3,
          "position": 27,
          "iteration": 2,
          "httpRequestId": "810f98c0-9ab4-4c48-87bd-d68b6bf5091c"
        },
        "item": {
          "id": "95a5016d-a032-41d2-8808-b7e1676f9831",
          "name": "Time subtraction",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "subtract"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "years",
                  "value": "50"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f16c1cc3-5a11-4939-85c2-86d6566b9547",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the subtracted years\", function () {",
                  "    pm.response.to.have.jsonBody('difference', 'Mon Oct 10 1966 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "70b6f3bf-f0fc-404d-a5df-90e99bb6921b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "subtract"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "years",
                "value": "50"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "176d9e54-c94c-4bf6-8638-aeefdace70d0",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AhEfy2kC9E48fWG7EncvfNiQa5J_SNKpp.irplYoJ4SfsL%2FDxdfO0g5rSwPJTEn7SdT39LvS0K9FM",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f333c708-dbdb-4375-8744-8fa2e883d40f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "50"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"32-PND5PkDaCj18RICDpWcSi9vkakY\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AiC59vPzrncOYQZA_iSilUPsa797gF26p.ziBVbeDyadbZnex6c9boHsklJMA8GDwgCMJyzmG4AfU; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              34,
              58,
              34,
              77,
              111,
              110,
              32,
              79,
              99,
              116,
              32,
              49,
              48,
              32,
              49,
              57,
              54,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 125,
          "responseSize": 50
        },
        "id": "95a5016d-a032-41d2-8808-b7e1676f9831",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the subtracted years",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0f7ca690-c3c0-41e3-9e82-5601100ea51c",
          "length": 35,
          "cycles": 3,
          "position": 28,
          "iteration": 2,
          "httpRequestId": "2245e3cc-2932-4d36-b1d2-7313d0d82dac"
        },
        "item": {
          "id": "7028b100-a994-4204-bcc7-cd9f69366299",
          "name": "Start of time",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "start"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "unit",
                  "value": "month"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7972aa90-336e-47ac-a922-c8d8588d858e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the beginning of month\", function () {",
                  "    pm.response.to.have.jsonBody('start', 'Sat Oct 01 2016 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "c5330198-ebf3-4b45-959f-3e87f4907669"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "start"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "unit",
                "value": "month"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7e60b9c6-50c8-4da6-8aa9-d009b272ebc7",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AiC59vPzrncOYQZA_iSilUPsa797gF26p.ziBVbeDyadbZnex6c9boHsklJMA8GDwgCMJyzmG4AfU",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c2442be2-3bf1-4f37-812d-5257b96fed11",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "45"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"2d-+DRNEGBPVvAa16PUC5AjHCOmq/0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A2lJqqgLPuT6jibRNoLBdJ76VEBBLkDko.nxW5aZEADqbsk8nRzIij%2F9m0d7dK72AtjBcoUnbNx%2BE; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              83,
              97,
              116,
              32,
              79,
              99,
              116,
              32,
              48,
              49,
              32,
              50,
              48,
              49,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 118,
          "responseSize": 45
        },
        "id": "7028b100-a994-4204-bcc7-cd9f69366299",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the beginning of month",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "435fa3bd-ec49-40da-ab76-578a55339c7f",
          "length": 35,
          "cycles": 3,
          "position": 29,
          "iteration": 2,
          "httpRequestId": "6186e118-e2cf-4521-b471-12efbcfa9e6d"
        },
        "item": {
          "id": "90f71a58-4559-405f-b6f8-40ee051cf6dd",
          "name": "Object representation",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "object"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "055a57c1-fc26-43fb-ac02-0524487d1b7a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the date components\", function () {",
                  "    pm.expect(pm.response.json()).to.eql({",
                  "        \"years\": 2016,",
                  "        \"months\": 9,",
                  "        \"date\": 10,",
                  "        ",
                  "        \"hours\": 0,",
                  "        \"minutes\": 0,",
                  "        \"seconds\": 0,",
                  "        \"milliseconds\": 0",
                  "    });",
                  "});"
                ],
                "_lastExecutionId": "e83a9a44-d35b-475e-ad2f-8535ea667752"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "object"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e34e70d4-374a-44c1-be50-a9c654637e85",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A2lJqqgLPuT6jibRNoLBdJ76VEBBLkDko.nxW5aZEADqbsk8nRzIij%2F9m0d7dK72AtjBcoUnbNx%2BE",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "5b473c32-58df-43b5-9037-2ddecea3279a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "86"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"56-sbJq4ZMpg65IM+Xxb5GSE9GGvQc\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AA4HyBc1tMKoGOsZaE8oanc9hBfKwcP_S.nxrfRSirJAJaxRcABYzaOG1hLdoyDX8LC2Ffx9JDVhc; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              121,
              101,
              97,
              114,
              115,
              34,
              58,
              50,
              48,
              49,
              54,
              44,
              34,
              109,
              111,
              110,
              116,
              104,
              115,
              34,
              58,
              57,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              104,
              111,
              117,
              114,
              115,
              34,
              58,
              48,
              44,
              34,
              109,
              105,
              110,
              117,
              116,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              115,
              101,
              99,
              111,
              110,
              100,
              115,
              34,
              58,
              48,
              44,
              34,
              109,
              105,
              108,
              108,
              105,
              115,
              101,
              99,
              111,
              110,
              100,
              115,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 116,
          "responseSize": 86
        },
        "id": "90f71a58-4559-405f-b6f8-40ee051cf6dd",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should return the date components",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "78394af9-747f-48dd-84f4-cddc178aac9d",
          "length": 35,
          "cycles": 3,
          "position": 30,
          "iteration": 2,
          "httpRequestId": "dec591ce-1770-426d-9f0e-a2f935cbbd07"
        },
        "item": {
          "id": "1a17bac8-0451-4c5c-86b4-c2ecfdda9734",
          "name": "Before comparisons",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "before"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "target",
                  "value": "2017-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2917b24-d2a3-4927-bb2b-22e6181d3933",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is before target\", function () {",
                  "    pm.response.to.have.jsonBody('before', true);",
                  "});"
                ],
                "_lastExecutionId": "5f9e34ad-2309-4527-bade-144103846aff"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "before"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "target",
                "value": "2017-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e0cf4984-a863-4c46-9518-7b1fd6c8dfa3",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AA4HyBc1tMKoGOsZaE8oanc9hBfKwcP_S.nxrfRSirJAJaxRcABYzaOG1hLdoyDX8LC2Ffx9JDVhc",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "9803e045-954e-4574-928d-d03e5bdf9e66",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"f-pYji1tDlxSR6vlOQLH4azAZGkpo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AixuUYP4qcbI8IzY_w7oybt953wifPZSe.JWAERgvd1LNGfImSkJ7nFnbwSshPvc5LO1%2BdWuDsjTs; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              98,
              101,
              102,
              111,
              114,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 109,
          "responseSize": 15
        },
        "id": "1a17bac8-0451-4c5c-86b4-c2ecfdda9734",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is before target",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9b30fd62-f637-45f5-8387-8af476cef34c",
          "length": 35,
          "cycles": 3,
          "position": 31,
          "iteration": 2,
          "httpRequestId": "109f51d1-7c41-424d-9463-1fe0f114cbb3"
        },
        "item": {
          "id": "5a54c7e6-3ee8-405d-9e31-bc43e60b86bb",
          "name": "After comparisons",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "after"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "target",
                  "value": "2017-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5549751f-5ef1-42fa-8847-f9bc6e2b434f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is not after target\", function () {",
                  "    pm.response.to.have.jsonBody('after', false);",
                  "});"
                ],
                "_lastExecutionId": "ab81a676-0e2c-4d54-9f80-f5ea8552b49b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "after"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "target",
                "value": "2017-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5a2231d5-cf3f-4b42-acec-b26880a93ae2",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AixuUYP4qcbI8IzY_w7oybt953wifPZSe.JWAERgvd1LNGfImSkJ7nFnbwSshPvc5LO1%2BdWuDsjTs",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "fa73c7d3-3863-4786-83fc-0b5cf82b9cde",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:32 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"f-1yo7D9f7qelpng2aZyy3Vk9UAA8\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A5NAgzRxykAebuz-Oh1kGlNiFJIXr7tRj.TYAV0yIALGD3MqJpPU%2BmagKMwM3XcO5eP7r1I%2FtDeRw; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              102,
              116,
              101,
              114,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 117,
          "responseSize": 15
        },
        "id": "5a54c7e6-3ee8-405d-9e31-bc43e60b86bb",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is not after target",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0affd917-8da8-4480-9058-1f72c3bfe88f",
          "length": 35,
          "cycles": 3,
          "position": 32,
          "iteration": 2,
          "httpRequestId": "19927c27-0c11-45a4-8d6e-0a2a8e8cd1d4"
        },
        "item": {
          "id": "0356ee05-cf82-490d-b6ec-1b62df3bff47",
          "name": "Between timestamps",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "between"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "start",
                  "value": "2017-10-10"
                },
                {
                  "key": "end",
                  "value": "2019-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5106a113-8ee9-47f1-b69c-eea0fffe8f2b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is not between start and end\", function () {",
                  "    pm.response.to.have.jsonBody('between', false);",
                  "});"
                ],
                "_lastExecutionId": "66c301fc-937b-4d9f-bc76-c1d0ee83b9fa"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "between"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "start",
                "value": "2017-10-10"
              },
              {
                "key": "end",
                "value": "2019-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "15a5d997-ebed-485b-825d-36f7a68f8d74",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3A5NAgzRxykAebuz-Oh1kGlNiFJIXr7tRj.TYAV0yIALGD3MqJpPU%2BmagKMwM3XcO5eP7r1I%2FtDeRw",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "1e652b3c-dfc0-42ec-8ed3-aef4c947d1e6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:33 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "17"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"11-Q5jSDN8J9UWiS3bMKjaPflikNDU\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AuAge-LW75JeLtQOw4hxdF0kOwm_SCc_q.Y4%2FxalOULHrf%2BE0n3DpGIojs5XZHjJ%2Byw0cPdc21ohk; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              98,
              101,
              116,
              119,
              101,
              101,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 128,
          "responseSize": 17
        },
        "id": "0356ee05-cf82-490d-b6ec-1b62df3bff47",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is not between start and end",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "74cbcaa2-56b3-463e-abd6-5cda91a91aeb",
          "length": 35,
          "cycles": 3,
          "position": 33,
          "iteration": 2,
          "httpRequestId": "8f6f45bd-cac6-423f-8834-d80091fac5ee"
        },
        "item": {
          "id": "e4ff274f-e54a-4793-b54a-0dd7011f17b3",
          "name": "Leap year check",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "leap"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "99d38ceb-e45e-45f6-a41c-5501e2397b1a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is within leap year\", function () {",
                  "    pm.response.to.have.jsonBody('leap', true);",
                  "});"
                ],
                "_lastExecutionId": "5f7a2205-a3b7-4876-a883-93000b2be151"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "leap"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d9076a28-d804-4b8e-8795-87a04730702f",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AuAge-LW75JeLtQOw4hxdF0kOwm_SCc_q.Y4%2FxalOULHrf%2BE0n3DpGIojs5XZHjJ%2Byw0cPdc21ohk",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "84052db0-cdb7-4173-be01-951aa2e21822",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:33 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "13"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "ETag",
              "value": "W/\"d-/cHbrs54NBQWs+BmYLn36yaGw/0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AN88jDtfMV85S2u9ExSrEcY9C2ScQSRTH.4mI%2BqigDZJbNeLJadSAdGVXh0s2WWAiLWL5ejjQzZNU; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              108,
              101,
              97,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 122,
          "responseSize": 13
        },
        "id": "e4ff274f-e54a-4793-b54a-0dd7011f17b3",
        "assertions": [
          {
            "assertion": "response is ok",
            "skipped": false
          },
          {
            "assertion": "response json should say timestamp is within leap year",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "dc388b97-e857-4381-88bc-1069b7ac8cab",
          "length": 35,
          "cycles": 3,
          "position": 34,
          "iteration": 2,
          "httpRequestId": "744cccb7-7a0b-43b7-935d-4c157cc2dedf"
        },
        "item": {
          "id": "715da1e6-8db6-448b-b9c9-b09e68c0f355",
          "name": "DigestAuth Request",
          "request": {
            "description": {
              "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "digest-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d839093-6eb1-4377-81f9-cf60d5a4e9d2",
                "type": "text/javascript",
                "exec": [
                  "tests[\"response code is 401\"] = responseCode.code === 401;",
                  "tests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));",
                  "",
                  "var authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),",
                  "    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,",
                  "    realmEnd = authenticateHeader.indexOf('\"',realmStart),",
                  "    realm = authenticateHeader.slice(realmStart,realmEnd),",
                  "    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,",
                  "    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),",
                  "    nonce = authenticateHeader.slice(nonceStart,nonceEnd);",
                  "    ",
                  "postman.setGlobalVariable('echo_digest_realm', realm);",
                  "postman.setGlobalVariable('echo_digest_nonce', nonce);"
                ],
                "_lastExecutionId": "f2a73ac2-a573-40ca-88a8-196f9bbc2a38"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "digest-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.10",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "36bf40cd-6c69-45d0-9c7a-236e9564de03",
              "system": true
            },
            {
              "key": "Host",
              "value": "postman-echo.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Cookie",
              "value": "sails.sid=s%3AN88jDtfMV85S2u9ExSrEcY9C2ScQSRTH.4mI%2BqigDZJbNeLJadSAdGVXh0s2WWAiLWL5ejjQzZNU",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "edf79eef-a4b4-468b-87af-14b00e1fab76",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Date",
              "value": "Wed, 07 Apr 2021 11:35:33 GMT"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "WWW-Authenticate",
              "value": "Digest realm=\"Users\", nonce=\"f8nW8QhReJycF0z3Ou8grFAs12jSMtkt\", qop=\"auth\""
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AMA_7VTemsy-QZGbZS8SBMbsaz_hocqfJ.vVp8TjhEW9BXx3Co%2FCbXX7wlssSQDUAJSfiAJcTw8E8; Path=/; HttpOnly"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 105,
          "responseSize": 12
        },
        "id": "715da1e6-8db6-448b-b9c9-b09e68c0f355",
        "assertions": [
          {
            "assertion": "response code is 401",
            "skipped": false
          },
          {
            "assertion": "response has WWW-Authenticate header",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 72276
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "response body has json saying passed 'status'",
          "message": "expected { Object (message) } in response to contain property 'status'",
          "stack": "AssertionError: expected { Object (message) } in response to contain property 'status'\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "e50c91af50f556c238d6c09b158dc2ac",
          "id": "ff497e52-bec3-4100-9118-45c9b04586f0",
          "timestamp": 1617795305880,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
          "name": "Hawk Auth",
          "request": {
            "description": {
              "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "auth",
                "hawk"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "hawk",
              "hawk": [
                {
                  "type": "string",
                  "value": "dh37fgj492je",
                  "key": "authId"
                },
                {
                  "type": "string",
                  "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                  "key": "authKey"
                },
                {
                  "type": "string",
                  "value": "sha256",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "user"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "string",
                  "value": "RZKGNz",
                  "key": "nonce"
                },
                {
                  "type": "any",
                  "key": "extraData"
                },
                {
                  "type": "any",
                  "key": "appId"
                },
                {
                  "type": "any",
                  "key": "delegation"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "26a84d63-c2e7-420a-8582-76d40716f355",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Server-Authorization",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server-Authorization",
                  "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
              }
            }
          ]
        },
        "parent": {
          "id": "694babc7-6779-4c23-962a-b5f87ec41234",
          "name": "Authentication Methods",
          "item": [
            {
              "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
              "name": "Basic Auth",
              "request": {
                "description": {
                  "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "basic-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "showPassword"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "c3b6d719-8b10-45a2-a5ca-a0f6f2a7935c",
                  "name": "200",
                  "originalRequest": {
                    "description": {
                      "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                      "type": "text/plain"
                    },
                    "url": {
                      "protocol": "https",
                      "path": [
                        "basic-auth"
                      ],
                      "host": [
                        "postman-echo",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "type": "string",
                          "value": "postman",
                          "key": "username"
                        },
                        {
                          "type": "string",
                          "value": "password",
                          "key": "password"
                        },
                        {
                          "type": "any",
                          "key": "saveHelperData"
                        },
                        {
                          "type": "boolean",
                          "value": false,
                          "key": "showPassword"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "42"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"authenticated\":true}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37d88aec-07c2-4ca1-be59-75ed726c4b9a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying 'authenticated'\", function () {",
                      "    pm.response.to.have.jsonBody('authenticated', true);",
                      "});"
                    ],
                    "_lastExecutionId": "b19df1c7-feb0-4f74-8b22-5c269184ca12"
                  }
                }
              ]
            },
            {
              "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
              "name": "DigestAuth Success",
              "request": {
                "description": {
                  "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "digest-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "digest",
                  "digest": [
                    {
                      "type": "string",
                      "value": "MD5",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_realm}}",
                      "key": "realm"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_nonce}}",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonceCount"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "clientNonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "opaque"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "qop"
                    },
                    {
                      "type": "any",
                      "key": "disableRetryRequest"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "bc874d05-7a57-49c4-90d8-80cfe34506e4",
                  "name": "200",
                  "originalRequest": {
                    "description": {
                      "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                      "type": "text/plain"
                    },
                    "url": {
                      "protocol": "https",
                      "path": [
                        "digest-auth"
                      ],
                      "host": [
                        "postman-echo",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "digest",
                      "digest": [
                        {
                          "type": "string",
                          "value": "MD5",
                          "key": "algorithm"
                        },
                        {
                          "type": "string",
                          "value": "postman",
                          "key": "username"
                        },
                        {
                          "type": "string",
                          "value": "{{echo_digest_realm}}",
                          "key": "realm"
                        },
                        {
                          "type": "string",
                          "value": "password",
                          "key": "password"
                        },
                        {
                          "type": "string",
                          "value": "{{echo_digest_nonce}}",
                          "key": "nonce"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "nonceCount"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "clientNonce"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "opaque"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "qop"
                        },
                        {
                          "type": "any",
                          "key": "disableRetryRequest"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "42"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"authenticated\":true}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e3035607-07e4-4a5d-a5e3-592c48b7460f",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"response code is 200\"] = responseCode.code === 200;",
                      "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                    ],
                    "_lastExecutionId": "745e5c52-f581-4a85-b30f-3199c3065730"
                  }
                }
              ]
            },
            {
              "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
              "name": "Hawk Auth",
              "request": {
                "description": {
                  "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "hawk",
                  "hawk": [
                    {
                      "type": "string",
                      "value": "dh37fgj492je",
                      "key": "authId"
                    },
                    {
                      "type": "string",
                      "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                      "key": "authKey"
                    },
                    {
                      "type": "string",
                      "value": "sha256",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "user"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "string",
                      "value": "RZKGNz",
                      "key": "nonce"
                    },
                    {
                      "type": "any",
                      "key": "extraData"
                    },
                    {
                      "type": "any",
                      "key": "appId"
                    },
                    {
                      "type": "any",
                      "key": "delegation"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "26a84d63-c2e7-420a-8582-76d40716f355",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "auth",
                        "hawk"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Server-Authorization",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server-Authorization",
                      "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    },
                    {
                      "name": "transfer-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "transfer-encoding",
                      "value": "chunked"
                    }
                  ],
                  "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": "2016-04-15T10:54:28.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": "2016-04-15T10:54:28.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying passed 'status'\", function () {",
                      "    pm.response.to.have.jsonBody('status', 'pass');",
                      "});"
                    ],
                    "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
                  }
                }
              ]
            },
            {
              "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
              "name": "OAuth1.0 (verify signature)",
              "request": {
                "description": {
                  "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth1",
                  "oauth1": [
                    {
                      "type": "string",
                      "value": "RKCGzna7bv9YD57c",
                      "key": "consumerKey"
                    },
                    {
                      "type": "string",
                      "value": "D+EdQ-gs$-%@2Nu7",
                      "key": "consumerSecret"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "token"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "tokenSecret"
                    },
                    {
                      "type": "string",
                      "value": "HMAC-SHA1",
                      "key": "signatureMethod"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "version"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "realm"
                    },
                    {
                      "type": "boolean",
                      "value": true,
                      "key": "addParamsToHeader"
                    },
                    {
                      "type": "any",
                      "key": "autoAddParam"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "addEmptyParamsToSign"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "48fbdb6f-cbaa-46d7-8c32-aae8f916f8c8",
                  "name": "200",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "oauth1"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "95"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.8.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "c12747fd-818e-4858-9ffc-7e2e50f2fe19",
                  "name": "401",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "oauth1"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "536"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.8.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50c80c4b-7093-40f7-ad3c-35d1d713720b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying passed 'status'\", function () {",
                      "    pm.response.to.have.jsonBody('status', 'pass');",
                      "});"
                    ],
                    "_lastExecutionId": "885be686-e857-4781-b6d5-a8bdb7facc60"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a8e2ae38-f19e-420e-ae54-c1c2bf582df3",
          "length": 35,
          "cycles": 3,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a868a2f0-bc24-4160-a226-9a4e9e7534c0",
          "scriptId": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
          "execution": "f09df084-be1b-41c2-bfa5-8084f4ddae42"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "response headers should indicate valid content encoding",
          "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
          "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:20)",
          "checksum": "d58f4b3b303eae73377f3ad108fb0af0",
          "id": "2408f742-e4e6-4e4d-8d23-e5964be361e6",
          "timestamp": 1617795310100,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "d461228b-6484-4aa6-8de7-b940895741a0",
          "name": "GZip Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "gzip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('gzipped', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'gzip')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*gzip.*/);",
                  "});"
                ],
                "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
              }
            }
          ]
        },
        "parent": {
          "id": "7bd72319-f530-430b-b242-56bfe97a65d8",
          "name": "Utilities",
          "item": [
            {
              "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
              "name": "Response Status Code",
              "request": {
                "description": {
                  "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
                  "name": "200",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "status",
                        "200"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"e-1056260003\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"status\":200}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                    },
                    {
                      "name": "_ga",
                      "expires": "2018-03-31T11:16:21.000Z",
                      "domain": ".echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "GA1.3.1703443399.1459422978"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('status');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"status in response body must match the one in request\", function () {",
                      "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
                  }
                }
              ]
            },
            {
              "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
              "name": "Streamed Response",
              "request": {
                "description": {
                  "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "stream",
                    "5"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
                  }
                }
              ]
            },
            {
              "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
              "name": "Delay Response",
              "request": {
                "description": {
                  "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "2"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "25994048-5137-4d58-92af-855aff7c6234",
                  "name": "success-response",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "delay",
                        "3"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "13"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.10.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"delay\":\"3\"}",
                  "cookie": [
                    {
                      "name": "sails.sid",
                      "expires": "2038-01-18T21:44:07.000Z",
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                    "type": "text/javascript",
                    "exec": [
                      "var _ = require('lodash');",
                      "",
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('delay');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"request must have a valid delay\", function () {",
                      "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                      "});",
                      "pm.test(\"response should take more time than the delay specified\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
                  }
                }
              ]
            },
            {
              "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
              "name": "Get UTF8 Encoded Response",
              "request": {
                "description": {
                  "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "encoding",
                    "utf8"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has charset in content-type header\", function () {",
                      "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
                  }
                }
              ]
            },
            {
              "id": "d461228b-6484-4aa6-8de7-b940895741a0",
              "name": "GZip Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "gzip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('gzipped', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'gzip')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*gzip.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
                  }
                }
              ]
            },
            {
              "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
              "name": "Deflate Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "deflate"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('deflated', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'deflate')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*deflate.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
                  }
                }
              ]
            },
            {
              "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
              "name": "IP address in JSON format",
              "request": {
                "description": {
                  "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "ip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('ip');",
                      "});",
                      "",
                      "pm.test(\"response must return a valid ip address\", function () {",
                      "    pm.expect(pm.response.json().ip).to",
                      "        // a really gnarly regular expression to ensure that ip address is in correct format",
                      "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                      "});"
                    ],
                    "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f9332949-9448-4154-80eb-1d529c94c958",
          "length": 35,
          "cycles": 3,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4451b477-860d-46c5-bcd2-7868ba0f4387",
          "scriptId": "661e59f9-3613-487f-957d-68fa0d4ffe47",
          "execution": "c1926adf-09b4-49c5-8d6c-d593b86b74c0"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "response headers should indicate valid content encoding",
          "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
          "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:21)",
          "checksum": "15cb746f27ffc8d12851edb0f467ac40",
          "id": "056bb036-f737-4793-8aa3-8e6a0317ffe0",
          "timestamp": 1617795310299,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
          "name": "Deflate Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "deflate"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('deflated', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'deflate')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*deflate.*/);",
                  "});"
                ],
                "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
              }
            }
          ]
        },
        "parent": {
          "id": "7bd72319-f530-430b-b242-56bfe97a65d8",
          "name": "Utilities",
          "item": [
            {
              "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
              "name": "Response Status Code",
              "request": {
                "description": {
                  "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
                  "name": "200",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "status",
                        "200"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"e-1056260003\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"status\":200}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                    },
                    {
                      "name": "_ga",
                      "expires": "2018-03-31T11:16:21.000Z",
                      "domain": ".echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "GA1.3.1703443399.1459422978"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('status');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"status in response body must match the one in request\", function () {",
                      "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
                  }
                }
              ]
            },
            {
              "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
              "name": "Streamed Response",
              "request": {
                "description": {
                  "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "stream",
                    "5"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
                  }
                }
              ]
            },
            {
              "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
              "name": "Delay Response",
              "request": {
                "description": {
                  "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "2"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "25994048-5137-4d58-92af-855aff7c6234",
                  "name": "success-response",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "delay",
                        "3"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "13"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.10.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"delay\":\"3\"}",
                  "cookie": [
                    {
                      "name": "sails.sid",
                      "expires": "2038-01-18T21:44:07.000Z",
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                    "type": "text/javascript",
                    "exec": [
                      "var _ = require('lodash');",
                      "",
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('delay');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"request must have a valid delay\", function () {",
                      "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                      "});",
                      "pm.test(\"response should take more time than the delay specified\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
                  }
                }
              ]
            },
            {
              "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
              "name": "Get UTF8 Encoded Response",
              "request": {
                "description": {
                  "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "encoding",
                    "utf8"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has charset in content-type header\", function () {",
                      "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
                  }
                }
              ]
            },
            {
              "id": "d461228b-6484-4aa6-8de7-b940895741a0",
              "name": "GZip Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "gzip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('gzipped', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'gzip')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*gzip.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
                  }
                }
              ]
            },
            {
              "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
              "name": "Deflate Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "deflate"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('deflated', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'deflate')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*deflate.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
                  }
                }
              ]
            },
            {
              "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
              "name": "IP address in JSON format",
              "request": {
                "description": {
                  "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "ip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('ip');",
                      "});",
                      "",
                      "pm.test(\"response must return a valid ip address\", function () {",
                      "    pm.expect(pm.response.json().ip).to",
                      "        // a really gnarly regular expression to ensure that ip address is in correct format",
                      "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                      "});"
                    ],
                    "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "484bfb1b-e680-4118-a7d7-a7516d022c21",
          "length": 35,
          "cycles": 3,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c4f3dcd0-b24e-4967-b054-52c8841c8748",
          "scriptId": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
          "execution": "aa1409d8-c36b-44bc-a4e9-e6aec3ea00d6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "response body has json saying passed 'status'",
          "message": "expected { Object (message) } in response to contain property 'status'",
          "stack": "AssertionError: expected { Object (message) } in response to contain property 'status'\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "e50c91af50f556c238d6c09b158dc2ac",
          "id": "6a213018-8bb4-43de-8572-199b5e932931",
          "timestamp": 1617795316241,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
          "name": "Hawk Auth",
          "request": {
            "description": {
              "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "auth",
                "hawk"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "hawk",
              "hawk": [
                {
                  "type": "string",
                  "value": "dh37fgj492je",
                  "key": "authId"
                },
                {
                  "type": "string",
                  "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                  "key": "authKey"
                },
                {
                  "type": "string",
                  "value": "sha256",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "user"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "string",
                  "value": "RZKGNz",
                  "key": "nonce"
                },
                {
                  "type": "any",
                  "key": "extraData"
                },
                {
                  "type": "any",
                  "key": "appId"
                },
                {
                  "type": "any",
                  "key": "delegation"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "26a84d63-c2e7-420a-8582-76d40716f355",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Server-Authorization",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server-Authorization",
                  "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
              }
            }
          ]
        },
        "parent": {
          "id": "694babc7-6779-4c23-962a-b5f87ec41234",
          "name": "Authentication Methods",
          "item": [
            {
              "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
              "name": "Basic Auth",
              "request": {
                "description": {
                  "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "basic-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "showPassword"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "c3b6d719-8b10-45a2-a5ca-a0f6f2a7935c",
                  "name": "200",
                  "originalRequest": {
                    "description": {
                      "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                      "type": "text/plain"
                    },
                    "url": {
                      "protocol": "https",
                      "path": [
                        "basic-auth"
                      ],
                      "host": [
                        "postman-echo",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "type": "string",
                          "value": "postman",
                          "key": "username"
                        },
                        {
                          "type": "string",
                          "value": "password",
                          "key": "password"
                        },
                        {
                          "type": "any",
                          "key": "saveHelperData"
                        },
                        {
                          "type": "boolean",
                          "value": false,
                          "key": "showPassword"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "42"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"authenticated\":true}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37d88aec-07c2-4ca1-be59-75ed726c4b9a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying 'authenticated'\", function () {",
                      "    pm.response.to.have.jsonBody('authenticated', true);",
                      "});"
                    ],
                    "_lastExecutionId": "b19df1c7-feb0-4f74-8b22-5c269184ca12"
                  }
                }
              ]
            },
            {
              "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
              "name": "DigestAuth Success",
              "request": {
                "description": {
                  "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "digest-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "digest",
                  "digest": [
                    {
                      "type": "string",
                      "value": "MD5",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_realm}}",
                      "key": "realm"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_nonce}}",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonceCount"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "clientNonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "opaque"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "qop"
                    },
                    {
                      "type": "any",
                      "key": "disableRetryRequest"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "bc874d05-7a57-49c4-90d8-80cfe34506e4",
                  "name": "200",
                  "originalRequest": {
                    "description": {
                      "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                      "type": "text/plain"
                    },
                    "url": {
                      "protocol": "https",
                      "path": [
                        "digest-auth"
                      ],
                      "host": [
                        "postman-echo",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "digest",
                      "digest": [
                        {
                          "type": "string",
                          "value": "MD5",
                          "key": "algorithm"
                        },
                        {
                          "type": "string",
                          "value": "postman",
                          "key": "username"
                        },
                        {
                          "type": "string",
                          "value": "{{echo_digest_realm}}",
                          "key": "realm"
                        },
                        {
                          "type": "string",
                          "value": "password",
                          "key": "password"
                        },
                        {
                          "type": "string",
                          "value": "{{echo_digest_nonce}}",
                          "key": "nonce"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "nonceCount"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "clientNonce"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "opaque"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "qop"
                        },
                        {
                          "type": "any",
                          "key": "disableRetryRequest"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "42"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"authenticated\":true}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e3035607-07e4-4a5d-a5e3-592c48b7460f",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"response code is 200\"] = responseCode.code === 200;",
                      "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                    ],
                    "_lastExecutionId": "745e5c52-f581-4a85-b30f-3199c3065730"
                  }
                }
              ]
            },
            {
              "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
              "name": "Hawk Auth",
              "request": {
                "description": {
                  "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "hawk",
                  "hawk": [
                    {
                      "type": "string",
                      "value": "dh37fgj492je",
                      "key": "authId"
                    },
                    {
                      "type": "string",
                      "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                      "key": "authKey"
                    },
                    {
                      "type": "string",
                      "value": "sha256",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "user"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "string",
                      "value": "RZKGNz",
                      "key": "nonce"
                    },
                    {
                      "type": "any",
                      "key": "extraData"
                    },
                    {
                      "type": "any",
                      "key": "appId"
                    },
                    {
                      "type": "any",
                      "key": "delegation"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "26a84d63-c2e7-420a-8582-76d40716f355",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "auth",
                        "hawk"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Server-Authorization",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server-Authorization",
                      "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    },
                    {
                      "name": "transfer-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "transfer-encoding",
                      "value": "chunked"
                    }
                  ],
                  "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": "2016-04-15T10:54:28.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": "2016-04-15T10:54:28.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying passed 'status'\", function () {",
                      "    pm.response.to.have.jsonBody('status', 'pass');",
                      "});"
                    ],
                    "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
                  }
                }
              ]
            },
            {
              "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
              "name": "OAuth1.0 (verify signature)",
              "request": {
                "description": {
                  "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth1",
                  "oauth1": [
                    {
                      "type": "string",
                      "value": "RKCGzna7bv9YD57c",
                      "key": "consumerKey"
                    },
                    {
                      "type": "string",
                      "value": "D+EdQ-gs$-%@2Nu7",
                      "key": "consumerSecret"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "token"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "tokenSecret"
                    },
                    {
                      "type": "string",
                      "value": "HMAC-SHA1",
                      "key": "signatureMethod"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "version"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "realm"
                    },
                    {
                      "type": "boolean",
                      "value": true,
                      "key": "addParamsToHeader"
                    },
                    {
                      "type": "any",
                      "key": "autoAddParam"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "addEmptyParamsToSign"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "48fbdb6f-cbaa-46d7-8c32-aae8f916f8c8",
                  "name": "200",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "oauth1"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "95"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.8.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "c12747fd-818e-4858-9ffc-7e2e50f2fe19",
                  "name": "401",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "oauth1"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "536"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.8.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50c80c4b-7093-40f7-ad3c-35d1d713720b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying passed 'status'\", function () {",
                      "    pm.response.to.have.jsonBody('status', 'pass');",
                      "});"
                    ],
                    "_lastExecutionId": "885be686-e857-4781-b6d5-a8bdb7facc60"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2fd28328-8c56-4ffd-9839-bb5c8aced7fe",
          "length": 35,
          "cycles": 3,
          "position": 10,
          "iteration": 1,
          "httpRequestId": "b876acb6-248f-4ea9-b77a-49ccafb2f060",
          "scriptId": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
          "execution": "e9e440d8-17ed-4908-848a-3e5524655a2b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "response headers should indicate valid content encoding",
          "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
          "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:20)",
          "checksum": "d58f4b3b303eae73377f3ad108fb0af0",
          "id": "4e83ccde-08ef-43d5-9ffb-e0d0e2a0e848",
          "timestamp": 1617795320693,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "d461228b-6484-4aa6-8de7-b940895741a0",
          "name": "GZip Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "gzip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('gzipped', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'gzip')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*gzip.*/);",
                  "});"
                ],
                "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
              }
            }
          ]
        },
        "parent": {
          "id": "7bd72319-f530-430b-b242-56bfe97a65d8",
          "name": "Utilities",
          "item": [
            {
              "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
              "name": "Response Status Code",
              "request": {
                "description": {
                  "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
                  "name": "200",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "status",
                        "200"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"e-1056260003\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"status\":200}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                    },
                    {
                      "name": "_ga",
                      "expires": "2018-03-31T11:16:21.000Z",
                      "domain": ".echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "GA1.3.1703443399.1459422978"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('status');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"status in response body must match the one in request\", function () {",
                      "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
                  }
                }
              ]
            },
            {
              "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
              "name": "Streamed Response",
              "request": {
                "description": {
                  "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "stream",
                    "5"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
                  }
                }
              ]
            },
            {
              "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
              "name": "Delay Response",
              "request": {
                "description": {
                  "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "2"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "25994048-5137-4d58-92af-855aff7c6234",
                  "name": "success-response",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "delay",
                        "3"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "13"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.10.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"delay\":\"3\"}",
                  "cookie": [
                    {
                      "name": "sails.sid",
                      "expires": "2038-01-18T21:44:07.000Z",
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                    "type": "text/javascript",
                    "exec": [
                      "var _ = require('lodash');",
                      "",
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('delay');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"request must have a valid delay\", function () {",
                      "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                      "});",
                      "pm.test(\"response should take more time than the delay specified\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
                  }
                }
              ]
            },
            {
              "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
              "name": "Get UTF8 Encoded Response",
              "request": {
                "description": {
                  "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "encoding",
                    "utf8"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has charset in content-type header\", function () {",
                      "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
                  }
                }
              ]
            },
            {
              "id": "d461228b-6484-4aa6-8de7-b940895741a0",
              "name": "GZip Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "gzip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('gzipped', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'gzip')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*gzip.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
                  }
                }
              ]
            },
            {
              "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
              "name": "Deflate Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "deflate"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('deflated', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'deflate')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*deflate.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
                  }
                }
              ]
            },
            {
              "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
              "name": "IP address in JSON format",
              "request": {
                "description": {
                  "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "ip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('ip');",
                      "});",
                      "",
                      "pm.test(\"response must return a valid ip address\", function () {",
                      "    pm.expect(pm.response.json().ip).to",
                      "        // a really gnarly regular expression to ensure that ip address is in correct format",
                      "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                      "});"
                    ],
                    "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "af01fc18-c89f-4d6a-bb30-63796f822910",
          "length": 35,
          "cycles": 3,
          "position": 19,
          "iteration": 1,
          "httpRequestId": "d3c64067-a8be-49cf-97b4-e5a1ce3bcd73",
          "scriptId": "661e59f9-3613-487f-957d-68fa0d4ffe47",
          "execution": "bd2227e2-8acb-4625-809a-54f4c307d3ff"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "response headers should indicate valid content encoding",
          "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
          "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:21)",
          "checksum": "15cb746f27ffc8d12851edb0f467ac40",
          "id": "59816c4d-7886-457e-9b8d-6bb627467191",
          "timestamp": 1617795320932,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
          "name": "Deflate Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "deflate"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('deflated', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'deflate')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*deflate.*/);",
                  "});"
                ],
                "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
              }
            }
          ]
        },
        "parent": {
          "id": "7bd72319-f530-430b-b242-56bfe97a65d8",
          "name": "Utilities",
          "item": [
            {
              "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
              "name": "Response Status Code",
              "request": {
                "description": {
                  "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
                  "name": "200",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "status",
                        "200"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"e-1056260003\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"status\":200}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                    },
                    {
                      "name": "_ga",
                      "expires": "2018-03-31T11:16:21.000Z",
                      "domain": ".echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "GA1.3.1703443399.1459422978"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('status');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"status in response body must match the one in request\", function () {",
                      "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
                  }
                }
              ]
            },
            {
              "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
              "name": "Streamed Response",
              "request": {
                "description": {
                  "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "stream",
                    "5"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
                  }
                }
              ]
            },
            {
              "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
              "name": "Delay Response",
              "request": {
                "description": {
                  "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "2"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "25994048-5137-4d58-92af-855aff7c6234",
                  "name": "success-response",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "delay",
                        "3"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "13"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.10.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"delay\":\"3\"}",
                  "cookie": [
                    {
                      "name": "sails.sid",
                      "expires": "2038-01-18T21:44:07.000Z",
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                    "type": "text/javascript",
                    "exec": [
                      "var _ = require('lodash');",
                      "",
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('delay');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"request must have a valid delay\", function () {",
                      "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                      "});",
                      "pm.test(\"response should take more time than the delay specified\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
                  }
                }
              ]
            },
            {
              "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
              "name": "Get UTF8 Encoded Response",
              "request": {
                "description": {
                  "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "encoding",
                    "utf8"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has charset in content-type header\", function () {",
                      "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
                  }
                }
              ]
            },
            {
              "id": "d461228b-6484-4aa6-8de7-b940895741a0",
              "name": "GZip Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "gzip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('gzipped', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'gzip')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*gzip.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
                  }
                }
              ]
            },
            {
              "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
              "name": "Deflate Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "deflate"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('deflated', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'deflate')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*deflate.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
                  }
                }
              ]
            },
            {
              "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
              "name": "IP address in JSON format",
              "request": {
                "description": {
                  "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "ip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('ip');",
                      "});",
                      "",
                      "pm.test(\"response must return a valid ip address\", function () {",
                      "    pm.expect(pm.response.json().ip).to",
                      "        // a really gnarly regular expression to ensure that ip address is in correct format",
                      "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                      "});"
                    ],
                    "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c82ab89f-8328-491c-aec2-b11b10c966c0",
          "length": 35,
          "cycles": 3,
          "position": 20,
          "iteration": 1,
          "httpRequestId": "bace239f-a41d-4a5f-9c93-b73ca4697c5c",
          "scriptId": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
          "execution": "d502d974-d255-4644-b4e4-2bc020ec3682"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "response body has json saying passed 'status'",
          "message": "expected { Object (message) } in response to contain property 'status'",
          "stack": "AssertionError: expected { Object (message) } in response to contain property 'status'\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "e50c91af50f556c238d6c09b158dc2ac",
          "id": "089ece82-73c8-44d2-9785-643a7909af1a",
          "timestamp": 1617795326244,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
          "name": "Hawk Auth",
          "request": {
            "description": {
              "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "auth",
                "hawk"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "hawk",
              "hawk": [
                {
                  "type": "string",
                  "value": "dh37fgj492je",
                  "key": "authId"
                },
                {
                  "type": "string",
                  "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                  "key": "authKey"
                },
                {
                  "type": "string",
                  "value": "sha256",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "user"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "string",
                  "value": "RZKGNz",
                  "key": "nonce"
                },
                {
                  "type": "any",
                  "key": "extraData"
                },
                {
                  "type": "any",
                  "key": "appId"
                },
                {
                  "type": "any",
                  "key": "delegation"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript"
              },
              "id": "26a84d63-c2e7-420a-8582-76d40716f355",
              "name": "Success",
              "originalRequest": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                  }
                ],
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Server-Authorization",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server-Authorization",
                  "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": "2016-04-15T10:54:28.000Z",
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                }
              ]
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
              }
            }
          ]
        },
        "parent": {
          "id": "694babc7-6779-4c23-962a-b5f87ec41234",
          "name": "Authentication Methods",
          "item": [
            {
              "id": "9200c543-3e46-4781-b61c-bf1d242c054b",
              "name": "Basic Auth",
              "request": {
                "description": {
                  "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "basic-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "showPassword"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "c3b6d719-8b10-45a2-a5ca-a0f6f2a7935c",
                  "name": "200",
                  "originalRequest": {
                    "description": {
                      "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                      "type": "text/plain"
                    },
                    "url": {
                      "protocol": "https",
                      "path": [
                        "basic-auth"
                      ],
                      "host": [
                        "postman-echo",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "auth": {
                      "type": "basic",
                      "basic": [
                        {
                          "type": "string",
                          "value": "postman",
                          "key": "username"
                        },
                        {
                          "type": "string",
                          "value": "password",
                          "key": "password"
                        },
                        {
                          "type": "any",
                          "key": "saveHelperData"
                        },
                        {
                          "type": "boolean",
                          "value": false,
                          "key": "showPassword"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "42"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"authenticated\":true}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37d88aec-07c2-4ca1-be59-75ed726c4b9a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying 'authenticated'\", function () {",
                      "    pm.response.to.have.jsonBody('authenticated', true);",
                      "});"
                    ],
                    "_lastExecutionId": "b19df1c7-feb0-4f74-8b22-5c269184ca12"
                  }
                }
              ]
            },
            {
              "id": "ff7588f5-2ac8-4ea0-938f-9f18963cdaca",
              "name": "DigestAuth Success",
              "request": {
                "description": {
                  "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "digest-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "digest",
                  "digest": [
                    {
                      "type": "string",
                      "value": "MD5",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_realm}}",
                      "key": "realm"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_nonce}}",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonceCount"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "clientNonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "opaque"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "qop"
                    },
                    {
                      "type": "any",
                      "key": "disableRetryRequest"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "bc874d05-7a57-49c4-90d8-80cfe34506e4",
                  "name": "200",
                  "originalRequest": {
                    "description": {
                      "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                      "type": "text/plain"
                    },
                    "url": {
                      "protocol": "https",
                      "path": [
                        "digest-auth"
                      ],
                      "host": [
                        "postman-echo",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "digest",
                      "digest": [
                        {
                          "type": "string",
                          "value": "MD5",
                          "key": "algorithm"
                        },
                        {
                          "type": "string",
                          "value": "postman",
                          "key": "username"
                        },
                        {
                          "type": "string",
                          "value": "{{echo_digest_realm}}",
                          "key": "realm"
                        },
                        {
                          "type": "string",
                          "value": "password",
                          "key": "password"
                        },
                        {
                          "type": "string",
                          "value": "{{echo_digest_nonce}}",
                          "key": "nonce"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "nonceCount"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "clientNonce"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "opaque"
                        },
                        {
                          "type": "string",
                          "value": "",
                          "key": "qop"
                        },
                        {
                          "type": "any",
                          "key": "disableRetryRequest"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "42"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"authenticated\":true}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e3035607-07e4-4a5d-a5e3-592c48b7460f",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"response code is 200\"] = responseCode.code === 200;",
                      "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                    ],
                    "_lastExecutionId": "745e5c52-f581-4a85-b30f-3199c3065730"
                  }
                }
              ]
            },
            {
              "id": "75e8043f-2c3e-48e4-93ad-5789ff46f292",
              "name": "Hawk Auth",
              "request": {
                "description": {
                  "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "hawk",
                  "hawk": [
                    {
                      "type": "string",
                      "value": "dh37fgj492je",
                      "key": "authId"
                    },
                    {
                      "type": "string",
                      "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                      "key": "authKey"
                    },
                    {
                      "type": "string",
                      "value": "sha256",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "user"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "string",
                      "value": "RZKGNz",
                      "key": "nonce"
                    },
                    {
                      "type": "any",
                      "key": "extraData"
                    },
                    {
                      "type": "any",
                      "key": "appId"
                    },
                    {
                      "type": "any",
                      "key": "delegation"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "26a84d63-c2e7-420a-8582-76d40716f355",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "auth",
                        "hawk"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Server-Authorization",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server-Authorization",
                      "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    },
                    {
                      "name": "transfer-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "transfer-encoding",
                      "value": "chunked"
                    }
                  ],
                  "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": "2016-04-15T10:54:28.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": "2016-04-15T10:54:28.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying passed 'status'\", function () {",
                      "    pm.response.to.have.jsonBody('status', 'pass');",
                      "});"
                    ],
                    "_lastExecutionId": "4114cd2b-168e-498b-9ce2-792c9302083b"
                  }
                }
              ]
            },
            {
              "id": "69a5f434-4048-4d49-8aaa-e413cb93020c",
              "name": "OAuth1.0 (verify signature)",
              "request": {
                "description": {
                  "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth1",
                  "oauth1": [
                    {
                      "type": "string",
                      "value": "RKCGzna7bv9YD57c",
                      "key": "consumerKey"
                    },
                    {
                      "type": "string",
                      "value": "D+EdQ-gs$-%@2Nu7",
                      "key": "consumerSecret"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "token"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "tokenSecret"
                    },
                    {
                      "type": "string",
                      "value": "HMAC-SHA1",
                      "key": "signatureMethod"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "version"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "realm"
                    },
                    {
                      "type": "boolean",
                      "value": true,
                      "key": "addParamsToHeader"
                    },
                    {
                      "type": "any",
                      "key": "autoAddParam"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "addEmptyParamsToSign"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "48fbdb6f-cbaa-46d7-8c32-aae8f916f8c8",
                  "name": "200",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "oauth1"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "95"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.8.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "c12747fd-818e-4858-9ffc-7e2e50f2fe19",
                  "name": "401",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "oauth1"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "536"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.8.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50c80c4b-7093-40f7-ad3c-35d1d713720b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying passed 'status'\", function () {",
                      "    pm.response.to.have.jsonBody('status', 'pass');",
                      "});"
                    ],
                    "_lastExecutionId": "885be686-e857-4781-b6d5-a8bdb7facc60"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8f24c1c3-65be-480e-b790-5cf7e5a59fce",
          "length": 35,
          "cycles": 3,
          "position": 10,
          "iteration": 2,
          "httpRequestId": "9679ad6e-1a30-42ff-a0ba-5313bc973d37",
          "scriptId": "2b4a7ee1-e1a1-4b74-a61f-241474013f87",
          "execution": "4114cd2b-168e-498b-9ce2-792c9302083b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "response headers should indicate valid content encoding",
          "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
          "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:20)",
          "checksum": "d58f4b3b303eae73377f3ad108fb0af0",
          "id": "155b8788-6749-4978-b8b1-e07ababd8a94",
          "timestamp": 1617795330436,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "d461228b-6484-4aa6-8de7-b940895741a0",
          "name": "GZip Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "gzip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('gzipped', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'gzip')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*gzip.*/);",
                  "});"
                ],
                "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
              }
            }
          ]
        },
        "parent": {
          "id": "7bd72319-f530-430b-b242-56bfe97a65d8",
          "name": "Utilities",
          "item": [
            {
              "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
              "name": "Response Status Code",
              "request": {
                "description": {
                  "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
                  "name": "200",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "status",
                        "200"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"e-1056260003\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"status\":200}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                    },
                    {
                      "name": "_ga",
                      "expires": "2018-03-31T11:16:21.000Z",
                      "domain": ".echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "GA1.3.1703443399.1459422978"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('status');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"status in response body must match the one in request\", function () {",
                      "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
                  }
                }
              ]
            },
            {
              "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
              "name": "Streamed Response",
              "request": {
                "description": {
                  "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "stream",
                    "5"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
                  }
                }
              ]
            },
            {
              "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
              "name": "Delay Response",
              "request": {
                "description": {
                  "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "2"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "25994048-5137-4d58-92af-855aff7c6234",
                  "name": "success-response",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "delay",
                        "3"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "13"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.10.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"delay\":\"3\"}",
                  "cookie": [
                    {
                      "name": "sails.sid",
                      "expires": "2038-01-18T21:44:07.000Z",
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                    "type": "text/javascript",
                    "exec": [
                      "var _ = require('lodash');",
                      "",
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('delay');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"request must have a valid delay\", function () {",
                      "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                      "});",
                      "pm.test(\"response should take more time than the delay specified\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
                  }
                }
              ]
            },
            {
              "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
              "name": "Get UTF8 Encoded Response",
              "request": {
                "description": {
                  "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "encoding",
                    "utf8"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has charset in content-type header\", function () {",
                      "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
                  }
                }
              ]
            },
            {
              "id": "d461228b-6484-4aa6-8de7-b940895741a0",
              "name": "GZip Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "gzip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('gzipped', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'gzip')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*gzip.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
                  }
                }
              ]
            },
            {
              "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
              "name": "Deflate Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "deflate"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('deflated', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'deflate')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*deflate.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
                  }
                }
              ]
            },
            {
              "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
              "name": "IP address in JSON format",
              "request": {
                "description": {
                  "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "ip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('ip');",
                      "});",
                      "",
                      "pm.test(\"response must return a valid ip address\", function () {",
                      "    pm.expect(pm.response.json().ip).to",
                      "        // a really gnarly regular expression to ensure that ip address is in correct format",
                      "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                      "});"
                    ],
                    "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6811bce9-62c8-4f88-94a5-a2dca6124a39",
          "length": 35,
          "cycles": 3,
          "position": 19,
          "iteration": 2,
          "httpRequestId": "cdb06c67-22ce-4619-9743-fef9ea258533",
          "scriptId": "661e59f9-3613-487f-957d-68fa0d4ffe47",
          "execution": "19d11193-2489-422f-9bc8-a02bf38788b8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "response headers should indicate valid content encoding",
          "message": "expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'",
          "stack": "AssertionError: expected 'content-type' response header to be 'application/json' but got 'application/json; charset=utf-8'\n   at Object.eval sandbox-script.js:3:21)",
          "checksum": "15cb746f27ffc8d12851edb0f467ac40",
          "id": "da2e6457-3b3a-4679-bfa4-85ee13aa5564",
          "timestamp": 1617795330638,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
          "name": "Deflate Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "deflate"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('deflated', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'deflate')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*deflate.*/);",
                  "});"
                ],
                "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
              }
            }
          ]
        },
        "parent": {
          "id": "7bd72319-f530-430b-b242-56bfe97a65d8",
          "name": "Utilities",
          "item": [
            {
              "id": "1381168f-1a38-4f1e-80e1-71cbe82a90fb",
              "name": "Response Status Code",
              "request": {
                "description": {
                  "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript"
                  },
                  "id": "31139544-a305-40bd-82b3-e5857f6c0e49",
                  "name": "200",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "status",
                        "200"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"e-1056260003\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"status\":200}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": "2016-04-15T11:14:58.000Z",
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                    },
                    {
                      "name": "_ga",
                      "expires": "2018-03-31T11:16:21.000Z",
                      "domain": ".echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "GA1.3.1703443399.1459422978"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3caa5c22-1f85-454e-b5d9-2022cd5da266",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('status');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"status in response body must match the one in request\", function () {",
                      "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "b55daf14-11c4-4d8d-a493-2ff4ef849ec3"
                  }
                }
              ]
            },
            {
              "id": "1404075d-74d2-4340-99e4-4ab85df42aea",
              "name": "Streamed Response",
              "request": {
                "description": {
                  "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "stream",
                    "5"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3899e6dd-5786-4f9d-8b28-7b12e27ad18d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "cd6fe852-d29e-441d-89d6-b691b3ea4842"
                  }
                }
              ]
            },
            {
              "id": "0c8a4137-8146-4b20-9f32-f04d2885c3da",
              "name": "Delay Response",
              "request": {
                "description": {
                  "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "2"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "25994048-5137-4d58-92af-855aff7c6234",
                  "name": "success-response",
                  "originalRequest": {
                    "url": {
                      "protocol": "https",
                      "path": [
                        "delay",
                        "3"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "13"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.10.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"delay\":\"3\"}",
                  "cookie": [
                    {
                      "name": "sails.sid",
                      "expires": "2038-01-18T21:44:07.000Z",
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a41ae390-dd11-448b-af8c-de4aa9d0f36d",
                    "type": "text/javascript",
                    "exec": [
                      "var _ = require('lodash');",
                      "",
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('delay');",
                      "});",
                      "",
                      "// additional sanity tests",
                      "pm.test(\"request must have a valid delay\", function () {",
                      "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                      "});",
                      "pm.test(\"response should take more time than the delay specified\", function () {",
                      "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                      "});"
                    ],
                    "_lastExecutionId": "36b2f679-b2fe-490f-bb1b-886e43de1c92"
                  }
                }
              ]
            },
            {
              "id": "edfc5e3a-90a1-460d-aab6-b184f41d806c",
              "name": "Get UTF8 Encoded Response",
              "request": {
                "description": {
                  "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "encoding",
                    "utf8"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "000d663a-9b99-49a9-b33a-bacb92633ecf",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has charset in content-type header\", function () {",
                      "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                      "});",
                      "",
                      "pm.test(\"response has chunked transfer encoding header\", function () {",
                      "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                      "});"
                    ],
                    "_lastExecutionId": "22f6d891-c408-4aec-8497-9856240b766c"
                  }
                }
              ]
            },
            {
              "id": "d461228b-6484-4aa6-8de7-b940895741a0",
              "name": "GZip Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "gzip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "661e59f9-3613-487f-957d-68fa0d4ffe47",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('gzipped', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'gzip')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*gzip.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "19d11193-2489-422f-9bc8-a02bf38788b8"
                  }
                }
              ]
            },
            {
              "id": "70925cff-03f6-4963-ae93-cf17ea30b355",
              "name": "Deflate Compressed Response",
              "request": {
                "description": {
                  "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "deflate"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('deflated', true);",
                      "});",
                      "",
                      "pm.test('response headers should indicate valid content encoding', function  () {",
                      "    pm.response.to.have.header('content-encoding', 'deflate')",
                      "        .and.have.header('content-type', 'application/json');",
                      "});",
                      "",
                      "pm.test('requesting http client should accept compressed response', function () {",
                      "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                      "        .and.to.match(/.*deflate.*/);",
                      "});"
                    ],
                    "_lastExecutionId": "2a602c32-7bab-42ce-9c59-511946776f02"
                  }
                }
              ]
            },
            {
              "id": "f9eecdae-5e76-4bfb-a5e6-2cb867a4a6de",
              "name": "IP address in JSON format",
              "request": {
                "description": {
                  "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "ip"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d40f774-5da9-4ce6-b080-06b0ba7bd408",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response has valid json body\", function () {",
                      "    pm.response.to.have.jsonBody('ip');",
                      "});",
                      "",
                      "pm.test(\"response must return a valid ip address\", function () {",
                      "    pm.expect(pm.response.json().ip).to",
                      "        // a really gnarly regular expression to ensure that ip address is in correct format",
                      "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                      "});"
                    ],
                    "_lastExecutionId": "41247fb2-5ea3-43e2-915b-2d10dd79600e"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1cad06cd-3942-4dca-b3f4-048027eb4bf4",
          "length": 35,
          "cycles": 3,
          "position": 20,
          "iteration": 2,
          "httpRequestId": "4be9ad82-74c0-488b-a507-5ad6596257a0",
          "scriptId": "e2332319-2292-4950-8b07-c3eaf61bb1fe",
          "execution": "2a602c32-7bab-42ce-9c59-511946776f02"
        }
      }
    ],
    "error": null
  }
}